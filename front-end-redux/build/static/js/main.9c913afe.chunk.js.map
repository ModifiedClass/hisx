{"version":3,"sources":["utils/storeUtils.js","redux/reducers/account-reducer.js","redux/reducers/index.js","redux/actiontypes.js","redux/reducers/timeline-reducer.js","redux/reducers/analysis-reducer.js","redux/reducers/oapm-reducer.js","redux/reducers/informationdevice-reducer.js","redux/reducers/setting-reducer.js","redux/reducers/tools-reducer.js","redux/reducers/bms-reducer.js","redux/store.js","api/datareq.js","api/downloadreq.js","utils/constants.js","api/index.js","redux/actions/account-action.js","containers/login/index.jsx","config/menuConfig.js","components/siderbar/index.jsx","components/linkbtn/index.jsx","utils/dateUtils.js","components/headerbar/index.jsx","components/breadcrumbbar/index.jsx","components/footerbar/index.jsx","containers/admin/dashboard/chart-processedrecord-day.jsx","redux/actions/timeline-action.js","containers/admin/dashboard/timeline.jsx","containers/admin/dashboard/chart-device.jsx","containers/admin/dashboard/chart-processedrecord.jsx","containers/admin/dashboard/index.jsx","components/editbtn/index.jsx","utils/colors.js","components/deletebtn/index.jsx","containers/admin/account/group/addform.jsx","containers/admin/account/group/authmenuform.jsx","config/operationConfig.js","containers/admin/account/group/authoperationform.jsx","containers/admin/account/group/index.jsx","containers/admin/account/department/addform.jsx","utils/departmentUtils.js","containers/admin/account/department/index.jsx","containers/admin/account/user/addform.jsx","containers/admin/account/user/departmentform.jsx","containers/admin/account/user/index.jsx","containers/admin/developing/index.jsx","redux/actions/oapm-action.js","containers/admin/oapm/problemcategory/addform.jsx","containers/admin/oapm/problemcategory/index.jsx","components/previewbtn/index.jsx","config/selectConfig.js","containers/admin/oapm/processedrecord/home.jsx","components/backbtn/index.jsx","containers/admin/oapm/processedrecord/picswall.jsx","containers/admin/oapm/processedrecord/richtexteditor.jsx","containers/admin/oapm/processedrecord/addorupdate.jsx","containers/admin/oapm/processedrecord/detail.jsx","containers/admin/oapm/processedrecord/index.jsx","redux/actions/informationdevice-action.js","containers/admin/oapm/applicationsoftWare/addform.jsx","containers/admin/oapm/applicationsoftWare/index.jsx","containers/admin/oapm/printerrepair/addform.jsx","containers/admin/oapm/printerrepair/reviewform.jsx","containers/admin/oapm/printerrepair/index.jsx","containers/admin/oapm/cartriday/addform.jsx","containers/admin/oapm/cartriday/reviewform.jsx","containers/admin/oapm/cartriday/index.jsx","containers/admin/timeline/addform.jsx","containers/admin/timeline/index.jsx","containers/admin/informationdevice/devicecategory/addform.jsx","containers/admin/informationdevice/devicecategory/index.jsx","containers/admin/informationdevice/devicemodel/addform.jsx","containers/admin/informationdevice/devicemodel/index.jsx","containers/admin/informationdevice/installlocation/addform.jsx","containers/admin/informationdevice/installlocation/index.jsx","containers/admin/informationdevice/deviceinfo/searchform.jsx","containers/admin/informationdevice/deviceinfo/home.jsx","containers/admin/informationdevice/deviceinfo/addorupdate.jsx","containers/admin/informationdevice/deviceinfo/detail.jsx","containers/admin/informationdevice/deviceinfo/index.jsx","containers/admin/analysis/zlqk/chart-zlqk.jsx","redux/actions/analysis-action.js","containers/admin/analysis/zlqk/index.jsx","containers/admin/analysis/zdqk/chart-zdqk.jsx","containers/admin/analysis/zdqk/index.jsx","containers/admin/tools/tablespace/chart-tablespace.jsx","containers/admin/tools/tablespace/index.jsx","containers/admin/tools/locktables/index.jsx","containers/admin/setting/index.jsx","redux/actions/setting-action.js","containers/admin/bms/bookcategory/addform.jsx","containers/admin/bms/bookcategory/index.jsx","containers/admin/bms/book/searchform.jsx","containers/admin/bms/book/home.jsx","containers/admin/bms/book/picswall.jsx","containers/admin/bms/book/addorupdate.jsx","containers/admin/bms/book/detail.jsx","containers/admin/bms/book/index.jsx","containers/admin/bms/bookstock/addform.jsx","containers/admin/bms/bookstock/searchform.jsx","containers/admin/bms/bookstock/index.jsx","containers/admin/bms/borrowrecord/addform.jsx","containers/admin/bms/borrowrecord/returnform.jsx","containers/admin/bms/borrowrecord/searchform.jsx","containers/admin/bms/borrowrecord/index.jsx","containers/status/404/index.jsx","containers/admin/index.jsx","App.js","serviceWorker.js","index.js"],"names":["user","store","set","get","remove","initUser","storeUtils","combineReducers","departmentReducer","state","action","type","data","msg","status","breadCrum","groupReducer","userReducer","timelineReducer","chartsReducer","applicationSoftwareReducer","problemCategoryReducer","processedRecordReducer","printerRepairReducer","cartridayReducer","devicecategoryReducer","devicemodelReducer","installlocationReducer","deviceinfoReducer","settingReducer","toolsReducer","bookcategoryReducer","bookReducer","bookstockReducer","borrowrecordReducer","createStore","reducer","applyMiddleware","thunk","obj2String","obj","arr","idx","item","URLSearchParams","toString","fetchreq","url","method","opt","toUpperCase","credentials","headers","Headers","para","JSON","stringify","mode","body","Promise","resolve","reject","fetch","then","res","json","parse","catch","error","console","log","message","fetchdownload","a","blob","window","URL","createObjectURL","document","createElement","href","fileName","split","download","decodeURIComponent","click","err","BASE_IMG_URL","cLogin","username","password","rGroups","group","couGroup","_id","dGroup","groupId","rDepartments","department","couDepartment","dDepartment","departmentId","rUsers","couUser","dUser","userId","rDeviceCategorys","devicecategory","couDeviceCategory","dDeviceCategory","devicecategoryId","rDeviceModels","devicemodel","couDeviceModel","rInstallLocations","installlocation","couInstallLocation","dInstallLocation","installlocationId","rDeviceInfos","deviceinfo","couDeviceInfo","dDeviceInfo","deviceinfoId","rProblemCategorys","problemcategory","couProblemCategory","dProblemCategory","problemcategoryId","couProcessedRecord","processedrecord","dProcessedRecord","processedrecordId","rPrinterRepairs","printerrepair","couPrinterRepair","dPrinterRepair","printerrepairId","rePrinterRepair","handlerId","rCartridays","cartriday","reCartriday","rApplicationSoftwares","applicationsoftware","couApplicationSoftware","dApplicationSoftware","applicationsoftwareId","rTimeLines","timeline","couTimeLine","dTimeLine","timelineId","chart_processedrecord_day","chart_processedrecord","chart_device","chart_bmyszlqk","startDate","endDate","chart_bmyszdqk","getzlhists","gettjxtts","getzlhistssub","tsname","gettjxttssub","gethislocktables","gettjxtlocktables","database_backup","path","clear_nginxlog","rBookCategorys","bookcategory","couBookCategory","dBookCategory","bookcategoryId","rBooks","book","couBook","dBook","bookId","rBookStocks","bookstock","couBookStock","dBookStock","bookstockId","rBorrowRecords","borrowrecord","couBorrowRecord","dBorrowRecord","borrowrecordId","setBreadCrum","receiveUser","logout","rDeps","dispatch","result","rGroupsAction","rGro","rUserAction","rUs","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","login","history","replace","this","validatePwd","rule","value","callback","length","to","getFieldDecorator","className","onSubmit","Item","rules","required","min","max","initialValue","prefix","style","color","placeholder","validator","htmlType","Component","WarpLogin","create","name","propTypes","PropTypes","object","isRequired","func","mapDispatchToProps","i","g","j","temp","menu","k","push","menus","Array","from","Set","connect","menuList","title","key","icon","isPublic","children","SubMenu","SiderBar","hasAuth","indexOf","find","child","reduceMenuNodes","location","pathname","reduce","pre","onClick","menuNodes","openKey","width","selectedKeys","defaultOpenKeys","withRouter","LinkBtn","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","shortDate","formateYear","HeaderBar","currentTime","now","getTime","intervalId","setInterval","setState","confirm","content","onOk","clearInterval","BreadCrumBar","float","fontSize","lineHeight","marginRight","FooterBar","copyrightdate","devdate","ChartPRD","legenddata","xdate","seriesdata","getOption","tooltip","trigger","axisPointer","label","backgroundColor","legend","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","minorTick","show","minorSplitLine","series","initData","option","rTls","Option","Text","DTimeLine","isShow","reverse","years","tls","ytls","handleClick","selectYear","forEach","tl","create_time","substring","initTimelines","thisyear","showDetails","tlid","details","marginBottom","defaultValue","onChange","map","year","pending","theme","visible","onCancel","ChartDevice","formatter","radius","center","sort","b","roseType","labelLine","lineStyle","smooth","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","Math","random","sum","extra","count","overflowCount","ChartPR","orient","avoidLabelOverlap","position","emphasis","fontWeight","Dashboard","background","padding","gutter","span","EditBtn","DeleteBtn","AddForm","setForm","labelCol","wrapperCol","TreeNode","AuthMenuForm","getMenus","checkedKeys","getTreeNodes","list","onCheck","treeNodes","nextProps","disabled","checkable","defaultExpandAll","operList","AuthOperationForm","getOperations","operation","opers","Group","initColums","columns","dataIndex","render","showUpdate","deleteGroup","initGroups","loading","groups","onRow","event","selectedGroup","showAdd","isShowAdd","addOrUpdateGroup","resetFields","couGro","success","dGro","showMenuAuth","isShowGM","showOperationAuth","isShowGO","GroupMenuAuth","auth","current","join","GroupOperationAuth","operations","React","createRef","bordered","rowKey","dataSource","pagination","defaultPageSize","rowSelection","selectedRowKeys","onSelect","ref","formItemLayout","code","_parent","dropdownStyle","maxHeight","overflow","treeData","departments","treeDefaultExpandAll","valuePropName","checkedChildren","unCheckedChildren","PureComponent","ptoc","resData","slice","tree","splice","run","chiArr","Department","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","node","searchInput","target","onPressEnter","handleSearch","display","size","handleReset","filterIcon","filtered","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","text","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","deleteDepartment","initDepartments","addOrUpdateDepartment","couDep","dDep","scroll","y","isSuper","DepartmentForm","getDepartments","keys","initDepartment","Number","User","groupNames","deleteUser","initGroupNames","initUsers","users","selectedUser","addOrUpdateUser","couUs","dUs","showDepartment","udShow","UserDepartment","resetPwd","recPwd","moment","locale","Developing","getDuty","thisdate","dutys","nums","getListData","num","_d","getDay","listData","thismonth","month","ds","dayshifts","changeshifts","next","dateCellRender","onPanelChange","selectyear","selectmonth","selectday","rPcs","rPrs","couPr","ProblemCategory","problemcategorys","deleteProblemCategory","initProblemCategorys","addOrUpdateProblemCategory","couPc","dPc","ShowQuickJumper","PreviewBtn","problemState","processingMode","deviceRunSystem","deviceStatus","appFrameWork","dataBase","Search","Home","onCell","maxWidth","whiteSpace","textOverflow","cursor","placement","contentBlock","htmlToDraft","contentBlocks","t","processing_mode","pm","problem_state","discoverer","problem_category","handler","fixed","deleteProcessedRecord","initProcessedRecords","pageNum","isPage","searchName","searchType","pageSize","total","processedrecords","dPr","rev","ePr","onSearch","enterButton","x","BackBtn","PicsWall","getImgs","fileList","file","handleCancel","previewVisble","handlePreview","previewImage","thumbUrl","handleChange","response","imgs","ia","index","uid","statur","uploadButton","accept","listType","onPreview","footer","alt","src","proTypes","array","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getSolution","draftToHtml","convertToRaw","getCurrentContent","upLoadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","reponseText","link","responseText","html","solution","contentState","ContentState","createFromBlockArray","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","thisDate","AddOrUpdate","handleSearchDepartments","handleSearchUsers","displayRender","submit","situation","pw","editor","seldep","isUpdate","goBack","departmentoptions","d","useroptions","ps","showSearch","showArrow","filterOption","notFoundContent","pc","autoSize","minRows","maxRows","ProcessedRecordDetail","stateDisplay","processing_modeDisplay","getstateDisplay","getprocessingModeDisplay","img","departmentNames","dep","icreate_time","istateDisplay","idepartmentId","idiscoverer","iproblem_category","iprocessing_mode","ihandler","isituation","isolution","ipic","dangerouslySetInnerHTML","__html","ProcessedRecord","component","exact","Detail","rDcs","rDms","rIls","rDis","couDi","deviceinfos","framework","database","device","ip","deployment","ApplicationSoftWare","getFramework","getDatabase","DeviceinfoNames","deleteApplicationSoftWare","String","initDeviceinfoNames","initApplicationSoftWares","rAppss","applicationsoftwares","dis","addOrUpdateApplicationSoftWare","couApps","dApps","devicecategorys","devicemodels","initDeviceCategorys","getDM","getDeviceInfos","printer","sn","ru","ReviewForm","gethandler","getHanelerNums","PrinterRepair","di","id","_handler","deletePrinterRepair","initDeviceinfos","gs","initPrinterRepairs","rPrps","printerrepairs","showReview","reviewShow","addOrUpdatePrinterRepair","couPrp","dPrp","reviewPrinterRepair","rePrp","Cartriday","deleteCartriday","initCartridays","rCds","cartridays","addOrUpdateCartriday","couCd","dCd","reviewCartriday","reCd","cartridday","cartriddayId","TimeLine","deleteTimeLine","getTimeLines","timelines","addOrUpdateTimeLine","couTl","dTl","DeviceCategory","deleteDeviceCategory","addOrUpdateDeviceCategory","couDc","dDc","DeviceModel","devicecategoryNames","deleteDeviceModel","initDevicecategoryNames","initDeviceModels","dm","addOrUpdateDeviceModel","couDm","dDm","dc","devicemodelId","InstallLocation","deleteInstallLocation","initInstallLocations","installlocations","addOrUpdateInstallLocation","couIl","dIl","SearchForm","onReset","getFormItem","setSearchItem","initSelect","marginLeft","Panel","parent","runos","runosdisplay","installdate","deleteDeviceInfo","initDeviceInfos","mac","remarks","resetForm","dDi","searchItem","header","parents","DeviceInfoDetail","statusdisplay","DeviceInfo","ChartZlqk","indicator","radar","shape","textStyle","borderRadius","chartBmyszlqkAction","chartQyzdqkAction","chartBmyszdqkAction","RangePicker","Zlqk","initqyzlqk","startdate","enddate","chartQyzlqk","qyzlqk","chartsmanage","data1","initbmzlqk","chartBmyszlqk","data2","legend2","rZyks","daonChange","dateString","dponChange","selectDepartment","legend1","extra1","extra2","xs","sm","md","lg","xl","ChartZdqk","dataset","source","Zdqk","chartQyzdqk","chartBmyszdqk","rMzks","ChartTableSpace","localTsName","localTsNames","getTsName","innerHTML","thisname","percent","strokeColor","TableSpace","hisdata","tjxtdata","initHisData","hisres","initTjxtData","tjxtres","LockTables","localdb","locktable","unlockTable","selectType","Setting","dbBackup","dbb","clearAccessLog","cnl","clearErrorLog","BookCategory","bookcategorys","deleteBookCategory","getBookCategorys","addOrUpdateBookCategory","books","author","publisher","publisheryear","deleteBook","getBooks","cover","isbn","price","profile","Book","handleSearchBooks","bookoptions","bookname","dataonChange","BookStock","bookstocks","deleteBookStock","getBookStocks","addOrUpdateBookStock","stock","result1","result2","getStock","bresult","brresult","allstock","allbr","bs","br","reader","ReturnForm","bstartdate","benddate","rstartdate","renddate","bdataonChange","rdataonChange","BorrowRecord","isShowReturn","borrowrecords","selectedBr","return_time","deleteBorrowRecord","getBorrowRecords","addOrUpdateBorrowRecord","showReturn","returnBook","localdate","NotFound","goDashboard","Header","Footer","Sider","Content","Admin","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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UACT,CACEiN,IAAI,UACJrB,KAAK,qBACL5L,OAAO,WACT,CACEiN,IAAI,WACJrB,KAAK,uCACL5L,OAAO,YACT,CACEiN,IAAI,SACJrB,KAAK,qBACL5L,OAAO,UACT,CACEiN,IAAI,eACJrB,KAAK,2BACL5L,OAAO,gBACT,CACEiN,IAAI,gBACJrB,KAAK,6CACL5L,OAAO,iBACT,CACEiN,IAAI,cACJrB,KAAK,2BACL5L,OAAO,eACT,CACEiN,IAAI,SACJrB,KAAK,2BACL5L,OAAO,UACT,CACEiN,IAAI,UACJrB,KAAK,6CACL5L,OAAO,WACT,CACEiN,IAAI,QACJrB,KAAK,2BACL5L,OAAO,WAGb,CACE4L,KAAK,2BACL5L,OAAO,oBACPoN,SAAS,CACT,CACIH,IAAI,mBACJrB,KAAK,uCACL5L,OAAO,oBACT,CACEiN,IAAI,oBACJrB,KAAK,yDACL5L,OAAO,qBACT,CACEiN,IAAI,kBACJrB,KAAK,uCACL5L,OAAO,mBACT,CACEiN,IAAI,gBACJrB,KAAK,uCACL5L,OAAO,iBACT,CACEiN,IAAI,iBACJrB,KAAK,yDACL5L,OAAO,kBACT,CACEiN,IAAI,eACJrB,KAAK,uCACL5L,OAAO,gBACT,CACEiN,IAAI,oBACJrB,KAAK,uCACL5L,OAAO,qBACT,CACEiN,IAAI,qBACJrB,KAAK,yDACL5L,OAAO,sBACT,CACEiN,IAAI,mBACJrB,KAAK,uCACL5L,OAAO,oBACT,CACEiN,IAAI,eACJrB,KAAK,uCACL5L,OAAO,gBACT,CACEiN,IAAI,gBACJrB,KAAK,yDACL5L,OAAO,iBACT,CACEiN,IAAI,cACJrB,KAAK,uCACL5L,OAAO,eACT,CACEiN,IAAI,eACJrB,KAAK,uCACL5L,OAAO,gBACT,CACEiN,IAAI,gBACJrB,KAAK,yDACL5L,OAAO,iBACT,CACEiN,IAAI,cACJrB,KAAK,uCACL5L,OAAO,iBAGb,CACE4L,KAAK,2BACL5L,OAAO,OACPoN,SAAS,CACT,CACIH,IAAI,oBACJrB,KAAK,uCACL5L,OAAO,qBACT,CACEiN,IAAI,qBACJrB,KAAK,yDACL5L,OAAO,sBACT,CACEiN,IAAI,mBACJrB,KAAK,uCACL5L,OAAO,oBACT,CACEiN,IAAI,oBACJrB,KAAK,uCACL5L,OAAO,qBACT,CACEiN,IAAI,qBACJrB,KAAK,yDACL5L,OAAO,sBACT,CACEiN,IAAI,mBACJrB,KAAK,uCACL5L,OAAO,oBACT,CACEiN,IAAI,OACJrB,KAAK,2BACL5L,OAAO,QACT,CACEiN,IAAI,kBACJrB,KAAK,6CACL5L,OAAO,mBACT,CACEiN,IAAI,mBACJrB,KAAK,+DACL5L,OAAO,oBACT,CACEiN,IAAI,iBACJrB,KAAK,6CACL5L,OAAO,kBACT,CACEiN,IAAI,kBACJrB,KAAK,6CACL5L,OAAO,mBACT,CACEiN,IAAI,cACJrB,KAAK,uCACL5L,OAAO,eACT,CACEiN,IAAI,eACJrB,KAAK,yDACL5L,OAAO,gBACT,CACEiN,IAAI,aACJrB,KAAK,uCACL5L,OAAO,cACT,CACEiN,IAAI,cACJrB,KAAK,uCACL5L,OAAO,eACT,CACEiN,IAAI,wBACJrB,KAAK,uCACL5L,OAAO,yBACT,CACEiN,IAAI,yBACJrB,KAAK,yDACL5L,OAAO,0BACT,CACEiN,IAAI,uBACJrB,KAAK,uCACL5L,OAAO,0BAGb,CACE4L,KAAK,qBACL5L,OAAO,WACPoN,SAAS,CACT,CACIH,IAAI,aACJrB,KAAK,iCACL5L,OAAO,cACT,CACEiN,IAAI,cACJrB,KAAK,mDACL5L,OAAO,eACT,CACEiN,IAAI,YACJrB,KAAK,iCACL5L,OAAO,gBCvMRqW,G,KAAAA,SAEca,G,YACjB,WAAYtN,GAAO,IAAD,uBACd,4CAAMA,KAaVuN,cAAc,kBAAI,EAAK1Z,MAAM+Y,aAdX,EAgBlBC,aAAa,SAACC,GACV,OAAOA,EAAK5I,QAAO,SAACC,EAAIpO,GAMpB,OALAoO,EAAItB,KACA,kBAAC,GAAD,CAAUO,MAAOrN,EAAKiM,KAAMqB,IAAKtN,EAAKK,QACjCL,EAAKyN,SAAW,EAAKqJ,aAAa9W,EAAKyN,UAAU,OAGnDW,IACT,KAxBY,EA0BlB4I,QAAQ,SAAAH,GACJ,EAAK9G,SAAS,CAAC8G,iBA3BD,IAIPY,EAAW,EAAKxN,MAAMhH,MAAtBwU,UAJO,OAKd,EAAK3Z,MAAM,CACP+Y,YAAYY,EAAUA,EAAUlV,MAAM,KAAKkV,GANjC,E,kFA8BdjN,KAAKyM,UAAUzM,KAAKsM,aAAaQ,M,gDAIXJ,GACtB,IAAMQ,EAAMR,EAAUjU,MAAMwU,UAC5BjN,KAAKuF,SAAS,CACV8G,YAAYa,EAAMA,EAAMnV,MAAM,KAAKmV,M,+BAIlC,IACEzU,EAAOuH,KAAKP,MAAZhH,MACA4T,EAAarM,KAAK1M,MAAlB+Y,YAKP,OACI,6BACI,sBAAM3L,KAAN,eAAWkG,MAAM,sBANJ,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAKT,uBAAOxL,MAAO1H,EAAMgJ,KAAMkL,UAAQ,KAEtC,wBACIC,WAAS,EACTC,kBAAkB,EAClBR,YAAaA,EACbG,QAASxM,KAAKwM,SAEbxM,KAAKyM,gB,GA5DqBnL,aCMzC6L,G,YACF,WAAY1N,GAAO,IAAD,8BACd,4CAAMA,KAYV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC9U,GAAD,OACP,8BACI,kBAACmT,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW/U,MAD1C,eAEI,kBAACoT,GAAD,CAAWhI,QAAS,kBAAI,EAAK4J,YAAYhV,WA9BnC,EAoClBiV,WApCkB,sBAoCP,4BAAApW,EAAA,6DACP,EAAKiO,SAAS,CAACoI,SAAQ,IADhB,SAED,EAAKlO,MAAMP,OAFV,OAGDF,EAAO,EAAKS,MAAM5L,aACxB,EAAK0R,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACqI,OAAO5O,EAAOvL,OALtB,2CApCO,EA6ClBoa,MAAM,SAACpV,GACH,MAAM,CACFoL,QAAQ,SAAAiK,GACJ,EAAKvI,SAAS,CACVwI,cAActV,OAjDZ,EAuDlBuV,QAAQ,WACJ,EAAKvV,MAAM,KACX,EAAK8M,SAAS,CACV0I,WAAU,KA1DA,EA6DlBC,iBAAiB,WACb,EAAKxO,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,IACnBxV,EAAMmH,EACZ,EAAKF,KAAKyO,cACP,EAAK1V,QACJA,EAAME,IAAI,EAAKF,MAAME,KANR,SAQX,EAAK8G,MAAM2O,OAAO3V,GARP,OAUE,KADbuG,EAAO,EAAKS,MAAM5L,cACdF,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKga,cAELtW,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iBA9Dc,EAkFlBwN,WAAW,SAAC/U,GACR,EAAKA,MAAMA,EACX,EAAK8M,SAAS,CAAC0I,WAAU,KApFX,EAuFlBR,YAAY,SAAChV,GACT,KAAM+M,QAAQ,CACV3C,MAAM,4BAAQpK,EAAMgJ,KAAK,gBACzBiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAM6O,KAAK7V,EAAME,KAD3B,OAGkB,KADbqG,EAAO,EAAKS,MAAM5L,cACdF,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKga,cAELtW,EAAA,EAAQH,MAAM+H,EAAOtL,KAPxB,2CAAD,kDAAC,MA1FK,EAsGlB6a,aAAa,WACT,EAAKhJ,SAAS,CACViJ,UAAS,KAxGC,EA2GlBC,kBAAkB,WACd,EAAKlJ,SAAS,CACVmJ,UAAS,KA7GC,EAiHlBC,cAjHkB,sBAiHJ,gCAAArX,EAAA,6DACV,EAAKiO,SAAS,CACViJ,UAAS,IAEP/V,EAAM,EAAKnF,MAAMya,cACjBxL,EAAM,EAAKqM,KAAKC,QAAQzC,WAC9B3T,EAAM2J,KAAKG,EAAMA,EAAMuM,KAAK,KAAKvM,EANvB,SAOJ,EAAK9C,MAAM2O,OAAO3V,GAPd,OASS,KADbuG,EAAO,EAAKS,MAAM5L,cACdF,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKga,cAELtW,EAAA,EAAQH,MAAM+H,EAAOtL,KAbf,2CAjHI,EAkIlBqb,mBAlIkB,sBAkIC,gCAAAzX,EAAA,6DACf,EAAKiO,SAAS,CACVmJ,UAAS,IAEPjW,EAAM,EAAKnF,MAAMya,cACjBiB,EAAW,EAAKJ,KAAKC,QAAQ7B,gBACnCvU,EAAMwU,UAAU+B,EAAWA,EAAWF,KAAK,KAAKE,EANjC,SAQT,EAAKvP,MAAM2O,OAAO3V,GART,OAUI,KADbuG,EAAO,EAAKS,MAAM5L,cACdF,QAaNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKga,cAELtW,EAAA,EAAQH,MAAM+H,EAAOtL,KA1BV,2CAhIf,EAAKkb,KAAKK,IAAMC,YAChB,EAAK5b,MAAM,CACP2a,WAAU,EACVO,UAAS,EACTE,UAAS,EACTf,SAAQ,EACRC,OAAO,GACPG,cAAc,IATJ,E,kFAiKd/N,KAAKoN,e,0CAGLpN,KAAK0N,e,+BAEA,IAAD,SAC6D1N,KAAK1M,MAA/Dsa,EADH,EACGA,OAAOD,EADV,EACUA,QAAQI,EADlB,EACkBA,cAAcE,EADhC,EACgCA,UAAUO,EAD1C,EAC0CA,SAASE,EADnD,EACmDA,SACjDjW,EAAMuH,KAAKvH,OAAO,GAClBoK,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,kBAAzD,gBADJ,WAEI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKuO,aAAc5B,UAAWoB,EAAcpV,KAAK,uBAAMnF,KAAK,SAA5F,4BAFJ,WAGI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKyO,kBAAmB9B,UAAWoB,EAAcpV,KAAK,uBAAMnF,KAAK,SAAjG,6BAET,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYzB,EACZP,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBxBvMN,IwBwMPC,aAAc,CACVhc,KAAK,QACLic,gBAAgB,CAAC1B,EAAcpV,KAC/B+W,SAAS,SAACjX,GACN,EAAK8M,SAAS,CACVwI,cAActV,MAI1BoV,MAAO7N,KAAK6N,QAEZ,wBACEhL,MAAOpK,EAAME,IAAM,qBAAQ,qBAC3B6Q,QAASyE,EACTvI,KAAM1F,KAAKkO,iBACXzE,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOjH,MAAOA,KAEvD,wBACEoK,MAAM,2BACN2G,QAASgF,EACT9I,KAAM1F,KAAK2O,cACXlF,SAAU,WACN,EAAKlE,SAAS,CAACiJ,UAAS,MAG1B,kBAAC,GAAD,CACAmB,IAAK3P,KAAK4O,KACVnW,MAAOsV,KAGX,wBACElL,MAAM,2BACN2G,QAASkF,EACThJ,KAAM1F,KAAK+O,mBACXtF,SAAU,WACN,EAAKlE,SAAS,CAACmJ,UAAS,MAG9B,kBAAC,GAAD,CAAmBiB,IAAK3P,KAAK4O,KAAMnW,MAAOsV,U,GApOtCzM,aAwPdS,GAAqB,CAAC7C,QAAKkP,OtBnIX,SAAA3V,GAAK,8CAAI,WAAMsG,GAAN,eAAAzH,EAAA,sEACRoB,EAASD,GADD,OACrBuG,EADqB,OAE3BD,GAPqBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACpCH,KbzGmB,Ya0GnBE,MACAC,YAE2B,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDsBmIa2a,KtBxHpB,SAAAzV,GAAO,8CAAI,WAAMkG,GAAN,eAAAzH,EAAA,sEACNsB,EAAOC,GADD,OACrBmG,EADqB,OAE3BD,GAPmBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAClCH,KblHmB,YamHnBE,MACAC,YAE2B,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDsB0HZgP,gBARS,SAAArP,GACpB,MAAO,CACHO,aAAaP,EAAMO,gBAQvBkO,GAFWY,CAGbwK,I,yDCvQIzM,GAAK,IAAKA,KAEVoL,G,6LASE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACE3G,EAAYiH,KAAKP,MAAjB1G,WACAwH,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,2BACI,kBAAC,GAAD,eAAM/E,MAAM,4BAAWgJ,GAEnBrP,EAAkB,OAAO,CACrBQ,aAAahI,EAAW0I,KACxBd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,wDAI3B,kBAAC,GAAD,eAAMyF,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAahI,EAAW8W,KACxBlP,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,uBAAOY,YAAY,sCAI3B,kBAAC,GAAD,eAAMyF,MAAM,4BAAWgJ,GAEnBrP,EAAkB,UAAU,CACxBQ,aAAahI,EAAW+W,SAD5BvP,CAGI,wBACAU,MAAO,CAAE+C,MAAO,QAChB+L,cAAe,CAAEC,UAAW,IAAKC,SAAU,QAC3CC,SAAUlQ,KAAKP,MAAM0Q,YACrBhP,YAAY,2BACZiP,sBAAoB,EACpBjH,SAAUnJ,KAAKmJ,aAIvB,kBAAC,GAAD,eAAMvC,MAAM,gBAASgJ,GAEjBrP,EAAkB,SAAU,CACxB8P,cAAe,UACftP,aAAahI,EAAWpF,QAF5B4M,CAII,wBAAQ+P,gBAAgB,eAAKC,kBAAkB,wB,GAlEjDC,iBAyEP,OAAKhP,QAAL,CAAcsK,I,qBChFtB,SAAS2E,GAAKhd,GAIb,IAHA,IAAIid,EAAUjd,EAAKkd,QACfC,EAAO,GAEF5O,EAAI,EAAGA,EAAI0O,EAAQrQ,OAAQ2B,IAChC,GAA2B,OAAvB0O,EAAQ1O,GAAG8N,QAAkB,CAC7B,IAAIza,EAAM,CACNsD,IAAK+X,EAAQ1O,GAAGrJ,IAChBwH,MAAOuQ,EAAQ1O,GAAGrJ,IAClBmK,IAAK4N,EAAQ1O,GAAGrJ,IAChB8I,KAAMiP,EAAQ1O,GAAGP,KACjBoB,MAAO6N,EAAQ1O,GAAGP,KAClBoO,KAAMa,EAAQ1O,GAAG6N,KACjBnH,YAAagI,EAAQ1O,GAAG0G,YACxB/U,OAAQ+c,EAAQ1O,GAAGrO,OACnBmc,QAASY,EAAQ1O,GAAG8N,QACpB7M,SAAU,IAEd2N,EAAKtO,KAAKjN,GACVqb,EAAQG,OAAO7O,EAAG,GAClBA,IA+BR,OA1BA,SAAS8O,EAAIC,GACT,GAAuB,IAAnBL,EAAQrQ,OACR,IAAK,IAAI2B,EAAI,EAAGA,EAAI+O,EAAO1Q,OAAQ2B,IAAK,CACpC,IAAK,IAAIE,EAAI,EAAGA,EAAIwO,EAAQrQ,OAAQ6B,IAChC,GAAI6O,EAAO/O,GAAGrJ,MAAQ+X,EAAQxO,GAAG4N,QAAS,CACtC,IAAIza,EAAM,CACNsD,IAAK+X,EAAQxO,GAAGvJ,IAChBmK,IAAK4N,EAAQxO,GAAGvJ,IAChBwH,MAAOuQ,EAAQxO,GAAGvJ,IAClBkK,MAAO6N,EAAQxO,GAAGT,KAClBA,KAAMiP,EAAQxO,GAAGT,KACjBoO,KAAMa,EAAQxO,GAAG2N,KACjBnH,YAAagI,EAAQxO,GAAGwG,YACxB/U,OAAQ+c,EAAQxO,GAAGvO,OACnBmc,QAASY,EAAQxO,GAAG4N,QACpB7M,SAAU,IAEd8N,EAAO/O,GAAGiB,SAASX,KAAKjN,GACxBqb,EAAQG,OAAO3O,EAAG,GAClBA,IAGR4O,EAAIC,EAAO/O,GAAGiB,WAvB1B6N,CAAIF,GA2BGA,E,ICrCTI,G,YACF,WAAYvR,GAAO,IAAD,8BACd,4CAAMA,KASVwR,qBAAuB,SAAA3D,GAAS,MAAK,CACjC4D,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBlN,EAApB,EAAoBA,aAAcuB,EAAlC,EAAkCA,QAAS4L,EAA3C,EAA2CA,aAA3C,OACZ,yBAAKnQ,MAAO,CAAEwK,QAAS,IACnB,uBACEkE,IAAK,SAAA0B,GACH,EAAKC,YAAcD,GAErBlQ,YAAW,iBAAYmM,GACvBnN,MAAO8D,EAAa,GACpBkF,SAAU,SAAA5J,GAAC,OAAI4R,EAAgB5R,EAAEgS,OAAOpR,MAAQ,CAACZ,EAAEgS,OAAOpR,OAAS,KACnEqR,aAAc,kBAAM,EAAKC,aAAaxN,EAAcuB,EAAS8H,IAC7DrM,MAAO,CAAE+C,MAAO,IAAKiF,aAAc,EAAGyI,QAAS,WAEjD,uBACEle,KAAK,UACLqQ,QAAS,kBAAM,EAAK4N,aAAaxN,EAAcuB,EAAS8H,IACxDvK,KAAK,SACL4O,KAAK,QACL1Q,MAAO,CAAE+C,MAAO,GAAIgC,YAAa,IALnC,UASA,uBAAQnC,QAAS,kBAAM,EAAK+N,YAAYR,IAAeO,KAAK,QAAQ1Q,MAAO,CAAE+C,MAAO,KAApF,WAKR6N,WAAY,SAAAC,GAAQ,OAChB,uBAAMte,KAAK,SAASyN,MAAO,CAAEC,MAAO4Q,EAAW,eAAYC,MAE/DC,SAAU,SAAC7R,EAAO8R,GAAR,OACNA,EAAO3E,GACN5X,WACAwc,cACAC,SAAShS,EAAM+R,gBAChBE,8BAA+B,SAAA5I,GACvBA,GACA6I,YAAW,kBAAM,EAAKf,YAAYgB,aAG9C/E,OAAQ,SAAAgF,GAAI,OACR,EAAKjf,MAAMkf,iBAAmBlF,EAC1B,kBAAC,KAAD,CACEmF,eAAgB,CAAE5L,gBAAiB,UAAW4E,QAAS,GACvDiH,YAAa,CAAC,EAAKpf,MAAMqf,YACzBC,YAAU,EACVC,gBAAiBN,EAAK7c,aAGxB6c,KA3DM,EA+DlBd,aAAe,SAACxN,EAAcuB,EAAS8H,GACnC9H,IACA,EAAKD,SAAS,CACVoN,WAAY1O,EAAa,GACzBuO,eAAgBlF,KAnEN,EAuElBsE,YAAc,SAAAR,GACVA,IACA,EAAK7L,SAAS,CAAEoN,WAAY,MAzEd,EA4ElBvF,WAAW,WACP,EAAKC,QAAQ,CAAC,aAEVxK,MAAM,eACNyK,UAAU,QACP,EAAK2D,qBAAqB,SAJpB,aAOTpO,MAAM,eACNyK,UAAU,QACP,EAAK2D,qBAAqB,SAEjC,CACIpO,MAAM,eACNyK,UAAU,SACVC,OAAO,SAAC5Z,GACJ,OAAGA,EAEK,8BACI,wBAAKuN,MTzGT,WSyGI,iBAKJ,8BACI,wBAAKA,MT9GR,WS8GG,mBAMpB,CACI2B,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAACxU,GAAD,OACP,8BACI,kBAAC6S,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWzU,MAD1C,eAEI,kBAAC8S,GAAD,CAAWhI,QAAS,kBAAI,EAAKiP,iBAAiB/Z,WAtHxC,EA6HlBga,gBA7HkB,sBA6HA,8BAAAzb,EAAA,6DACd,EAAKiO,SAAS,CAACoI,SAAQ,IADT,SAER,EAAKlO,MAAMX,QAFH,OAGRrL,EAAK,EAAKgM,MAAMpM,kBAAkBI,KAClC0c,EAAcM,GAAKhd,GACzB,EAAK8R,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAAC4K,gBAND,2CA7HA,EAsIlBnC,QAAQ,WACJ,EAAKjV,WAAW,KAChB,EAAKwM,SAAS,CAAC0C,QAAO,KAxIR,EA2IlBuF,WAAW,SAACzU,GACR,EAAKA,WAAWA,EAChB,EAAKwM,SAAS,CAAC0C,QAAO,KA7IR,EAgJlB+K,sBAAsB,WAClB,EAAKtT,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,wBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,IAChBlP,EAAW6G,EACjB,EAAKF,KAAKyO,cACP,EAAKpV,aACJA,EAAWJ,IAAI,EAAKI,WAAWJ,KAEhCI,EAAWpF,OACVoF,EAAWpF,QAAO,EAElBoF,EAAWpF,QAAO,EAXL,SAYX,EAAK8L,MAAMwT,OAAOla,GAZP,OAcE,KADbiG,EAAO,EAAKS,MAAMpM,mBACdM,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqf,mBAEL3b,EAAA,EAAQH,MAAM+H,EAAOtL,KAlBR,4CAAzB,oCAAAsM,KAAA,iBAjJc,EAyKlB8S,iBAAiB,SAAC/Z,GACd,KAAMyM,QAAQ,CACV3C,MAAM,2BAAO9J,EAAW0I,KAAK,eAC7BiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMyT,KAAKna,EAAWJ,KADhC,OAGkB,KADbqG,EAAO,EAAKS,MAAMpM,mBACdM,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqf,mBAEL3b,EAAA,EAAQH,MAAM+H,EAAOtL,KAPxB,2CAAD,kDAAC,MA1KT,EAAKJ,MAAM,CACPqa,SAAQ,EACR1F,QAAO,EACP0K,WAAY,GACZH,eAAgB,IANN,E,kFA0LdxS,KAAKoN,e,0CAGLpN,KAAK+S,oB,+BAEA,IAAD,SACmB/S,KAAK1M,MAArBqa,EADH,EACGA,QAAQ1F,EADX,EACWA,OACTlP,EAAWiH,KAAKjH,YAAY,GAC5B8J,EAAM,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,cAAzD,gBACZ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYrP,KAAKP,MAAMpM,kBAAkBI,KACzC4Z,QAASrN,KAAKqN,QACdiC,YAAY,EACZ6D,OAAQ,CAAEC,EAAG,OAGb,wBACEvQ,MAAO9J,EAAWJ,IAAM,2BAAS,2BACjC6Q,QAASvB,EACTvC,KAAM1F,KAAKgT,sBACXvJ,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5B3G,WAAYA,EACZoX,YAAanQ,KAAKP,MAAMpM,kBAAkBI,a,GA5NrC6N,aAiPnBS,GAAqB,CAACjD,SAAMmU,OzB9JZ,SAAAla,GAAU,8CAAI,WAAMgG,GAAN,eAAAzH,EAAA,sEACb0B,EAAcD,GADD,OAC1BiG,EAD0B,OAEhCD,GAP0BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACzCH,Kb5EwB,iBa6ExBE,MACAC,YAEgC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDyB8JSuf,KzBnJrB,SAAAha,GAAY,8CAAI,WAAM6F,GAAN,eAAAzH,EAAA,sEACX2B,EAAYC,GADD,OAC1B8F,EAD0B,OAEhCD,GAPwBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACvCH,KbrFwB,iBasFxBE,MACAC,YAEgC,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDyBqJjBgP,gBARS,SAAArP,GACpB,MAAO,CACHD,kBAAkBC,EAAMD,qBAQ5B0O,GAFWY,CAGbqO,IC/PItQ,GAAK,IAAKA,KACVoH,GAAO,KAAOA,OAEdgE,G,6LASE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IAAD,EACgBM,KAAKP,MAAlBmO,EADH,EACGA,OAAO/a,EADV,EACUA,KACP0N,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,2BACI,kBAAC,GAAD,eAAM/E,MAAM,sBAAUgJ,GAElBrP,EAAkB,WAAW,CACzBQ,aAAalO,EAAKyF,SAClBqI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,iDAH3BmJ,CAMoB,UAAhB1N,EAAKyF,SAAmB,uBAAOqU,UAAQ,IAAG,uBAAOxL,YAAY,4CAIpEtO,EAAK8F,IAAM,KACR,kBAAC,GAAD,eAAMiO,MAAM,gBAASgJ,GAErBrP,EAAkB,WAAW,CACzBQ,aAAalO,EAAK0F,SAClBoI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,uBAAOY,YAAY,kCAAS3N,KAAK,eAKzC,kBAAC,GAAD,eAAMoT,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAalO,EAAK4O,KAClBd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,uBAAOY,YAAY,sCAI3B,kBAAC,GAAD,eAAMyF,MAAM,sBAAUgJ,GAElBrP,EAAkB,QAAQ,CACtBQ,aAAalO,EAAK4F,MAClBkI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,wBAAQjK,KAAK,YAETsX,EAAOxE,KAAI,SAAA3Q,GAAK,OAAE,kBAAC,GAAD,CAAQqK,IAAKrK,EAAME,IAAKwH,MAAO1H,EAAME,KAAMF,EAAMgJ,YAM/E,kBAAC,GAAD,eAAMmF,MAAM,4BAAWgJ,GAEnBrP,EAAkB,UAAW,CACzB8P,cAAe,UACftP,eAAalO,EAAKwgB,SAAQxgB,EAAKwgB,SAFnC9S,CAII,oC,GAjFFiQ,iBAwFP,OAAKhP,QAAL,CAAcsK,IC3FtBI,G,KAAAA,SAEcoH,G,YACjB,WAAY7T,GAAO,IAAD,uBACd,4CAAMA,KAiBV8T,eAAe,kBAAI,EAAKjgB,MAAM+Y,aAlBZ,EAoBlBC,aAAa,SAAAC,GACT,OAAOA,EAAKA,EAAK5I,QAAO,SAACC,EAAIpO,GAMzB,OALAoO,EAAItB,KACA,kBAAC,GAAD,CAAUO,MAAOrN,EAAKiM,KAAMqB,IAAKtN,EAAKmD,KACjCnD,EAAKyN,SAAW,EAAKqJ,aAAa9W,EAAKyN,UAAU,OAGnDW,IACT,IAAI,IA5BQ,EA8BlB4I,QAAQ,SAAAH,GACJ,EAAK9G,SAAS,CAAC8G,iBA/BD,IAGPtT,EAAY,EAAK0G,MAAM5M,KAAvBkG,WACHya,EAAK,GACT,IAAI,IAAI1Q,KAAO/J,EACXya,EAAKlR,KAAKvJ,EAAW+J,GAAKnK,KANhB,OAQd,EAAKrF,MAAM,CACP+Y,YAAYmH,GATF,E,kFAmCdxT,KAAKyM,UAAUzM,KAAKsM,aAAatM,KAAKP,MAAMgU,kB,gDAItB/G,GACtB,IAAMyD,EAAYzD,EAAU7Z,KAAKkG,WAC7Bya,EAAK,GACT,IAAI,IAAI1Q,KAAOqN,EACmB,kBAApBA,EAAYrN,IAA6C,kBAApBqN,EAAYrN,GACvD0Q,EAAKlR,KAAKoR,OAAOvD,EAAYrN,KAE7B0Q,EAAKlR,KAAKoR,OAAOvD,EAAYrN,GAAKnK,MAG1CqH,KAAKuF,SAAS,CACV8G,YAAYmH,M,+BAIX,IACE3gB,EAAMmN,KAAKP,MAAX5M,KACAwZ,EAAarM,KAAK1M,MAAlB+Y,YAKP,OACI,6BACI,sBAAM3L,KAAN,eAAWkG,MAAM,sBANJ,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAKT,uBAAOxL,MAAOtN,EAAKyF,SAAUqU,UAAQ,KAEzC,wBACIC,WAAS,EACTC,kBAAkB,EAClBR,YAAaA,EACbG,QAASxM,KAAKwM,SAEbxM,KAAKyM,gB,GAzEkBnL,aCQtCqS,G,YACF,WAAYlU,GAAO,IAAD,8BACd,4CAAMA,KAaVwR,qBAAuB,SAAA3D,GAAS,MAAK,CACjC4D,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBlN,EAApB,EAAoBA,aAAcuB,EAAlC,EAAkCA,QAAS4L,EAA3C,EAA2CA,aAA3C,OACZ,yBAAKnQ,MAAO,CAAEwK,QAAS,IACnB,uBACEkE,IAAK,SAAA0B,GACH,EAAKC,YAAcD,GAErBlQ,YAAW,iBAAYmM,GACvBnN,MAAO8D,EAAa,GACpBkF,SAAU,SAAA5J,GAAC,OAAI4R,EAAgB5R,EAAEgS,OAAOpR,MAAQ,CAACZ,EAAEgS,OAAOpR,OAAS,KACnEqR,aAAc,kBAAM,EAAKC,aAAaxN,EAAcuB,EAAS8H,IAC7DrM,MAAO,CAAE+C,MAAO,IAAKiF,aAAc,EAAGyI,QAAS,WAEjD,uBACEle,KAAK,UACLqQ,QAAS,kBAAM,EAAK4N,aAAaxN,EAAcuB,EAAS8H,IACxDvK,KAAK,SACL4O,KAAK,QACL1Q,MAAO,CAAE+C,MAAO,GAAIgC,YAAa,IALnC,UASA,uBAAQnC,QAAS,kBAAM,EAAK+N,YAAYR,IAAeO,KAAK,QAAQ1Q,MAAO,CAAE+C,MAAO,KAApF,WAKR6N,WAAY,SAAAC,GAAQ,OAChB,uBAAMte,KAAK,SAASyN,MAAO,CAAEC,MAAO4Q,EAAW,eAAYC,MAE/DC,SAAU,SAAC7R,EAAO8R,GAAR,OACNA,EAAO3E,GACN5X,WACAwc,cACAC,SAAShS,EAAM+R,gBAChBE,8BAA+B,SAAA5I,GACvBA,GACA6I,YAAW,kBAAM,EAAKf,YAAYgB,aAG9C/E,OAAQ,SAAAgF,GAAI,OACR,EAAKjf,MAAMkf,iBAAmBlF,EAC1B,kBAAC,KAAD,CACEmF,eAAgB,CAAE5L,gBAAiB,UAAW4E,QAAS,GACvDiH,YAAa,CAAC,EAAKpf,MAAMqf,YACzBC,YAAU,EACVC,gBAAiBN,EAAK7c,aAGxB6c,KA/DM,EAmElBd,aAAe,SAACxN,EAAcuB,EAAS8H,GACnC9H,IACA,EAAKD,SAAS,CACVoN,WAAY1O,EAAa,GACzBuO,eAAgBlF,KAvEN,EA2ElBsE,YAAc,SAAAR,GACVA,IACA,EAAK7L,SAAS,CAAEoN,WAAY,MA7Ed,EAgFlBvF,WAAW,WACP,EAAKC,QAAQ,CAAC,aAEVxK,MAAM,qBACNyK,UAAU,YACP,EAAK2D,qBAAqB,aAEjC,CACIpO,MAAM,eACNyK,UAAU,YARD,aAWTzK,MAAM,eACNyK,UAAU,QACP,EAAK2D,qBAAqB,SAEjC,CACIpO,MAAM,qBACNyK,UAAU,QACVC,OAAO,SAAC9U,GAEJ,IADA,IAAIuG,EAAO,GACHgD,EAAE,EAAEA,EAAEvJ,EAAM4H,OAAO2B,IACvB,IAAI,IAAIc,KAAO,EAAK8Q,WACb9Q,EAAIpN,aAAa+C,EAAMuJ,GAAGtM,YACzBsJ,EAAOsD,KAAK,EAAKsR,WAAW9Q,GAAK,KAI7C,OAAO9D,IAGf,CACI6D,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC1a,GAAD,OACP,8BACI,kBAAC+Y,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW3a,MAD1C,eAEI,kBAACgZ,GAAD,CAAWhI,QAAS,kBAAI,EAAKgQ,WAAWhhB,WA1HlC,EAiIlBihB,eAAe,SAAClG,GACZ,IAAMgG,EAAWhG,EAAQA,EAAOjK,QAAO,SAACC,EAAInL,GAExC,OADAmL,EAAInL,EAAME,KAAKF,EAAMgJ,KACdmC,IACT,IAAI,GACN,EAAKgQ,WAAWA,GAtIF,EAyIlBG,UAzIkB,sBAyIR,8BAAAzc,EAAA,6DACN,EAAKiO,SAAS,CAACoI,SAAQ,IADjB,SAEA,EAAKlO,MAAML,MAFX,cAGAJ,EAAO,EAAKS,MAAM3L,YAAYL,KACpC,EAAK8R,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACyO,MAAMhV,IALf,SAOA,EAAKS,MAAMP,OAPX,OAQA0O,EAAO,EAAKnO,MAAM5L,aAAaJ,KACrC,EAAKqgB,eAAelG,GACpB,EAAKrI,SAAS,CAACqI,OAAOA,IAVhB,4CAzIQ,EAsJlBC,MAAM,SAAChb,GACH,MAAM,CACFgR,QAAQ,SAAAiK,GACJ,EAAKvI,SAAS,CACV0O,aAAaphB,OA1JX,EAgKlBqhB,gBAAgB,WACZ,EAAKxU,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,IAEhBpV,EAAK+M,EACX,EAAKF,KAAKyO,cACP,EAAKtb,OACJA,EAAK8F,IAAI,EAAK9F,KAAK8F,KAPN,SASX,EAAK8G,MAAM0U,MAAMthB,GATN,OAWE,KADbmM,EAAO,EAAKS,MAAM3L,aACdH,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqgB,aAEL3c,EAAA,EAAQH,MAAM+H,EAAOtL,KAfR,2CAAzB,oCAAAsM,KAAA,iBAjKc,EAsLlBgO,QAAQ,WACJ,EAAKnb,KAAK,KACV,EAAK0S,SAAS,CAAC0C,QAAO,KAxLR,EA2LlBuF,WAAW,SAAC3a,GACR,EAAKA,KAAKA,EACV,EAAK0S,SAAS,CAAC0C,QAAO,KA7LR,EAgMlB4L,WAAW,SAAChhB,GACW,UAAhBA,EAAKyF,SACJlB,EAAA,EAAQH,MAAM,0DAEd,KAAMuO,QAAQ,CACV3C,MAAM,4BAAQhQ,EAAKyF,SAAS,gBAC5BoN,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAM2U,IAAIvhB,EAAK8F,KADzB,OAGkB,KADbqG,EAAO,EAAKS,MAAM3L,aACdH,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqgB,aAEL3c,EAAA,EAAQH,MAAM+H,EAAOtL,KAPxB,2CAAD,kDAAC,MAtMC,EAoNlB2gB,eApNkB,sBAoNH,4BAAA/c,EAAA,sEACL,EAAKmI,MAAMX,QADN,OAELE,EAAO,EAAKS,MAAMpM,kBACxB,EAAKkS,SAAS,CACV+O,QAAO,EACPb,eAAezU,EAAOyR,GAAKzR,EAAOvL,MAAM,KALjC,2CApNG,EA6NlB8gB,eA7NkB,sBA6NH,gCAAAjd,EAAA,6DACX,EAAKiO,SAAS,CACV+O,QAAO,IAELzhB,EAAK,EAAKS,MAAM2gB,aAChB9D,EAAY,EAAKvB,KAAKC,QAAQ0E,iBACpC1gB,EAAKkG,WAAWoX,EANL,SAQL,EAAK1Q,MAAM0U,MAAMthB,GARZ,OAUQ,KADbmM,EAAO,EAAKS,MAAM3L,aACdH,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqgB,aAEL3c,EAAA,EAAQH,MAAM+H,EAAOtL,KAdd,2CA7NG,EA+OlB8gB,SAAS,WACL,IAAMlc,EAAS,EAAKhF,MAAM2gB,aAAa3b,SACzB,UAAXA,EACClB,EAAA,EAAQH,MAAM,0DAEd,KAAMuO,QAAQ,CACV3C,MAAM,4BAAQvK,EAAS,gBACvBoN,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMgV,OAAOnc,GADvB,OAGkB,KADb0G,EAAO,EAAKS,MAAM3L,aACdH,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKqgB,aAEL3c,EAAA,EAAQH,MAAM+H,EAAOtL,KAPxB,2CAAD,kDAAC,MApPb,EAAKkb,KAAKK,IAAMC,YAChB,EAAK5b,MAAM,CACP2U,QAAO,EACPqM,QAAO,EACP3G,SAAQ,EACRqG,MAAM,GACNpG,OAAO,GACPqG,aAAa,GACbR,eAAe,IAVL,E,kFAqQdzT,KAAKoN,e,0CAILpN,KAAK+T,c,+BAEA,IAAD,SACmE/T,KAAK1M,MAArE0gB,EADH,EACGA,MAAMpG,EADT,EACSA,OAAOqG,EADhB,EACgBA,aAAaR,EAD7B,EAC6BA,eAAe9F,EAD5C,EAC4CA,QAAQ1F,EADpD,EACoDA,OAAOqM,EAD3D,EAC2DA,OACzDzhB,EAAKmN,KAAKnN,MAAM,GAChBgQ,EACF,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,aAAzD,gBADJ,WAEI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKqU,eAAgB1H,UAAWsH,EAAatb,KAAK,uBAAMnF,KAAK,cAA7F,4BAFJ,WAGI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKwU,SAAU7H,UAAWsH,EAAatb,KAAK,uBAAMnF,KAAK,SAAvF,6BAGR,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAY2E,EACZ3G,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gB9B7SN,I8B8SHC,aAAc,CACdhc,KAAK,QACLic,gBAAgB,CAACwE,EAAatb,KAC9B+W,SAAS,SAAC7c,GACN,EAAK0S,SAAS,CACV0O,aAAaphB,MAIzBgb,MAAO7N,KAAK6N,QAEZ,wBACEhL,MAAOhQ,EAAK8F,IAAM,2BAAS,2BAC3B6Q,QAASvB,EACTvC,KAAM1F,KAAKkU,gBACXzK,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA2F,OAAQA,EACR7B,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5B7M,KAAMA,KAGV,wBACEgQ,MAAM,2BACN2G,QAAS8K,EACT5O,KAAM1F,KAAKuU,eACX9K,SAAU,WACN,EAAKlE,SAAS,CAAC+O,QAAO,EAAMb,eAAe,OAG7C,kBAAC,GAAD,CAAgB9D,IAAK3P,KAAK4O,KAAM6E,eAAgBA,EAAgB5gB,KAAMohB,U,GAjUvE3S,aA4VbS,GAAqB,CACvB3C,OACA+U,M5BtMiB,SAAAthB,GAAI,8CAAI,WAAMkM,GAAN,eAAAzH,EAAA,sEACN8B,EAAQvG,GADF,OACnBmM,EADmB,OAEzBD,GAPoBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACnCH,KbtIkB,WauIlBE,MACAC,YAEyB,iCALN,IAACD,EAAIC,IAKC,OAAJ,uD4BuMrBygB,I5B5Le,SAAA9a,GAAM,8CAAI,WAAMyF,GAAN,eAAAzH,EAAA,sEACJ+B,EAAMC,GADF,OACnB0F,EADmB,OAEzBD,GAPkBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACjCH,Kb/IkB,WagJlBE,MACAC,YAEyB,iCALR,IAACD,EAAIC,IAKG,OAAJ,uD4B6LrBuL,QACAJ,SACA2V,O5BpLgB,SAAA5hB,GAAI,8CAAE,WAAMkM,GAAN,eAAAzH,EAAA,sEDtLM3B,EAAc,qBAAqB,CAAC2C,SCuLtCzF,GDvLgD,SCsLpD,OAChBmM,EADgB,OAEtBD,GAPgBrL,EAOMsL,EAAOtL,IAPTC,EAOaqL,EAAOrL,OAPV,CAC9BH,KbxJiB,UayJjBE,MACAC,YAEsB,iCALP,IAACD,EAAIC,IAKE,OAAF,wD4BuLTgP,gBAjBS,SAAArP,GACpB,MAAO,CACHQ,YAAYR,EAAMQ,YAClBD,aAAaP,EAAMO,aACnBR,kBAAkBC,EAAMD,qBAe5B0O,GAFWY,CAGbgR,I,+CChXFe,KAAOC,OAAO,S,IAGOC,G,YACjB,WAAYnV,GAAO,IAAD,uBACd,4CAAMA,KAWVoV,QAAQ,SAACC,EAASC,EAAMC,KAZN,EAiDlBC,YAAY,SAAC9U,GAET,IAAM+U,EAAI/U,EAAMgV,GAAGC,SACbC,EAAS,GACTP,EAAS,IAAItQ,KACb8Q,EAAUR,EAASpQ,WACnBmE,EAASiM,EAASrQ,cACxB,GAAGtE,EAAMoV,UAAUD,GAAWnV,EAAMkJ,SAASR,EACzC,GAAS,IAANqM,GAAe,IAANA,EAAQ,CAEhB,IADA,IAAIM,EAAG,GACCtT,EAAE,EAAEA,EAAE,EAAK5O,MAAMmiB,UAAUpV,OAAO6B,IACtCsT,GAAI,EAAKliB,MAAMmiB,UAAUvT,GAAG,IAEhCmT,EAAS/S,KAAK,CAAE9O,KAAM,UAAWiS,QAAS+P,EAAG7M,UAAU,EAAE6M,EAAGnV,OAAO,KACnEgV,EAAS/S,KAAK,CAAE9O,KAAM,UAAWiS,QAAS,EAAKnS,MAAMoiB,aAAa,EAAK3K,OAAOtJ,YAE9E4T,EAAS/S,KAAK,CAAE9O,KAAM,UAAWiS,QAAS,EAAKnS,MAAMoiB,aAAa,EAAK3K,OAAOtJ,OAItF,OADA,EAAKsJ,MAAM,EAAKzX,MAAMoiB,aAAa,EAAK3K,OAAO4K,KACxCN,GAAY,IArEL,EAwElBO,eAAe,SAACzV,GACd,IAAMkV,EAAW,EAAKJ,YAAY9U,GAClC,OACE,wBAAIK,UAAU,UACX6U,EAASjM,KAAI,SAAA5T,GAAI,OAChB,wBAAIsN,IAAKtN,EAAKiQ,SACZ,wBAAO9R,OAAQ6B,EAAKhC,KAAM+e,KAAM/c,EAAKiQ,gBA9E7B,EAoFlBoQ,cAAc,SAAC1V,GACXjJ,QAAQC,IAAIgJ,GACZ,EAAKoF,SAAS,CACVuQ,WAAW3V,EAAMkJ,OACjB0M,YAAY5V,EAAMoV,QAAQ,EAC1BS,UAAU7V,EAAMoE,UAzFN,EA4FlBoD,SAAS,aA5FS,EAiGlB+H,SAAS,SAACvP,GACNjJ,QAAQC,IAAIgJ,GACZjJ,QAAQC,IAAIgJ,EAAMkJ,SAjGlB,IAAM9E,EAAK,IAAIC,KAFD,OAGd,EAAKlR,MAAM,CACPwiB,WAAWvR,EAAKE,cAChBsR,YAAYxR,EAAKG,WAAW,EAC5BsR,UAAUzR,EAAKI,UACf8Q,UAAU,CAAC,sBAAO,sBAAO,uBACzBC,aAAa,CAAC,CAAC,IAAM,EAAE,KAAO,gBAAM,KAAO,GAAG,CAAC,IAAM,EAAE,KAAO,gBAAM,KAAO,GAAG,CAAC,IAAM,EAAE,KAAO,gBAAM,KAAO,KAE/G,EAAK3K,MAAM,EAVG,E,kFAwGd/K,KAAK2H,a,+BAEA,IAAD,EACqC3H,KAAK1M,MACxCuP,EAFF,EACGiT,WACgB,IAFnB,EACcC,YACqB,IAFnC,EAC0BC,UAE9B,OACI,wBAAMnT,MAAOA,GACT,wBACA+S,eAAgB5V,KAAK4V,eACrBC,cAAe7V,KAAK6V,cACpBnG,SAAU1P,KAAK0P,gB,GAnHSpO,aC6E3B2U,GAAO,SAAAvb,GAAe,8CAAI,WAAMqE,GAAN,eAAAzH,EAAA,sEACdmD,GAAkBC,GADJ,OAEd,KADfsE,EAD6B,QAEzBrL,QACNoL,EAPgC,CACpCvL,K3Cb6B,sB2Cc7BC,KAKqCuL,EAAOvL,OAHT,2CAAJ,uDA+BtByiB,GAAO,SAAAnb,GAAe,8CAAI,WAAMgE,GAAN,eAAAzH,EAAA,sE/B3CW3B,EAAc,6B+B4CrBoF,GADJ,OAEd,KADfiE,EAD6B,QAEzBrL,QACNoL,EAPgC,CACpCvL,K3CtC6B,sB2CuC7BC,KAKqCuL,EAAOvL,OAHT,2CAAJ,uDAYtB0iB,GAAQ,SAAApb,GAAe,8CAAI,WAAMgE,GAAN,eAAAzH,EAAA,sEACjBwD,GAAmBC,GADF,OAC9BiE,EAD8B,OAEpCD,GAP8BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC7CH,K3C/C6B,sB2CgD7BE,MACAC,YAEoC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDC7H9B+M,GAAK,IAAKA,KAEVoL,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEhF,EAAiBsF,KAAKP,MAAtB/E,gBACA6F,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,2BACI,kBAAC,GAAD,eAAMqG,MAAM,4BANC,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMTpL,EAAkB,OAAO,CACrBQ,aAAarG,EAAgB+G,KAC7Bd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,6D,GA5BrBqP,iBAoCP,OAAKhP,QAAL,CAAcsK,IC/BvBsK,G,2MACF9iB,MAAM,CACF+iB,iBAAiB,GACjB1I,SAAQ,EACR1F,QAAO,G,EAEXmF,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,KACNyK,UAAU,OACZ,CACEzK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC7S,GAAD,OACP,8BACI,kBAACkR,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW9S,MAD1C,eAEI,kBAACmR,GAAD,CAAWhI,QAAS,kBAAI,EAAKyS,sBAAsB5b,W,EAO/D6b,qB,sBAAsB,sBAAAjf,EAAA,6DAClB,EAAKiO,SAAS,CAACoI,SAAQ,IADL,SAEZ,EAAKlO,MAAMwW,OAFC,OAGlB,EAAK1Q,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAAC8Q,iBAAiB,EAAK5W,MAAMvL,uBAAuBT,OAJhD,2C,EAQtBua,QAAQ,WACJ,EAAKtT,gBAAgB,KACrB,EAAK6K,SAAS,CAAC0C,QAAO,K,EAG1BuF,WAAW,SAAC9S,GACR,EAAKA,gBAAgBA,EACrB,EAAK6K,SAAS,CAAC0C,QAAO,K,EAG1BuO,2BAA2B,WACvB,EAAK9W,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,IAChBvN,EAAgBkF,EACtB,EAAKF,KAAKyO,cACP,EAAKzT,kBACJA,EAAgB/B,IAAI,EAAK+B,gBAAgB/B,KAN5B,SAQX,EAAK8G,MAAMgX,MAAM/b,GARN,OAUE,KADbsE,EAAO,EAAKS,MAAMvL,wBACdP,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK6iB,wBAELnf,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iB,EAqBJsW,sBAAsB,SAAC5b,GACnB,KAAM8K,QAAQ,CACV3C,MAAM,2BAAOnI,EAAgB+G,KAAK,eAClCiE,KAAK,WAAD,4BAAC,sBAAApO,EAAA,sEACK,EAAKmI,MAAMiX,IAAIhc,EAAgB/B,KADpC,OAGkB,IADN,EAAK8G,MAAMvL,uBACdP,SACNyD,EAAA,EAAQiX,QAAQ,kCAChB,EAAKkI,wBALR,2CAAD,kDAAC,M,oFAYTvW,KAAKoN,e,0CAGLpN,KAAKuW,yB,+BAEA,IAAD,SACoCvW,KAAK1M,MAAtC+iB,EADH,EACGA,iBAAiB1I,EADpB,EACoBA,QAAQ1F,EAD5B,EAC4BA,OAC1BvN,EAAgBsF,KAAKtF,iBAAiB,GACtCmI,EAAM,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,UAAzD,gBACZ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYgH,EACZhJ,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBlCrHN,GkCqHgCoH,iBAAgB,KAGvD,wBACE9T,MAAOnI,EAAgB/B,IAAM,2BAAS,2BACtC6Q,QAASvB,EACTvC,KAAM1F,KAAKwW,2BACX/M,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5BhF,gBAAiBA,EACjB2b,iBAAkBA,U,GAxHR/U,aA6IxBS,GAAqB,CAACkU,QAAKQ,MFtDZ,SAAA/b,GAAe,8CAAI,WAAMqE,GAAN,eAAAzH,EAAA,sEACjBqD,GAAmBD,GADF,OAC9BsE,EAD8B,OAEpCD,GAP8BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC7CH,K3CtB6B,sB2CuB7BE,MACAC,YAEoC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDEsDG+iB,IF5CrB,SAAA7b,GAAiB,8CAAI,WAAMkE,GAAN,eAAAzH,EAAA,sEACdsD,GAAiBC,GADH,OAC7BmE,EAD6B,OAEnCD,GAP4BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC3CH,K3C9B6B,sB2C+B7BE,MACAC,YAEmC,iCALR,IAACD,EAAIC,IAKG,OAAJ,wDE8CpBgP,gBARS,SAAArP,GACpB,MAAO,CACHY,uBAAuBZ,EAAMY,0BAQjC6N,GAFWY,CAGbyT,I,mCCxJa,SAASQ,GAAWnX,GAC/B,OACI,4CAAYA,EAAZ,CAAmBe,UAAU,YAAW,uBAAMhN,KAAK,MAAM+V,MAAM,SAAStI,MAAO,CAACC,MjBRjE,ckBAhB,IAAM2V,GAAa,CAC1B,CACIjQ,MAAM,qBACNzG,MAAM,KAEV,CACIyG,MAAM,qBACNzG,MAAM,KAEV,CACIyG,MAAM,qBACNzG,MAAM,MAIG2W,GAAe,CAC5B,CACIlQ,MAAM,2BACNzG,MAAM,KAEV,CACIyG,MAAM,2BACNzG,MAAM,KAEV,CACIyG,MAAM,2BACNzG,MAAM,KAEV,CACIyG,MAAM,iCACNzG,MAAM,KAEV,CACIyG,MAAM,eACNzG,MAAM,MAIG4W,GAAgB,CAC7B,CACInQ,MAAM,aACNzG,MAAM,KAEV,CACIyG,MAAM,eACNzG,MAAM,KAEV,CACIyG,MAAM,eACNzG,MAAM,KAEV,CACIyG,MAAM,gBACNzG,MAAM,KAEV,CACIyG,MAAM,gBACNzG,MAAM,KAEV,CACIyG,MAAM,sBACNzG,MAAM,KAEV,CACIyG,MAAM,sBACNzG,MAAM,KAEV,CACIyG,MAAM,yBACNzG,MAAM,KAEV,CACIyG,MAAM,sBACNzG,MAAM,KAEV,CACIyG,MAAM,yBACNzG,MAAM,MAEV,CACIyG,MAAM,sBACNzG,MAAM,MAEV,CACIyG,MAAM,sBACNzG,MAAM,MAEV,CACIyG,MAAM,QACNzG,MAAM,MAEV,CACIyG,MAAM,OACNzG,MAAM,MAEV,CACIyG,MAAM,QACNzG,MAAM,MAEV,CACIyG,MAAM,eACNzG,MAAM,OAIG6W,GAAa,CAC1B,CACIpQ,MAAM,eACNzG,MAAM,KAEV,CACIyG,MAAM,eACNzG,MAAM,KAEV,CACIyG,MAAM,eACNzG,MAAM,MAIG8W,GAAa,CAC1B,CACIrQ,MAAM,MACNzG,MAAM,KAEV,CACIyG,MAAM,MACNzG,MAAM,KAEV,CACIyG,MAAM,QACNzG,MAAM,MAIG+W,GAAS,CACtB,CACItQ,MAAM,SACNzG,MAAM,KAEV,CACIyG,MAAM,aACNzG,MAAM,KAEV,CACIyG,MAAM,QACNzG,MAAM,KAEV,CACIyG,MAAM,aACNzG,MAAM,KAEV,CACIyG,MAAM,UACNzG,MAAM,KAEV,CACIyG,MAAM,UACNzG,MAAM,KAEV,CACIyG,MAAM,QACNzG,MAAM,KAEV,CACIyG,MAAM,mBACNzG,MAAM,KAEV,CACIyG,MAAM,SACNzG,MAAM,KAEV,CACIyG,MAAM,QACNzG,MAAM,O,qBC9JJ2H,GAAO,KAAOA,OACZqP,G,IAAAA,OAEFC,G,YAEF,WAAY3X,GAAO,IAAD,8BACd,4CAAMA,KAYV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,2BACNyK,UAAU,cACVtJ,MAAO,IACPuJ,OAAO,SAAC7E,GAAD,OAAe3D,GAAU2D,KAEpC,CACI7F,MAAM,2BACNyK,UAAU,YACVtJ,MAAO,IACPqT,OAAQ,WACJ,MAAO,CACHpW,MAAO,CACHqW,SAAU,IACVrH,SAAU,SACVsH,WAAY,SACZC,aAAa,WACbC,OAAO,aAInBlK,OAAQ,SAACgF,GAAD,OAAU,wBAASmF,UAAU,UAAU7U,MAAO0P,GAAOA,KAEjE,CACI1P,MAAM,2BACNyK,UAAU,WACVtJ,MAAO,IACPqT,OAAQ,WACJ,MAAO,CACHpW,MAAO,CACHqW,SAAU,IACVrH,SAAU,SACVsH,WAAY,SACZC,aAAa,WACbC,OAAO,aAInBlK,OAAQ,SAACgF,GACL,IAAMoF,EAAaC,KAAYrF,GAC/B,GAAGoF,EAAa,CACZ,IAAIxV,EAAK,GAIT,OAHAwV,EAAaE,cAAcrP,SAAQ,SAAAsP,GAC/B3V,GAAM2V,EAAEvF,QAEL,wBAASmF,UAAU,UAAU7U,MAAOV,GAAOA,MAI9D,CACIU,MAAM,2BACNyK,UAAU,kBACVtJ,MAAO,IACPuJ,OAAO,SAACwK,GACJ,IAAIrG,EAAQ,GAMZ,OALAoF,GAAetO,SAAQ,SAAAwP,GAChBA,EAAG7X,QAAQ4X,EAAgBriB,aAC1Bgc,EAASsG,EAAGpR,UAGb8K,IAGf,CACI7O,MAAM,2BACNmB,MAAO,IACPsJ,UAAU,gBACVC,OAAO,SAAC0K,GACJ,OAAmB,IAAhBA,EAEK,8BACI,wBAAK/W,MnBzGX,WmByGM,uBAGa,IAAhB+W,EAED,8BACI,wBAAK/W,MnB5GT,WmB4GI,uBAKJ,8BACI,wBAAKA,MnBvHV,WmBuHK,yBAQpB,CACI2B,MAAM,2BACNyK,UAAU,aACVtJ,MAAO,IACPuJ,OAAO,SAACxU,GAEJ,IADA,IAAIiG,EAAO,GACHgD,EAAE,EAAEA,EAAEjJ,EAAWsH,OAAO2B,IAC5BhD,GAAQjG,EAAWiJ,GAAGP,KAAK,IAE/B,OAAOzC,EAAO2J,UAAU,EAAE3J,EAAOqB,OAAO,KAGhD,CACIwC,MAAM,qBACNyK,UAAU,aACVtJ,MAAO,GACPuJ,OAAO,SAAC2K,GACJ,GAAGA,EACC,OAAOA,EAAWzW,OAG9B,CACIoB,MAAM,2BACNyK,UAAU,mBACVtJ,MAAO,IACPuJ,OAAO,SAAC4K,GACJ,OAAOA,EAAiB1W,OAGhC,CACIoB,MAAM,qBACNmB,MAAO,GACPsJ,UAAU,UACVC,OAAO,SAAC6K,GACJ,OAAOA,EAAQ3W,OAGvB,CACIoB,MAAM,eACNwV,MAAO,QACPrU,MAAO,IACPuJ,OAAO,SAACxS,GAAD,OACP,8BACI,kBAAC6b,GAAD,CAAY/S,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,0BAA0B,CAACvH,uBADhF,eAEI,kBAAC6Q,GAAD,CAAS/H,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,+BAA+BvH,MAFjF,eAGI,kBAAC8Q,GAAD,CAAWhI,QAAS,kBAAI,EAAKyU,sBAAsBvd,WAvJ7C,EA6JlBwd,qBA7JkB,uCA6JI,WAAMC,GAAN,2BAAAlhB,EAAA,yDAClB,EAAKkhB,QAAQA,EACPC,GAAO,EACb,EAAKlT,SAAS,CAACoI,SAAQ,IAHL,EAIW,EAAKra,MAA5BolB,EAJY,EAIZA,WAAWC,EAJC,EAIDA,YACdD,EALe,gCAMR,EAAKjZ,MAAMyW,KAAK,CAClBuC,SACAD,UACAI,SrC3LO,GqC4LPF,aACAC,eAXU,+CAcR,EAAKlZ,MAAMyW,KAAK,CAACuC,SAAOD,UAAQI,SrChM3B,KqCkLG,QAgBlB,EAAKrT,SAAS,CAACoI,SAAQ,IAhBL,EAiBC,EAAKlO,MAAMtL,uBAAuBV,KAA9ColB,EAjBW,EAiBXA,MAAMtM,EAjBK,EAiBLA,KACb,EAAKhH,SAAS,CAACuT,iBAAiBvM,EAAKsM,UAlBnB,4CA7JJ,wDAkLlB7K,QAAQ,WACJ,EAAKjT,gBAAgB,KACrB,EAAKwK,SAAS,CAAC0C,QAAO,KApLR,EAuLlBuF,WAAW,SAACzS,GACR,EAAKA,gBAAgBA,EACrB,EAAKwK,SAAS,CAAC0C,QAAO,KAzLR,EA4LlBqQ,sBAAsB,SAACvd,GACnB,KAAMyK,QAAQ,CACV3C,MAAM,iCACN6C,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMsZ,IAAIhe,EAAgBpC,KADpC,OAGkB,KADbqG,EAAO,EAAKS,MAAM6Y,uBACd3kB,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK6kB,qBAAqB,IAL7B,2CAAD,kDAAC,MA7LT,EAAKS,IAAI/J,IAAMC,YACf,EAAK5b,MAAM,CACPwlB,iBAAiB,GACjBD,MAAM,EACNlL,SAAQ,EACR1F,QAAO,EACPyQ,WAAW,GACXC,WAAW,IATD,E,kFA2Md3Y,KAAKoN,e,0CAGLpN,KAAKuY,qBAAqB,K,+BAGrB,IAAD,SACyDvY,KAAK1M,MAA3DwlB,EADH,EACGA,iBAAiBD,EADpB,EACoBA,MAAMlL,EAD1B,EAC0BA,QAAQ+K,EADlC,EACkCA,WAAWC,EAD7C,EAC6CA,WAC3C9V,EAAO,8BACT,uBAAQrP,KAAK,UAAUqQ,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,kCAAiC,uBAAM9O,KAAK,mBAAxG,gBADS,WAET,uBAAQA,KAAK,UAAUqQ,QAAO,sBAAE,sBAAAvM,EAAA,sEAAiB,EAAKmI,MAAMwZ,MAA5B,4CAAoC,uBAAMzlB,KAAK,WAA/E,sBAGEsX,EACN,0BAAMtK,UAAU,aACZ,wBACAL,MAAOwY,EACPnY,UAAU,mBACV2I,SAAU,SAAAhJ,GAAK,OAAE,EAAKoF,SAAS,CAACoT,WAAWxY,MAEvC,kBAAC,GAAD,CAAQA,MAAM,aAAd,4BACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,6BAEJ,kBAACgX,GAAD,CACA3W,UAAU,mBACVW,YAAY,iCACZhB,MAAOuY,EACPvP,SAAU,SAAA2E,GAAK,OAAI,EAAKvI,SAAS,CAACmT,WAAW5K,EAAMyD,OAAOpR,SAC1D+Y,SAAU,kBAAI,EAAKX,qBAAqB,IACxCY,aAAW,KAGf,OACI,wBAAMtW,MAAOA,EAAOiI,MAAOA,GACvB,wBACAqE,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYyJ,EACZzL,QAASrN,KAAKqN,QACd8F,OAAQ,CAAEiG,EAAG,KACb9J,WAAY,CACRT,QAAQ7O,KAAKwY,QACbjJ,gBrC3QG,GqC4QHoH,iBAAgB,EAChBkC,QACA1P,SAASnJ,KAAKuY,6B,GA3PfjX,aAiRbS,GAAqB,CAACmU,QAAKC,SAAM4C,ILxJpB,SAAA9d,GAAiB,8CAAI,WAAM8D,GAAN,eAAAzH,EAAA,sEACf0D,GAAiBC,GADF,OAC9B+D,EAD8B,OAEpCD,GAP4BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC3CH,K3CvD6B,sB2CwD7BE,MACAC,YAEoC,iCALT,IAACD,EAAIC,IAKI,OAAJ,uDKwJOslB,IL/IxB,yDAAM,WAAMla,GAAN,eAAAzH,EAAA,sE/BlESD,EAAmB,2C+BkE5B,OAEA,KADf2H,EADe,QAEXrL,QACNoL,EAP+B,CACnCvL,K3C/DsC,+B2CgEtCC,KAKoCuL,EAAOvL,OAHtB,2CAAN,wDKiJJkP,gBARS,SAAArP,GACpB,MAAO,CACHa,uBAAuBb,EAAMa,0BAQjC4N,GAFWY,CAGbyU,I,0BCnSa,SAASiC,GAAQ5Z,GAC5B,OACI,4CAAYA,EAAZ,CAAmBe,UAAU,YAAW,uBAAMhN,KAAK,OAAOyN,MAAO,CAACC,MpBRnD,c,qBqBMFoY,G,YAMjB,WAAY7Z,GAAO,IAAD,uBACd,4CAAMA,KAoBV8Z,QAAQ,WAEJ,IAAIlkB,EAAI,GAIR,OAHA,EAAK/B,MAAMkmB,SAASpQ,KAAI,SAAAqQ,GAAI,OACxBpkB,GAAKokB,EAAKhY,KAAK,OAEZpM,EAAIsT,UAAU,EAAEtT,EAAIgL,OAAO,IA3BpB,EA8BlBqZ,aAAa,kBAAI,EAAKnU,SAAS,CAACoU,eAAc,KA9B5B,EAiClBC,cAAc,SAAAH,GACV,EAAKlU,SAAS,CACVsU,aAAaJ,EAAK7jB,KAAK6jB,EAAKK,SAC5BH,eAAc,KApCJ,EAuClBI,aAAa,YAAoB,IAAlBN,EAAiB,EAAjBA,KAAKD,EAAY,EAAZA,SAChB,GAAiB,SAAdC,EAAK9lB,OAAgB,CACpB,IAAMqL,EAAOya,EAAKO,SAClB,GAAmB,IAAhBhb,EAAOrL,OAAW,CACjByD,EAAA,EAAQiX,QAAQ,6BADC,IAEV5a,EAAMuL,EAANvL,MACPgmB,EAAKD,EAASA,EAASnZ,OAAO,IACzBoB,KAAKhO,EAAK,GACfgmB,EAAK7jB,IAAInC,EAAK,QAEd2D,EAAA,EAAQH,MAAM,kCAGbwiB,EAAK9lB,OAQd,EAAK4R,SAAS,CAACiU,cA1Df,IAAIA,EAAS,GACNS,EAAM,EAAKxa,MAAXwa,KACJA,GAAMA,EAAK5Z,OAAO,IAEjBmZ,EADWS,EAAKliB,MAAM,KACNqR,KAAI,SAAC8Q,EAAGC,GAAJ,MAAa,CACzBC,KAAKD,EACL1Y,KAAKyY,EACLG,OAAO,OACPzkB,IAAIwC,EAAa8hB,OAVf,OAcd,EAAK5mB,MAAM,CACPqmB,eAAc,EACdE,aAAa,GACbL,YAjBU,E,sEA+DT,IAAD,EACwCxZ,KAAK1M,MAA1CumB,EADH,EACGA,aAAaF,EADhB,EACgBA,cAAcH,EAD9B,EAC8BA,SAC5Bc,EACF,6BACI,uBAAM9mB,KAAK,SACX,8CAGR,OACI,6BACI,wBACCD,OAAO,iBACPgnB,OAAO,UACP9Y,KAAK,QACL+Y,SAAS,eACThB,SAAUA,EACViB,UAAWza,KAAK4Z,cAChBzQ,SAAUnJ,KAAK+Z,cAEfP,EAASnZ,QvC5FG,EuC4FqB,KAAKia,GAEvC,wBAAOtW,MAAM,MAAMwF,QAASmQ,EAAee,OAAQ,KAAMjR,SAAUzJ,KAAK0Z,cACpE,yBAAKiB,IAAI,GAAG1Z,MAAO,CAAC+C,MAAM,QAAS4W,IAAKf,U,GA3FtBvY,aAAjBgY,GAEVuB,SAAS,CACZZ,KAAKtY,IAAUmZ,O,6CCAFC,I,oBAOjB,WAAYtb,GAAO,IAAD,uBACd,4CAAMA,KAJVnM,MAAM,CACF0nB,YAAYC,eAAYC,eAEV,EA4BlBC,oBAAoB,SAACH,GACjB,EAAKzV,SAAS,CACVyV,iBA9BU,EAkClBI,YAAY,WACR,OAAOC,KAAYC,wBAAa,EAAKhoB,MAAM0nB,YAAYO,uBAnCzC,EAsClBC,oBAAoB,SAAC/B,GACjB,OAAO,IAAIjjB,SACP,SAACC,EAAQC,GACL,IAAM+kB,EAAI,IAAIC,eACdD,EAAIE,KAAK,OAAO,oBAChB,IAAMloB,EAAK,IAAImoB,SACfnoB,EAAKooB,OAAO,QAAQpC,GACpBgC,EAAIK,KAAKroB,GACTgoB,EAAIM,iBAAiB,QAAO,WACxB,IACMnmB,EADSQ,KAAKW,MAAM0kB,EAAIO,aACXvoB,KAAKmC,IACxBa,EAAQ,CAAChD,KAAK,CAACwoB,KAAKrmB,QAExB6lB,EAAIM,iBAAiB,SAAQ,WACzB,IAAM9kB,EAAMb,KAAKW,MAAM0kB,EAAIS,cAC3BxlB,EAAOO,UAnDnB,IAAMklB,EAAK,EAAK1c,MAAM2c,SACtB,GAAGD,EAAK,CACJ,IAAMxE,EAAaC,KAAYuE,GAC/B,GAAGxE,EAAa,CACZ,IAAM0E,EAAaC,gBAAaC,qBAAqB5E,EAAaE,eAC5DmD,EAAYC,eAAYuB,kBAAkBH,GAChD,EAAK/oB,MAAM,CACP0nB,oBAGP,CACD,EAAK1nB,MAAM,CACP0nB,YAAYC,eAAYC,eAE5B,IACMvD,EAAaC,KADR,qFAEX,GAAGD,EAAa,CACZ,IAAM0E,EAAaC,gBAAaC,qBAAqB5E,EAAaE,eAC5DmD,EAAYC,eAAYuB,kBAAkBH,GAChD,EAAK/oB,MAAM,CACN0nB,gBAtBC,S,sEA2DT,IACEA,EAAahb,KAAK1M,MAAlB0nB,YACP,OACI,6BACA,kBAAC,UAAD,CACAA,YAAaA,EACbyB,YAAa,CAACC,OAAO,oBAAoBC,UAAU,IAAIC,YAAY,IACnEzB,oBAAqBnb,KAAKmb,oBAC1B0B,QAAS,CACLC,MAAM,CAACC,eAAe/c,KAAKwb,oBAAoBb,IAAI,CAACqC,SAAQ,EAAKC,WAAU,Y,GA3E/C3b,cCK5CoT,KAAOC,OAAO,SAEd,IAAMjU,GAAK,IAAKA,KACToH,G,KAAAA,OACAoV,G,IAAAA,SACDC,GAASpY,GAAUP,KAAKW,OAExBiY,G,YAOF,WAAY3d,GAAO,IAAD,8BACd,4CAAMA,KAPVnM,MAAM,CACF6c,YAAY,GACZ6D,MAAM,GACNqC,iBAAiB,IAGH,EAMlBE,qBANkB,sBAMG,8BAAAjf,EAAA,sEACX,EAAKmI,MAAMwW,OADA,OAEXjX,EAAO,EAAKS,MAAMvL,uBAClBmiB,EAAiBrX,EAAOvL,KAC9B,EAAK8R,SAAS,CAAC8Q,qBAJE,2CANH,EAalBgH,wBAbkB,uCAaM,WAAMld,GAAN,iBAAA7I,EAAA,0DACjB6I,EADiB,iCAEV,EAAKV,MAAMX,MAAM,CAAC,KAAOqB,IAFf,uBAGV,EAAKV,MAAMX,MAAM,CAAC,KAAOqB,IAHf,OAIVnB,EAAO,EAAKS,MAAMpM,kBAClB8c,EAAYnR,EAAOvL,KACzB,EAAK8R,SAAS,CAAC4K,gBANC,wBAQhB,EAAK5K,SAAS,CAAC4K,YAAY,KARX,4CAbN,wDA0BlBmN,kBA1BkB,uCA0BA,WAAMnd,GAAN,iBAAA7I,EAAA,0DACX6I,EADW,iCAEJ,EAAKV,MAAML,IAAI,CAAC,SAAWe,IAFvB,uBAGJ,EAAKV,MAAML,IAAI,CAAC,KAAOe,IAHnB,OAIJnB,EAAO,EAAKS,MAAM3L,YAClBkgB,EAAMhV,EAAOvL,KACnB,EAAK8R,SAAS,CAACyO,UANL,wBAQV,EAAKzO,SAAS,CAACyO,MAAM,KARX,4CA1BA,wDAsClBuJ,cAAc,SAAC3W,GACX,OAAOA,EAAMA,EAAMvG,OAAS,IAvCd,EA0ClBmd,OAAO,WACH,EAAK/d,MAAMC,KAAKC,eAAhB,uCAA+B,WAAM1I,EAAM2I,GAAZ,uCAAAtI,EAAA,yDACvBL,EADuB,wBAGnByR,EAQF9I,EARE8I,YACAuP,EAOFrY,EAPEqY,cACAlf,EAMF6G,EANE7G,WACAmf,EAKFtY,EALEsY,WACAC,EAIFvY,EAJEuY,iBACAJ,EAGFnY,EAHEmY,gBACAK,EAEFxY,EAFEwY,QACAqF,EACF7d,EADE6d,UAEExD,EAAK,EAAKyD,GAAG7O,QAAQ0K,UACrB6C,EAAS,EAAKuB,OAAO9O,QAAQuM,eAC7BwC,EAAO,IACNtb,KAAKvJ,GACNgC,EAAgB,CAClB2N,cACAuP,gBACAlf,WAAW6kB,EACX1F,aACAC,mBACAJ,kBACAK,UACAqF,YACArB,WACAnC,QAED,EAAK4D,WACJ9iB,EAAgBpC,IAAI,EAAKoC,gBAAgBpC,KA7BtB,UA+BjB,EAAK8G,MAAM0W,MAAMpb,GA/BA,QAiCJ,KADbiE,EAAO,EAAKS,MAAMtL,wBACdR,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK+L,MAAMK,QAAQge,UAEnB1mB,EAAA,EAAQH,MAAM+H,EAAOtL,KArCF,4CAA/B,oCAAAsM,KAAA,iBAzCA,EAAK0d,GAAGzO,IAAMC,YACd,EAAKyO,OAAO1O,IAAMC,YAHJ,E,kFAuFdlP,KAAKuW,uBAEL,IAAMxb,EAAgBiF,KAAKP,MAAMgE,SAASnQ,MAC1C0M,KAAK6d,WAAW9iB,EAEhBiF,KAAKjF,gBAAgBA,GAAkB,K,+BAElC,IAAD,SACuCiF,KAAK1M,MAAzC0gB,EADH,EACGA,MAAM7D,EADT,EACSA,YAAYkG,EADrB,EACqBA,iBACnB0H,EAAoB5N,EAAY/G,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAEvc,SACjEwc,EAAcjK,EAAM5K,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAE1lB,SAAxB,IAAmC0lB,EAAEvc,SACjEoc,EAA0B7d,KAA1B6d,SAAS9iB,EAAiBiF,KAAjBjF,gBAEZ2N,EAUF3N,EAVE2N,YACAuP,EASFld,EATEkd,cACAlf,EAQFgC,EAREhC,WACAmf,EAOFnd,EAPEmd,WACAC,EAMFpd,EANEod,iBACAJ,EAKFhd,EALEgd,gBACAK,EAIFrd,EAJEqd,QACAqF,EAGF1iB,EAHE0iB,UACArB,EAEFrhB,EAFEqhB,SACAnC,EACFlf,EADEkf,KAEG1Z,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAMDsC,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,8BAAOD,EAAW,2BAAO,6BAGjC,OACI,wBAAMhb,MAAOA,GACT,sBAba,CACjBmJ,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,IAYT,kBAAC,GAAD,CAAM/E,MAAM,4BACXrG,EAAkB,cAAc,CAC7BQ,aAAa8c,EAAWnJ,KAAOhM,EAAY,cAAgBgM,KAAOyI,GAAS,cAC3Exc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,+BAGJ,kBAAC,GAAD,CAAMqG,MAAM,4BACXrG,EAAkB,gBAAgB,CAC/BQ,aAAa8c,EAAW5F,EAAcviB,WAAY,IAClDiL,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEIsW,GAAazN,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAG/d,MAAOA,MAAO+d,EAAG/d,OAAQ+d,EAAGtX,aAKzE,kBAAC,GAAD,CAAMA,MAAM,4BACXrG,EAAkB,aAAa,CAC5BQ,aAAahI,EAAYA,EAAWA,EAAWsH,OAAO,GAAG1H,IAAK,EAC9DgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,wBACI4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,2BACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAKqd,wBACfiB,gBAAiB,MAEpBP,KAIL,kBAAC,GAAD,CAAMnX,MAAM,sBACXrG,EAAkB,aAAa,CAC5BQ,aAAamX,EAAaA,EAAWvf,IAAM,EAC3CgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,iDAJ7BmJ,CAQG,wBACI4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,iCACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAKsd,kBACfgB,gBAAiB,MAEpBL,KAIL,kBAAC,GAAD,CAAMrX,MAAM,4BACXrG,EAAkB,mBAAmB,CAClCQ,aAAa8c,EAAW1F,EAAiBxf,IAAM,EAC/CgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEI8V,EAAiBjN,KAAI,SAAAmV,GAAE,OAAE,kBAAC,GAAD,CAAQzb,IAAKyb,EAAG5lB,IAAKwH,MAAOoe,EAAG5lB,KAAM4lB,EAAG9c,YAKzE,kBAAC,GAAD,CAAMmF,MAAM,4BACXrG,EAAkB,kBAAkB,CACjCQ,aAAa8c,EAAW9F,EAAgBriB,WAAa,IACrDiL,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEIuW,GAAe1N,KAAI,SAAA4O,GAAE,OAAE,kBAAC,GAAD,CAAQlV,IAAKkV,EAAG7X,MAAOA,MAAO6X,EAAG7X,OAAQ6X,EAAGpR,aAK3E,kBAAC,GAAD,CAAMA,MAAM,sBACXrG,EAAkB,UAAU,CACzBQ,aAAa8c,EAAWzF,EAAQzf,IAAM,EACtCgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,iDAJ7BmJ,CAQG,wBACI4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,iCACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAKsd,kBACfgB,gBAAiB,MAEpBL,KAIL,kBAAC,GAAD,CAAMrX,MAAM,4BACXrG,EAAkB,YAAY,CAC3BQ,aAAa8c,EAAWJ,EAAY,6FACpC9c,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,kBAAC2c,GAAD,CAAU/b,YAAY,GAAGqd,SAAU,CAACC,QAAQ,EAAEC,QAAQ,OAG1D,kBAAC,GAAD,CAAM9X,MAAM,2BAAOoF,SAAU,CAACL,KAAK,GAAIM,WAAY,CAACN,KAAK,KACxDpL,EAAkB,WAAW,CAC1BQ,aAAa8c,EAAWzB,EAAW,6EACnCzb,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,kBAAC,GAAD,CAAgBoP,IAAK3P,KAAK2d,OAAQvB,SAAUA,MAGhD,kBAAC,GAAD,CAAMxV,MAAM,4BACR,kBAAC,GAAD,CAAU+I,IAAK3P,KAAK0d,GAAIzD,KAAMA,KAElC,kBAAC,GAAD,KACI,uBAAQzmB,KAAK,UAAUqQ,QAAS7D,KAAKwd,QAAQ,uBAAMhqB,KAAK,SAAxD,gBADJ,WAEI,uBAAQA,KAAK,UAAS,uBAAMA,KAAK,UAAjC,uB,GAhSE8N,aAgTpBS,GAAqB,CAACmU,QAAKC,SAAMF,QAAKnX,SAAMM,QAEnCuD,gBAXS,SAAArP,GACpB,MAAO,CACHa,uBAAuBb,EAAMa,uBAC7Bd,kBAAkBC,EAAMD,kBACxBS,YAAYR,EAAMQ,YAClBI,uBAAuBZ,EAAMY,0BAQjC6N,GAFWY,CAGb,IAAKnB,QAAL,CAAc4b,K,sCChUhB1I,KAAOC,OAAO,SAEd,IAAMjU,GAAK,KAAaA,KAEHie,G,2MACjBrrB,MAAM,CACFqmB,eAAc,EACdE,aAAa,GACb+E,aAAa,GACbC,uBAAuB,I,EAG3BC,gBAAgB,WAAK,IACV7G,EAAe,EAAKxY,MAAMgE,SAASnQ,MAAMyH,gBAAzCkd,cACD2G,EAA6B,IAAhB3G,EACf,wBAAO/W,MxBvBG,UwBuBcqR,KAAK,uBACb,IAAhB0F,EACA,wBAAO/W,MxBtBK,UwBsBcqR,KAAK,uBAE/B,wBAAOrR,MxB7BI,UwB6BcqR,KAAK,uBAElC,EAAKhN,SAAS,CAACqZ,kB,EAGnBG,yBAAyB,WAAK,IACnBhH,EAAiB,EAAKtY,MAAMgE,SAASnQ,MAAMyH,gBAA3Cgd,gBACPjB,GAAetO,SAAQ,SAAAwP,GAChBD,EAAgBriB,aAAasiB,EAAG7X,OAC/B,EAAKoF,SAAS,CAACsZ,uBAAuB7G,EAAGpR,Y,EAKrD8S,aAAa,kBAAI,EAAKnU,SAAS,CAACoU,eAAc,K,EAG9CC,cAAc,SAAAoF,GACV,EAAKzZ,SAAS,CACVsU,aAAazhB,EAAa4mB,EAC1BrF,eAAc,K,mFAKlB3Z,KAAK8e,kBACL9e,KAAK+e,6B,+BASA,IAAD,SAUF/e,KAAKP,MAAMgE,SAASnQ,MAAMyH,gBARxB2N,EAFA,EAEAA,YACA+U,EAHA,EAGAA,UACArB,EAJA,EAIAA,SACArjB,EALA,EAKAA,WACAmf,EANA,EAMAA,WACAC,EAPA,EAOAA,iBACAC,EARA,EAQAA,QACA6B,EATA,EASAA,KAeAgF,EAAgB,GACpBlmB,EAAWyP,SAAQ,SAAA0W,GACfD,GAAiBC,EAAIzd,KAAK,OA1B1B,MA4BmEzB,KAAK1M,MAArEumB,EA5BH,EA4BGA,aAAaF,EA5BhB,EA4BgBA,cAAciF,EA5B9B,EA4B8BA,aAAaC,EA5B3C,EA4B2CA,uBACzChc,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,2DAGFqB,EAAc,8BAAM,uBAAM3rB,KAAK,iBAAjB,gCACd4rB,EAAe,8BAAM,uBAAM5rB,KAAK,SAAjB,gCACf6rB,EAAe,8BAAM,uBAAM7rB,KAAK,cAAjB,gCACf8rB,EAAa,8BAAM,uBAAM9rB,KAAK,SAAjB,0BACb+rB,EAAmB,8BAAM,uBAAM/rB,KAAK,YAAjB,gCACnBgsB,EAAkB,8BAAM,uBAAMhsB,KAAK,cAAjB,gCAClBisB,EAAU,8BAAM,uBAAMjsB,KAAK,SAAjB,0BACVksB,EAAY,8BAAM,uBAAMlsB,KAAK,aAAjB,gCACZmsB,EAAW,8BAAM,uBAAMnsB,KAAK,iBAAjB,gCACXosB,EAAM,8BAAM,uBAAMpsB,KAAK,eAAjB,gCACZ,OACI,wBAAMqP,MAAOA,GACX,wBAAcsM,UAAQ,GACpB,kBAAC,GAAD,CAAMvI,MAAOuY,EAAcxT,KAAM,GAAItH,GAAYqE,IACjD,kBAAC,GAAD,CAAM9B,MAAOwY,GAAgBR,GAC7B,kBAAC,GAAD,CAAMhY,MAAOyY,EAAe1T,KAAM,GAAIsT,EAAgBtW,UAAU,EAAEsW,EAAgB5e,OAAO,IACzF,kBAAC,GAAD,CAAMuG,MAAO0Y,GAAcpH,EAAWA,EAAWzW,KAAK,IACtD,kBAAC,GAAD,CAAMmF,MAAO2Y,GAAoBpH,EAAiB1W,MAClD,kBAAC,GAAD,CAAMmF,MAAO4Y,GAAmBX,GAChC,kBAAC,GAAD,CAAMjY,MAAO6Y,GAAWrH,EAAQ3W,MAChC,kBAAC,GAAD,CAAMmF,MAAO8Y,EAAY/T,KAAM,GAAI8R,GACnC,kBAAC,GAAD,CAAM7W,MAAO+Y,EAAWhU,KAAM,GAAG,0BAAMkU,wBAAyB,CAACC,OAAO1D,MACxE,kBAAC,GAAD,CAAMxV,MAAOgZ,EAAMjU,KAAM,GAErBsO,EAAOA,EAAKliB,MAAM,KAAKqR,KAAI,SAAA4V,GAAG,OACtB,uBAAGlc,IAAKkc,EAAKnb,QAAS,WAAK,EAAK+V,cAAcoF,KAC9C,yBACAlc,IAAKkc,EACLxe,UAAU,sBACVoa,IAAKxiB,EAAa4mB,EAClBrE,IAAI,YAGV,+BAIR,wBAAO3W,MAAM,MAAMwF,QAASmQ,EAAee,OAAQ,KAAMjR,SAAUzJ,KAAK0Z,cAClE,yBAAKiB,IAAI,GAAG1Z,MAAO,CAAC+C,MAAM,QAAS4W,IAAKf,U,GA3HTvY,aCL9Bye,G,iLAGb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO1iB,KAAK,mBAAmB2iB,UAAW5I,GAAM6I,OAAK,IACrD,kBAAC,IAAD,CAAO5iB,KAAK,+BAA+B2iB,UAAW5C,KACtD,kBAAC,IAAD,CAAO/f,KAAK,0BAA0B2iB,UAAWE,KACjD,kBAAC,IAAD,CAAU5f,GAAG,0B,GARgBgB,aCgChC6e,GAAO,SAAA3mB,GAAc,8CAAI,WAAMuF,GAAN,eAAAzH,EAAA,sEACbiC,EAAiBC,GADJ,OAEb,KADfwF,EAD4B,QAExBrL,QACNoL,EAP+B,CACnCvL,KvDmE4B,qBuDlE5BC,KAKoCuL,EAAOvL,OAHT,2CAAJ,uDAkCrB2sB,GAAO,SAAAvmB,GAAW,8CAAI,WAAMkF,GAAN,eAAAzH,EAAA,sEACVsC,GAAcC,GADJ,OAEV,KADfmF,EADyB,QAErBrL,QACNoL,EAP4B,CAChCvL,KvDuCyB,kBuDtCzBC,KAKiCuL,EAAOvL,OAHT,2CAAJ,uDAkClB4sB,GAAO,SAAArmB,GAAe,8CAAI,WAAM+E,GAAN,eAAAzH,EAAA,sEACdyC,GAAkBC,GADJ,OAEd,KADfgF,EAD6B,QAEzBrL,QACNoL,EAPgC,CACpCvL,KvDW6B,sBuDV7BC,KAKqCuL,EAAOvL,OAHT,2CAAJ,uDAkCtB6sB,GAAO,SAAAjmB,GAAU,8CAAI,WAAM0E,GAAN,eAAAzH,EAAA,sEACT8C,GAAaC,GADJ,OAET,KADf2E,EADwB,QAEpBrL,QACNoL,EAP0B,CAC9BvL,KvDjBwB,iBuDkBxBC,KAK+BuL,EAAOvL,OAHR,2CAAJ,uDAajB8sB,GAAQ,SAAAlmB,GAAU,8CAAI,WAAM0E,GAAN,eAAAzH,EAAA,sEACZgD,GAAcD,GADF,OACzB2E,EADyB,OAE/BD,GAPyBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACxCH,KvD3BwB,iBuD4BxBE,MACAC,YAE+B,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDCtJzB+M,GAAK,IAAKA,KACTwc,G,IAAAA,SACDpV,GAAO,KAAOA,OAEdgE,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IAAD,EACoCM,KAAKP,MAAtC5D,EADH,EACGA,oBAAoB2kB,EADvB,EACuBA,YACpBjgB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,2BACI,kBAAC,GAAD,eAAM/E,MAAM,4BAAWgJ,GAEnBrP,EAAkB,OAAO,CACrBQ,aAAalF,EAAoB4F,KACjCd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,wDAI3B,kBAAC,GAAD,eAAMyF,MAAM,gBAASgJ,GAEjBrP,EAAkB,YAAY,CAC1BQ,aAAalF,EAAoB4kB,WADrClgB,CAGI,4BAEI0W,GAAa7N,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAK2K,MAAOA,MAAO3K,EAAK2K,OAAQ3K,EAAKoR,aAMrF,kBAAC,GAAD,eAAMA,MAAM,sBAAUgJ,GAElBrP,EAAkB,WAAW,CACzBQ,aAAalF,EAAoB6kB,UADrCngB,CAGI,4BAEI2W,GAAS9N,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAK2K,MAAOA,MAAO3K,EAAK2K,OAAQ3K,EAAKoR,aAMjF,kBAAC,GAAD,eAAMA,MAAM,4BAAWgJ,GAEnBrP,EAAkB,SAAS,CACvBQ,aAAalF,EAAoB8kB,QADrCpgB,CAGI,4BAEIigB,EAAYpX,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAKmD,IAAKwH,MAAO3K,EAAKmD,KAAM,gBAAMnD,EAAKiM,KAAK,OAAOjM,EAAKorB,UAMvG,kBAAC,GAAD,eAAMha,MAAM,4BAAWgJ,GAEnBrP,EAAkB,aAAa,CAC3BQ,aAAalF,EAAoBglB,YADrCtgB,CAGI,kBAAC,GAAD,CAAUY,YAAY,GAAGqd,SAAU,CAACC,QAAQ,EAAEC,QAAQ,Y,GA5ExDlO,iBAoFP,OAAKhP,QAAL,CAAcsK,IChFvBgV,G,YAEF,WAAYrhB,GAAO,IAAD,8BACd,4CAAMA,KASV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,QACZ,CACEzK,MAAM,eACNyK,UAAU,YACVC,OAAO,SAACkT,GAAD,OAAa,EAAKM,aAAaN,KACxC,CACE5d,MAAM,qBACNyK,UAAU,WACVC,OAAO,SAACmT,GAAD,OAAY,EAAKM,YAAYN,KACtC,CACE7d,MAAM,2BACNyK,UAAU,SACVC,OAAO,SAACoT,GACJ,IAAI,IAAI7d,KAAO,EAAKme,gBAChB,GAAGN,EAAOjrB,aAAaoN,EACnB,OAAO,EAAKme,gBAAgBne,KAI1C,CACED,MAAM,eACNyK,UAAU,aACV+J,OAAQ,WACJ,MAAO,CACHpW,MAAO,CACHqW,SAAU,IACVrH,SAAU,SACVsH,WAAY,SACZC,aAAa,WACbC,OAAO,aAInBlK,OAAQ,SAACgF,GAAD,OAAU,wBAASmF,UAAU,UAAU7U,MAAO0P,GAAOA,KAC/D,CACE1P,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KACpC,CACE7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC1R,GAAD,OACP,8BACI,kBAAC+P,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW3R,MAD1C,eAEI,kBAACgQ,GAAD,CAAWhI,QAAS,kBAAI,EAAKqd,0BAA0BrlB,WA1DjD,EAiElBklB,aAAa,SAAAN,GACT,IAAI/O,EAAQ,GAMZ,OALAuF,GAAazO,SAAQ,SAAChT,GACfA,EAAK2K,QAAQghB,OAAOV,KACnB/O,EAASlc,EAAKoR,UAGf8K,GAxEO,EA0ElBsP,YAAY,SAAAN,GACR,IAAIhP,EAAQ,GAMZ,OALAwF,GAAS1O,SAAQ,SAAChT,GACXA,EAAK2K,QAAQghB,OAAOT,KACnBhP,EAASlc,EAAKoR,UAGf8K,GAjFO,EAmFlB0P,oBAnFkB,uCAmFE,WAAMZ,GAAN,eAAAlpB,EAAA,sDACV2pB,EAAgBT,EAAaA,EAAY7c,QAAO,SAACC,EAAIvJ,GAEvD,OADAuJ,EAAIvJ,EAAW1B,KAAK0B,EAAWoH,KACxBmC,IACT,IAAI,GACN,EAAKqd,gBAAgBA,EALL,2CAnFF,wDA2FlBI,yBA3FkB,sBA2FQ,4BAAA/pB,EAAA,6DACtB,EAAKiO,SAAS,CAACoI,SAAQ,IADD,SAEhB,EAAKlO,MAAM6hB,SAFK,cAGtB,EAAK/b,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACgc,qBAAqB,EAAK9hB,MAAMxL,2BAA2BR,OAJpD,SAKhB,EAAKgM,MAAM6gB,KAAK,CAAC,QAAS,IALV,OAMhBkB,EAAI,EAAK/hB,MAAMhL,kBAAkBhB,KAAK8Y,KAC5C,EAAK6U,oBAAoBI,GACzB,EAAKjc,SAAS,CAACib,YAAYgB,IARL,4CA3FR,EAsGlBxT,QAAQ,WACJ,EAAKnS,oBAAoB,KACzB,EAAK0J,SAAS,CAAC0C,QAAO,KAxGR,EA2GlBuF,WAAW,SAAC3R,GACR,EAAKA,oBAAoBA,EACzB,EAAK0J,SAAS,CAAC0C,QAAO,KA7GR,EAgHlBwZ,+BAA+B,WAC3B,EAAK/hB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,IAChBpM,EAAoB+D,EAC1B,EAAKF,KAAKyO,cACP,EAAKtS,sBACJA,EAAoBlD,IAAI,EAAKkD,oBAAoBlD,KANpC,SAQX,EAAK8G,MAAMiiB,QAAQ7lB,GARR,OAUE,KADbmD,EAAO,EAAKS,MAAMxL,4BACdN,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK2tB,4BAELjqB,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iBAjHc,EAsIlBkhB,0BAA0B,SAACrlB,GACvB,KAAM2J,QAAQ,CACV3C,MAAM,2BAAOhH,EAAoB4F,KAAK,eACtCiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMkiB,MAAM9lB,EAAoBlD,KAD1C,OAGkB,KADbqG,EAAO,EAAKS,MAAMxL,4BACdN,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK2tB,4BALR,2CAAD,kDAAC,MAvIT,EAAK/tB,MAAM,CACPiuB,qBAAqB,GACrBf,YAAY,GACZ7S,SAAQ,EACR1F,QAAO,GANG,E,kFAqJdjI,KAAKoN,e,0CAGLpN,KAAKqhB,6B,+BAEA,IAAD,SACoDrhB,KAAK1M,MAAtDiuB,EADH,EACGA,qBAAqB5T,EADxB,EACwBA,QAAQ1F,EADhC,EACgCA,OAAOuY,EADvC,EACuCA,YACrC3kB,EAAoBmE,KAAKnE,qBAAqB,GAC9CgH,EAAM,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,UAAzD,gBACZ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYkS,EACZlU,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gB9CtLN,G8CsLgCoH,iBAAgB,KAGvD,wBACE9T,MAAOhH,EAAoBlD,IAAM,2BAAS,2BAC1C6Q,QAASvB,EACTvC,KAAM1F,KAAKyhB,+BACXhY,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5B7D,oBAAqBA,EACrB2kB,YAAaA,U,GAvLClf,aA+M5BS,GAAqB,CAACuf,OdtKN,SAAAzlB,GAAmB,8CAAI,WAAMkD,GAAN,eAAAzH,EAAA,sEACpBsE,GAAsBC,GADF,OAEpB,KADfmD,EADmC,QAE/BrL,QACNoL,EAPoC,CACxCvL,K3CaqB,c2CZrBC,KAKyCuL,EAAOvL,OAHP,2CAAJ,uDcsKNiuB,QdzJZ,SAAA7lB,GAAmB,8CAAI,WAAMkD,GAAN,eAAAzH,EAAA,sEACvBwE,GAAuBD,GADA,OACpCmD,EADoC,OAE1CD,GAPkCrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACjDH,K3CGqB,c2CFrBE,MACAC,YAE0C,iCALT,IAACD,EAAIC,IAKI,OAAJ,uDcyJCguB,Md/ItB,SAAA3lB,GAAqB,8CAAI,WAAM+C,GAAN,eAAAzH,EAAA,sEACrByE,GAAqBC,GADA,OACpCgD,EADoC,OAE1CD,GAPgCrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC/CH,K3CLsB,c2CMtBE,MACAC,YAE0C,iCALX,IAACD,EAAIC,IAKM,OAAJ,uDc+IO2sB,SAElC3d,gBATS,SAAArP,GACpB,MAAO,CACHW,2BAA2BX,EAAMW,2BACjCQ,kBAAkBnB,EAAMmB,qBAQ5BsN,GAFWY,CAGbme,IC1NFpM,KAAOC,OAAO,SAEd,IAAMjU,GAAK,IAAKA,KACVoH,GAAO,KAAOA,OACdqV,GAASpY,GAAUP,KAAKW,OAExB2G,G,2MAOFxY,MAAM,CACFsuB,gBAAgB,GAChBC,aAAa,GACbrB,YAAY,I,EAGhBsB,oB,sBAAoB,4BAAAxqB,EAAA,6DAChB,EAAKiO,SAAS,CAACqc,gBAAgB,KADf,SAEGroB,IAFH,OAGG,KADbyF,EAFU,QAGNrL,QACN,EAAK4R,SAAS,CAACqc,gBAAgB5iB,EAAOvL,OAJ1B,2C,EAQpBsuB,M,uCAAM,WAAM5hB,GAAN,eAAA7I,EAAA,6DACF,EAAKiO,SAAS,CAACsc,aAAa,KAD1B,SAEiBjoB,GAAc,CAAC,eAAiBuG,IAFjD,OAGiB,KADbnB,EAFJ,QAGQrL,QACN,EAAK4R,SAAS,CAACsc,aAAa7iB,EAAOvL,OAJrC,2C,wDAQNuuB,e,uCAAe,WAAM7hB,GAAN,eAAA7I,EAAA,6DACX,EAAKiO,SAAS,CAACib,YAAY,KADhB,SAEQpmB,GAAa,CAAC,QAAS,EAAM,YAAc+F,IAFnD,OAGQ,KADbnB,EAFK,QAGDrL,QACN,EAAK4R,SAAS,CAACib,YAAYxhB,EAAOvL,KAAK8Y,OAJhC,2C,0IASXvM,KAAK8hB,sBACL9hB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IAAD,EAC6CM,KAAK1M,MAA/CsuB,EADH,EACGA,gBAAgBC,EADnB,EACmBA,aAAarB,EADhC,EACgCA,YADhC,EAEwBxgB,KAAKP,MAA1BtE,EAFH,EAEGA,cAAc6Y,EAFjB,EAEiBA,MACdzT,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,sBALiB,CACjByL,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAIb,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,iBAAlBA,CAEI,wBAAQ4I,SAAUnJ,KAAK+hB,OAEfH,EAAgBxY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,YAM5E,kBAAC,GAAD,CAAMmF,MAAM,gBAEZrG,EAAkB,cAAlBA,CAEI,wBAAQ4I,SAAUnJ,KAAKgiB,gBAEfH,EAAazY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,YAMzE,kBAAC,GAAD,CAAMmF,MAAM,gBAERrG,EAAkB,UAAU,CACxBQ,aAAa5F,EAAc8mB,QAC3BthB,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,4BAEIigB,EAAYpX,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAKmD,IAAKwH,MAAO3K,EAAKmD,KAAMnD,EAAK0sB,UAMhF,kBAAC,GAAD,CAAMtb,MAAM,4BACPrG,EAAkB,cAAc,CAC7BQ,aAAa5F,EAAcuN,YAAcgM,KAAOvZ,EAAcuN,YAAY,cAAgBgM,KAAOyI,GAAS,cAC1Gxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,+BAGR,kBAAC,GAAD,CAAMqG,MAAM,4BACPrG,EAAkB,UAAU,CACzBQ,aAAa5F,EAAcid,QAC3BzX,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEIyT,EAAM5K,KAAI,SAAA+Y,GAAE,OAAE,kBAAC,GAAD,CAAQrf,IAAKqf,EAAGxpB,IAAKwH,MAAOgiB,EAAGxpB,KAAMwpB,EAAG7pB,SAAU6pB,EAAG1gB,iB,GAnHzE+O,iBA4HP,OAAKhP,QAAL,CAAcsK,ICrIvBhE,GAAO,KAAOA,OAECsa,G,YACjB,WAAY3iB,GAAO,IAAD,8BACd,4CAAMA,KAOV4iB,WAAW,kBAAI,EAAK/uB,MAAMT,MARR,EAUlByvB,eAVkB,uCAUH,WAAMniB,GAAN,mBAAA7I,EAAA,6DACX,EAAKiO,SAAS,CAACyP,KAAK,IADT,SAEQ9Z,GAAgB,CAAC,QAAUiF,EAAM,QAAS,IAFlD,OAGX,GAAmB,KADbnB,EAFK,QAGDrL,OAAW,CAEjB,IADIqhB,EAAK,EACDhT,EAAE,EAAEA,EAAEhD,EAAOvL,KAAK4M,OAAO2B,IAC7BgT,GAAM,EAEV,EAAKzP,SAAS,CAACyP,OAAKniB,KAAKsN,IARlB,2CAVG,sDAEd,EAAK7M,MAAM,CACP0hB,KAAK,EACLniB,KAAK,GAJK,E,sEAsBT,IAAD,OACGmhB,EAAOhU,KAAKP,MAAZuU,MAMP,OACI,2BACI,sBAAMtT,KAAN,eAAWkG,MAAM,4BAPJ,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMT,wBAAQxC,SAAU,SAAAhJ,GAAK,OAAE,EAAKmiB,eAAeniB,KAErC6T,EAAM5K,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAKmD,IAAKwH,MAAO3K,EAAKmD,KAAMnD,EAAKiM,UAG1E,uBAAOtB,MAAOH,KAAK1M,MAAM0hB,KAAMrI,UAAQ,U,GAtCfrL,aCSlCihB,G,YACF,WAAY9iB,GAAO,IAAD,8BACd,4CAAMA,KAYV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KACpC,CACE7F,MAAM,yCACNyK,UAAU,UACVC,OAAO,SAAC0U,GACJ,IAAIvQ,EAAQ,GAMZ,OALA,EAAKpe,MAAMktB,YAAYhY,SAAQ,SAAAga,GACxBP,IAAUO,EAAGC,KACZ/Q,EAAQ8Q,EAAGjQ,SAGZb,IAEb,CACE7O,MAAM,2BACNyK,UAAU,UACVC,OAAO,SAACmV,GACJ,IAAIhR,EAAQ,GAMZ,OALA,EAAKpe,MAAM0gB,MAAMxL,SAAQ,SAAA3V,GAClB6vB,IAAW7vB,EAAK8F,MACf+Y,EAAQ7e,EAAK4O,SAGdiQ,IAEb,CACE7O,MAAM,eACNyK,UAAU,SACVC,OAAO,SAAC5Z,GACJ,OAAGA,EAEK,8BACI,wBAAKuN,M/B9DT,W+B8DI,uBAKJ,8BACI,wBAAKA,M/BnER,W+BmEG,yBAKlB,CACE2B,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAACpS,GAAD,OACP,8BACI,kBAACyQ,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWrS,MAD1C,eAEI,kBAAC0Q,GAAD,CAAWhI,QAAS,kBAAI,EAAK8e,oBAAoBxnB,WAnE3C,EA0ElBynB,gBA1EkB,sBA0EF,kCAAAtrB,EAAA,6DACZ,EAAKiO,SAAS,CAACib,YAAY,KADf,SAEN,EAAK/gB,MAAM6gB,KAAK,CAAC,QAAS,IAFpB,OAMZ,IAHMthB,EAAO,EAAKS,MAAMhL,kBAClB8X,EAAK,GACLlX,EAAI2J,EAAOvL,KAAK8Y,KACdvK,EAAE,EAAEA,EAAE3M,EAAIgL,OAAO2B,IACrBuK,EAAKjK,KAAK,CAAC,GAAKjN,EAAI2M,GAAGrJ,IAAI,KAAOtD,EAAI2M,GAAGnI,YAAYL,eAAeiI,KAAK,IAAIpM,EAAI2M,GAAGnI,YAAY4H,KAAK,IAAIpM,EAAI2M,GAAGkgB,KAEpH,EAAK3c,SAAS,CAACib,YAAYjU,IATf,2CA1EE,EAsFlBwH,UAtFkB,sBAsFR,kCAAAzc,EAAA,sEACA,EAAKmI,MAAMP,KAAK,CAAC,KAAO,uBADxB,cAEA2jB,EAAG,EAAKpjB,MAAM5L,aACdoO,EAAE4gB,EAAGpvB,KAAK,GAAGkF,IAHb,SAIA,EAAK8G,MAAML,IAAI,CAAC,MAAQ6C,IAJxB,OAKAjD,EAAO,EAAKS,MAAM3L,YAClBkgB,EAAMhV,EAAOvL,KACnB,EAAK8R,SAAS,CAACyO,UAPT,2CAtFQ,EAgGlB8O,mBAhGkB,sBAgGE,sBAAAxrB,EAAA,6DAChB,EAAKiO,SAAS,CAACoI,SAAQ,IADP,SAEV,EAAKlO,MAAMsjB,QAFD,OAGhB,EAAKxd,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACyd,eAAe,EAAKvjB,MAAMrL,qBAAqBX,OAJ9C,2CAhGF,EAuGlBua,QAAQ,WACJ,EAAK7S,cAAc,KACnB,EAAKoK,SAAS,CAAC0C,QAAO,KAzGR,EA4GlBuF,WAAW,SAACrS,GACR,EAAKA,cAAcA,EACnB,EAAKoK,SAAS,CAAC0C,QAAO,KA9GR,EAiHlBgb,WAAW,WACP,EAAK1d,SAAS,CAAC2d,YAAW,KAlHZ,EAqHlBC,yBAAyB,WACrB,EAAKzjB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,wBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,KAChB9M,EAAcyE,GACN8I,YAAY3D,GAAUnF,EAAM,aAC1C,EAAKF,KAAKyO,cACP,EAAKhT,gBACJA,EAAcxC,IAAI,EAAKwC,cAAcxC,KAPxB,SASX,EAAK8G,MAAM2jB,OAAOjoB,GATP,OAWE,KADb6D,EAAO,EAAKS,MAAMlE,iBACd5H,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKovB,sBAEL1rB,EAAA,EAAQH,MAAM+H,EAAOtL,KAfR,4CAAzB,oCAAAsM,KAAA,iBAtHc,EA4IlB2iB,oBAAoB,SAACxnB,GACjB,KAAMqK,QAAQ,CACV3C,MAAM,2BAAO1H,EAAcsG,KAAK,eAChCiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAM4jB,KAAKloB,EAAcxC,KADnC,OAGkB,KADbqG,EAAO,EAAKS,MAAMrL,sBACdT,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKovB,sBALR,2CAAD,kDAAC,MA/IK,EA0JlBQ,oBA1JkB,sBA0JE,8BAAAhsB,EAAA,6DAChB,EAAKiO,SAAS,CAAC2d,YAAW,IACpB9K,EAAQ,EAAKY,IAAInK,QAAQwT,aAFf,SAGV,EAAK5iB,MAAM8jB,MAAMnL,GAHP,OAKG,KADbpZ,EAAO,EAAKS,MAAMrL,sBACdT,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKovB,sBAEL1rB,EAAA,EAAQH,MAAM+H,EAAOtL,KATT,2CAxJhB,EAAKslB,IAAI/J,IAAMC,YACf,EAAK5b,MAAM,CACP0vB,eAAe,GACfrV,SAAQ,EACR1F,QAAO,EACPib,YAAW,EACXlP,MAAM,GACNwM,YAAY,IATF,E,kFAwKdxgB,KAAK4iB,kBACL5iB,KAAKoN,e,0CAGLpN,KAAK8iB,qBACL9iB,KAAK+T,c,+BAEA,IAAD,SACmD/T,KAAK1M,MAArD0vB,EADH,EACGA,eAAerV,EADlB,EACkBA,QAAQ1F,EAD1B,EAC0BA,OAAOib,EADjC,EACiCA,WAAWlP,EAD5C,EAC4CA,MAC1C7Y,EAAc6E,KAAK7E,eAAe,GAClC0H,EAAM,8BACR,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,SAAzD,gBADQ,WAER,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKijB,YAAY,uBAAMzvB,KAAK,cAA5D,iBAEJ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAY2T,EACZ3V,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBjD/MN,GiD+MgCoH,iBAAgB,KAGvD,wBACE9T,MAAO1H,EAAcxC,IAAM,eAAO,eAClC6Q,QAASvB,EACTvC,KAAM1F,KAAKmjB,yBACX1Z,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5BsU,MAAOA,EACP7Y,cAAeA,KAGnB,wBACE0H,MAAO,eACP2G,QAAS0Z,EACTxd,KAAM1F,KAAKsjB,oBACX7Z,SAAU,WACN,EAAKlE,SAAS,CAAC2d,YAAW,MAG5B,kBAAC,GAAD,CACAlP,MAAOA,EACPrE,IAAK3P,KAAKgZ,Y,GA3NF1X,aAyPtBS,GAAqB,CAACghB,MjB/FP,SAAA5nB,GAAa,8CAAI,WAAM4D,GAAN,eAAAzH,EAAA,sEACb4D,GAAgBC,GADH,OAEb,KADf6D,EAD4B,QAExBrL,QACNoL,EAP8B,CAClCvL,K3ChF2B,oB2CiF3BC,KAKmCuL,EAAOvL,OAHR,2CAAJ,uDiB+FA2vB,OjBnFZ,SAAAjoB,GAAa,8CAAI,WAAM4D,GAAN,eAAAzH,EAAA,sEAChB8D,GAAiBD,GADD,OAC7B6D,EAD6B,OAEnCD,GAP4BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC3CH,K3CzF2B,oB2C0F3BE,MACAC,YAEmC,iCALR,IAACD,EAAIC,IAKG,OAAJ,uDiBmFM0vB,KjBzErB,SAAA/nB,GAAe,8CAAI,WAAMyD,GAAN,eAAAzH,EAAA,sEACd+D,GAAeC,GADD,OAC7B0D,EAD6B,OAEnCD,GAP0BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACzCH,K3CjG2B,oB2CkG3BE,MACAC,YAEmC,iCALV,IAACD,EAAIC,IAKK,OAAJ,uDiByEW2sB,QAAKlhB,OAAIF,QAAKqkB,MjB/DvC,SAAA/nB,GAAS,8CAAI,WAAMuD,GAAN,eAAAzH,EAAA,sEACTiE,GAAgBC,GADP,OACxBwD,EADwB,OAE9BD,GAP2BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC1CH,K3CzGgC,yB2C0GhCE,MACAC,YAE8B,iCALJ,IAACD,EAAIC,IAKD,OAAJ,wDiBiEfgP,gBAXS,SAAArP,GACpB,MAAO,CACHQ,YAAYR,EAAMQ,YAClBD,aAAaP,EAAMO,aACnBO,qBAAqBd,EAAMc,qBAC3BK,kBAAkBnB,EAAMmB,qBAQ5BsN,GAFWY,CAGb4f,ICvQF7N,KAAOC,OAAO,SAEd,IAAMjU,GAAK,IAAKA,KACVoH,GAAO,KAAOA,OACdqV,GAASpY,GAAUP,KAAKW,OAExB2G,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IAAD,EACoBM,KAAKP,MAAtB/D,EADH,EACGA,UAAUsY,EADb,EACaA,MACVzT,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,sBALiB,CACjByL,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAIb,kBAAC,GAAD,CAAM/E,MAAM,4BACPrG,EAAkB,cAAc,CAC7BQ,aAAarF,EAAUgN,YAAcgM,KAAOhZ,EAAUgN,YAAY,cAAgBgM,KAAOyI,GAAS,cAClGxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,+BAGR,kBAAC,GAAD,CAAMqG,MAAM,4BAERrG,EAAkB,WAAW,CACzBQ,aAAarF,EAAUgnB,SACvB/hB,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,4BAEIyT,EAAM5K,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAKmD,IAAKwH,MAAO3K,EAAKmD,KAAMnD,EAAKiM,YAM1E,kBAAC,GAAD,CAAMmF,MAAM,gBAERrG,EAAkB,OAAO,CACrBQ,aAAarF,EAAUsZ,KAAKtZ,EAAUsZ,KAAK,EAC3CrU,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,mC,GAxDFiQ,iBAgEP,OAAKhP,QAAL,CAAcsK,ICxEvBhE,GAAO,KAAOA,OAGCsa,G,YAEjB,WAAY3iB,GAAO,IAAD,8BACd,4CAAMA,KAMV4iB,WAAW,kBAAI,EAAK/uB,MAAMT,MAPR,EASlByvB,eATkB,uCASH,WAAMniB,GAAN,mBAAA7I,EAAA,6DACX,EAAKiO,SAAS,CAACyP,KAAK,IADT,SAEQvZ,GAAY,CAAC,SAAW0E,EAAM,QAAS,IAF/C,OAGX,GAAmB,KADbnB,EAFK,QAGDrL,OAAW,CAEjB,IADIqhB,EAAK,EACDhT,EAAE,EAAEA,EAAEhD,EAAOvL,KAAK4M,OAAO2B,IAC7BgT,GAAMhW,EAAOvL,KAAKuO,GAAGgT,KAEzB,EAAKzP,SAAS,CAACyP,OAAKniB,KAAKsN,IARlB,2CATG,sDAEd,EAAK7M,MAAM,CACP0hB,KAAK,EACLniB,KAAK,GAJK,E,sEAqBT,IAAD,OACGmhB,EAAOhU,KAAKP,MAAZuU,MAMP,OACI,2BACI,sBAAMtT,KAAN,eAAWkG,MAAM,4BAPJ,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMT,wBAAQxC,SAAU,SAAAhJ,GAAK,OAAE,EAAKmiB,eAAeniB,KAErC6T,EAAM5K,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAKmD,IAAKwH,MAAO3K,EAAKmD,KAAMnD,EAAKiM,UAG1E,uBAAOtB,MAAOH,KAAK1M,MAAM0hB,KAAMrI,UAAQ,U,GAtCfrL,aCQlCkiB,G,YACF,WAAY/jB,GAAO,IAAD,8BACd,4CAAMA,KAWV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KACpC,CACE7F,MAAM,2BACNyK,UAAU,WACVC,OAAO,SAACmV,GACJ,IAAIhR,EAAQ,GAMZ,OALA,EAAKpe,MAAM0gB,MAAMxL,SAAQ,SAAA3V,GAClB6vB,IAAW7vB,EAAK8F,MACf+Y,EAAQ7e,EAAK4O,SAGdiQ,IAEb,CACE7O,MAAM,eACNyK,UAAU,QACZ,CACEzK,MAAM,eACNyK,UAAU,SACVC,OAAO,SAAC5Z,GACJ,OAAGA,EAEK,8BACI,wBAAKuN,MlCpDT,WkCoDI,uBAKJ,8BACI,wBAAKA,MlCzDR,WkCyDG,yBAMpB,CACI2B,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC7R,GAAD,OACP,8BACI,kBAACkQ,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW9R,MAD1C,eAEI,kBAACmQ,GAAD,CAAWhI,QAAS,kBAAI,EAAK4f,gBAAgB/nB,WA1DvC,EAiElBqY,UAjEkB,sBAiER,kCAAAzc,EAAA,sEACA,EAAKmI,MAAMP,KAAK,CAAC,KAAO,uBADxB,cAEA2jB,EAAG,EAAKpjB,MAAM5L,aACdoO,EAAE4gB,EAAGpvB,KAAK,GAAGkF,IAHb,SAIA,EAAK8G,MAAML,IAAI,CAAC,MAAQ6C,IAJxB,OAKAjD,EAAO,EAAKS,MAAM3L,YAClBkgB,EAAMhV,EAAOvL,KACnB,EAAK8R,SAAS,CAACyO,UAPT,2CAjEQ,EA2ElB0P,eA3EkB,sBA2EF,sBAAApsB,EAAA,6DACZ,EAAKiO,SAAS,CAACoI,SAAQ,IADX,SAEN,EAAKlO,MAAMkkB,OAFL,OAGZ,EAAKpe,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACqe,WAAW,EAAKnkB,MAAMpL,iBAAiBZ,OAJ1C,2CA3EE,EAkFlBua,QAAQ,WACJ,EAAKtS,UAAU,KACf,EAAK6J,SAAS,CAAC0C,QAAO,KApFR,EAuFlBuF,WAAW,SAAC9R,GACR,EAAKA,UAAUA,EACf,EAAK6J,SAAS,CAAC0C,QAAO,KAzFR,EA4FlBgb,WAAW,WACP,EAAK1d,SAAS,CAAC2d,YAAW,KA7FZ,EAgGlBW,qBAAqB,WACjB,EAAKnkB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,wBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,KAChBvM,EAAUkE,GACN8I,YAAY3D,GAAUnF,EAAM,aACtC,EAAKF,KAAKyO,cACP,EAAKzS,YACJA,EAAU/C,IAAI,EAAK+C,UAAU/C,KAPhB,SASX,EAAK8G,MAAMqkB,MAAMpoB,GATN,OAWE,KADbsD,EAAO,EAAKS,MAAMpL,kBACdV,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKgwB,kBAELtsB,EAAA,EAAQH,MAAM+H,EAAOtL,KAfR,4CAAzB,oCAAAsM,KAAA,iBAjGc,EAuHlByjB,gBAAgB,SAAC/nB,GACb,KAAM8J,QAAQ,CACV3C,MAAM,2BAAOnH,EAAU+F,KAAK,eAC5BiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMskB,IAAIroB,EAAU/C,KAD9B,OAGkB,KADbqG,EAAO,EAAKS,MAAMpL,kBACdV,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKgwB,kBALR,2CAAD,kDAAC,MA1HK,EAqIlBM,gBArIkB,sBAqIF,8BAAA1sB,EAAA,6DACZ,EAAKiO,SAAS,CAAC2d,YAAW,IACpBR,EAAS,EAAK1J,IAAInK,QAAQwT,aAFpB,SAGN,EAAK5iB,MAAMwkB,KAAKvB,GAHV,OAKO,KADb1jB,EAAO,EAAKS,MAAMpL,kBACdV,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKgwB,kBAELtsB,EAAA,EAAQH,MAAM+H,EAAOtL,KATb,2CAnIZ,EAAKslB,IAAI/J,IAAMC,YACf,EAAK5b,MAAM,CACPswB,WAAW,GACXjW,SAAQ,EACR1F,QAAO,EACPib,YAAW,EACXlP,MAAM,IARI,E,kFAmJdhU,KAAKoN,e,0CAGLpN,KAAK0jB,iBACL1jB,KAAK+T,c,+BAEA,IAAD,SAC+C/T,KAAK1M,MAAjDswB,EADH,EACGA,WAAWjW,EADd,EACcA,QAAQ1F,EADtB,EACsBA,OAAOib,EAD7B,EAC6BA,WAAWlP,EADxC,EACwCA,MACtCtY,EAAUsE,KAAKtE,WAAW,GAC1BmH,EAAM,8BACR,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,aAAzD,gBADQ,WAER,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKijB,YAAY,uBAAMzvB,KAAK,cAA5D,iBAEJ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYuU,EACZvW,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBpDzLN,GoDyLgCoH,iBAAgB,KAGvD,wBACE9T,MAAOnH,EAAU/C,IAAM,eAAO,eAC9B6Q,QAASvB,EACTvC,KAAM1F,KAAK6jB,qBACXpa,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5BsU,MAAOA,EACPtY,UAAWA,KAGf,wBACEmH,MAAO,eACP2G,QAAS0Z,EACTxd,KAAM1F,KAAKgkB,gBACXva,SAAU,WACN,EAAKlE,SAAS,CAAC2d,YAAW,MAG5B,kBAAC,GAAD,CACAvT,IAAK3P,KAAKgZ,IACVhF,MAAOA,U,GArMH1S,aAiOlBS,GAAqB,CAAC4hB,KpB9BR,SAAAO,GAAU,8CAAI,WAAMnlB,GAAN,eAAAzH,EAAA,sEACTmE,GAAYyoB,GADH,OAET,KADfllB,EADwB,QAEpBrL,QACNoL,EAP0B,CAC9BvL,K3CjHuB,gB2CkHvBC,KAK+BuL,EAAOvL,OAHR,2CAAJ,uDoB8BGqwB,MpBlBZ,SAAAI,GAAU,8CAAI,WAAMnlB,GAAN,eAAAzH,EAAA,sE/B7HI3B,EAAc,uBAA1B+F,E+B8HSwoB,E/B9HmDxoB,EAAU/C,IAAM,QAAU,Q+B6H9E,OACzBqG,EADyB,OAE/BD,GAPwBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACvCH,K3C1HuB,gB2C2HvBE,MACAC,YAE+B,iCALR,IAACD,EAAIC,E/BxHL+H,I+B6HQ,OAAJ,uDoBkBQqoB,IpBRpB,SAAAI,GAAY,8CAAI,WAAMplB,GAAN,eAAAzH,EAAA,sE/BrII3B,EAAc,uBAAuB,CAAC,I+BsIzCwuB,G/BtI4D,U+BqI7D,OACzBnlB,EADyB,OAE/BD,GAPsBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACrCH,K3ClIuB,gB2CmIvBE,MACAC,YAE+B,iCALV,IAACD,EAAIC,IAKK,OAAJ,uDoBQYswB,KpBEvB,SAAAzoB,GAAS,8CAAI,WAAMuD,GAAN,eAAAzH,EAAA,sEACRqE,GAAYH,GADJ,OACvBwD,EADuB,OAE7BD,GAPuBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACtCH,K3C1I4B,qB2C2I5BE,MACAC,YAE6B,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDoBFmByL,OAAIF,SAErCyD,gBAVS,SAAArP,GACpB,MAAO,CACHQ,YAAYR,EAAMQ,YAClBD,aAAaP,EAAMO,aACnBQ,iBAAiBf,EAAMe,oBAQ3B0N,GAFWY,CAGb6gB,IC/OF9O,KAAOC,OAAO,SACd,IAAMjU,GAAK,IAAKA,KACTwc,G,IAAAA,SACDC,GAASpY,GAAUP,KAAKW,OAExB2G,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACExD,EAAU8D,KAAKP,MAAfvD,SACAqE,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,sBAAUiE,EACN,kBAAC,GAAD,CAAMhJ,MAAM,gBACPrG,EAAkB,cAAc,CAC7BQ,aAAc7E,EAASwM,YAAYgM,KAAOxY,EAASwM,YAAY,cAAcgM,KAAOyI,GAAS,cAC7Fxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,2CAJ7BmJ,CAQG,+BAGR,kBAAC,GAAD,eAAMqG,MAAM,kCAAYgJ,GAEpBrP,EAAkB,OAAO,CACrBQ,aAAa7E,EAASuF,KACtBd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,6DAH3BmJ,CAMI,kBAAC,GAAD,CAAUY,YAAY,GAAGqd,SAAU,CAACC,QAAQ,EAAEC,QAAQ,OAI9D,kBAAC,GAAD,eAAM9X,MAAM,kCAAYgJ,GAEpBrP,EAAkB,UAAU,CACxBQ,aAAa7E,EAAS8M,QACtBrI,MAAM,CACN,CAACC,UAAS,KAHdL,CAMI,kBAAC,GAAD,CAAUY,YAAY,GAAGqd,SAAU,CAACC,QAAQ,EAAEC,QAAQ,Y,GApDxDpd,aA4DP,OAAKE,QAAL,CAAcsK,IC5DvBsY,G,YAEF,WAAY3kB,GAAO,IAAD,8BACd,4CAAMA,KAQV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,eACNyK,UAAU,WAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAACrR,GAAD,OACP,8BACI,kBAAC0P,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWtR,MAD1C,eAEI,kBAAC2P,GAAD,CAAWhI,QAAS,kBAAI,EAAKwgB,eAAenoB,WA9BtC,EAoClBooB,aApCkB,sBAoCL,4BAAAhtB,EAAA,sEACH,EAAKmI,MAAMoI,OADR,OAEH7I,EAAO,EAAKS,MAAM1L,gBACxB,EAAKwR,SAAS,CAAEgf,UAAUvlB,EAAOvL,OAHxB,2CApCK,EA0ClBua,QAAQ,WACJ,EAAK9R,SAAS,KACd,EAAKqJ,SAAS,CACV0I,WAAU,KA7CA,EAgDlBuW,oBAAoB,WAChB,EAAK9kB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,wBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,KACnB/R,EAAS0D,GACN8I,YAAY3D,GAAUnF,EAAM,aACrC,EAAKF,KAAKyO,cACP,EAAKjS,WACJA,EAASvD,IAAI,EAAKuD,SAASvD,KAPd,SASX,EAAK8G,MAAMglB,MAAMvoB,GATN,OAWE,KADb8C,EAAO,EAAKS,MAAM1L,iBACdJ,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK4wB,gBAELltB,EAAA,EAAQH,MAAM+H,EAAOtL,KAfR,4CAAzB,oCAAAsM,KAAA,iBAjDc,EAsElBwN,WAAW,SAACtR,GACR,EAAKA,SAASA,EACd,EAAKqJ,SAAS,CAAC0I,WAAU,KAxEX,EA2ElBoW,eAAe,SAACnoB,GACZ,KAAMsJ,QAAQ,CACV3C,MAAM,4BAAQ3G,EAASuF,KAAK,gBAC5BiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMilB,IAAIxoB,EAASvD,KAD7B,OAGkB,KADbqG,EAAO,EAAKS,MAAM1L,iBACdJ,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK4wB,gBAELltB,EAAA,EAAQH,MAAM+H,EAAOtL,KAPxB,2CAAD,kDAAC,MA5ET,EAAKJ,MAAM,CACP2a,WAAU,EACVN,SAAQ,EACR4W,UAAU,IALA,E,kFA4FdvkB,KAAKoN,e,0CAGLpN,KAAKskB,iB,+BAEA,IAAD,SACgCtkB,KAAK1M,MAAlCixB,EADH,EACGA,UAAU5W,EADb,EACaA,QAAQM,EADrB,EACqBA,UACnB/R,EAAS8D,KAAK9D,UAAU,GACxB2G,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,YAAzD,iBAET,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYkV,EACZlX,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBtD9HN,MsDgIP,wBACE1M,MAAO3G,EAASvD,IAAM,iCAAU,iCAChC6Q,QAASyE,EACTvI,KAAM1F,KAAKwkB,oBACX/a,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOxD,SAAUA,U,GA7HnDoF,aA+IjBS,GAAsB,CAAC8F,QAAK4c,M1CvHb,SAAAvoB,GAAQ,8CAAI,WAAM6C,GAAN,eAAAzH,EAAA,sEACV6E,GAAYD,GADF,OACvB8C,EADuB,OAE7BD,GAPuBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACtCH,KvBOsB,euBNtBE,MACAC,YAE6B,iCALP,IAACD,EAAIC,IAKE,OAAJ,uD0CuHW+wB,I1C5GrB,SAAAroB,GAAU,8CAAI,WAAM0C,GAAN,eAAAzH,EAAA,sEACR8E,GAAUC,GADF,OACvB2C,EADuB,OAE7BD,GAPqBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACpCH,KvBFsB,euBGtBE,MACAC,YAE6B,iCALT,IAACD,EAAIC,IAKI,OAAJ,wD0C8GdgP,gBANS,SAAArP,GACpB,MAAO,CAACS,gBAAgBT,EAAMS,mBAO9BgO,GAFWY,CAGbyhB,IC3JI1jB,GAAK,IAAKA,KAEVoL,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACElG,EAAgBwG,KAAKP,MAArBjG,eACA+G,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,2BACI,kBAAC,GAAD,eAAMqG,MAAM,4BANC,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMTpL,EAAkB,OAAO,CACrBQ,aAAavH,EAAeiI,KAC5Bd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,uD,GA5BrBG,aAoCP,OAAKE,QAAL,CAAcsK,IC9BvB6Y,G,YAEF,WAAYllB,GAAO,IAAD,8BACd,4CAAMA,KAQV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,OACZ,CACEzK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC/T,GAAD,OACP,8BACI,kBAACoS,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWhU,MAD1C,eAEI,kBAACqS,GAAD,CAAWhI,QAAS,kBAAI,EAAK+gB,qBAAqBprB,WA7B5C,EAmClBsoB,oBAnCkB,sBAmCE,sBAAAxqB,EAAA,6DAChB,EAAKiO,SAAS,CAACoI,SAAQ,IADP,SAEV,EAAKlO,MAAM0gB,OAFD,OAGhB,EAAK5a,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACqc,gBAAgB,EAAKniB,MAAMnL,sBAAsBb,OAJhD,2CAnCF,EA0ClBua,QAAQ,WACJ,EAAKxU,eAAe,KACpB,EAAK+L,SAAS,CACV0I,WAAU,KA7CA,EAgDlB4W,0BAA0B,WACtB,EAAKnlB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,IACnBzU,EAAeoG,EACrB,EAAKF,KAAKyO,cACP,EAAK3U,iBACJA,EAAeb,IAAI,EAAKa,eAAeb,KAN1B,SAQX,EAAK8G,MAAMqlB,MAAMtrB,GARN,OAUE,KADbwF,EAAO,EAAKS,MAAMnL,uBACdX,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKouB,uBAEL1qB,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iBAjDc,EAqElBwN,WAAW,SAAChU,GACR,EAAKA,eAAeA,EACpB,EAAK+L,SAAS,CAAC0I,WAAU,KAvEX,EA0ElB2W,qBAAqB,SAACprB,GAClB,KAAMgM,QAAQ,CACV3C,MAAM,4BAAQrJ,EAAeiI,KAAK,gBAClCiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMslB,IAAIvrB,EAAeb,KADnC,OAGkB,KADbqG,EAAO,EAAKS,MAAMnL,uBACdX,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKouB,uBALR,2CAAD,kDAAC,MA3ET,EAAKxuB,MAAM,CACP2a,WAAU,EACVN,SAAQ,EACRiU,gBAAgB,IALN,E,kFAyFd5hB,KAAKoN,e,0CAGLpN,KAAK8hB,wB,+BAEA,IAAD,SACsB9hB,KAAK1M,MAAxBqa,EADH,EACGA,QAAQM,EADX,EACWA,UACTzU,EAAewG,KAAKxG,gBAAgB,GACpCqJ,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,mBAAzD,iBAET,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYrP,KAAKP,MAAMnL,sBAAsBb,KAC7C4Z,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gBxD5HN,MwD8HP,wBACE1M,MAAOrJ,EAAeb,IAAM,2BAAS,2BACrC6Q,QAASyE,EACTvI,KAAM1F,KAAK6kB,0BACXpb,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOlG,eAAgBA,U,GA1HnD8H,aA8IvBS,GAAqB,CAACoe,QAAK2E,MZrGZ,SAAAtrB,GAAc,8CAAI,WAAMuF,GAAN,eAAAzH,EAAA,sEAChBmC,EAAkBD,GADF,OAC7BwF,EAD6B,OAEnCD,GAP6BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC5CH,KvDyD4B,qBuDxD5BE,MACAC,YAEmC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDYqGIoxB,IZ1FpB,SAAAprB,GAAgB,8CAAI,WAAMoF,GAAN,eAAAzH,EAAA,sEACdoC,EAAgBC,GADF,OAC7BqF,EAD6B,OAEnCD,GAP2BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC1CH,KvDgD4B,qBuD/C5BE,MACAC,YAEmC,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDY4FpBgP,gBARS,SAAArP,GACpB,MAAO,CACHgB,sBAAsBhB,EAAMgB,yBAQhCyN,GAFWY,CAGbgiB,IC3JIjkB,GAAK,IAAKA,KACVoH,GAAO,KAAOA,OAEdgE,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IAAD,EACgCM,KAAKP,MAAlC5F,EADH,EACGA,YAAY+nB,EADf,EACeA,gBACZrhB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,2BACI,kBAAC,GAAD,eAAM/E,MAAM,4BAAWgJ,GAEnBrP,EAAkB,iBAAiB,CAC/BQ,aAAalH,EAAYL,eACzBmH,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,4BAEIqhB,EAAgBxY,KAAI,SAAA5P,GAAc,OAAE,kBAAC,GAAD,CAAQsJ,IAAKtJ,EAAeb,IAAKwH,MAAO3G,EAAeb,KAAMa,EAAeiI,YAK5H,kBAAC,GAAD,eAAMmF,MAAM,4BAAWgJ,GAEnBrP,EAAkB,OAAO,CACrBQ,aAAalH,EAAY4H,KACzBd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,uD,GA3CrBG,aAmDP,OAAKE,QAAL,CAAcsK,IC/CrBqL,G,IAAAA,OACFrP,GAAO,KAAOA,OAEdkd,G,YAEF,WAAYvlB,GAAO,IAAD,8BACd,4CAAMA,KAWV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,OACZ,CACEzK,MAAM,2BACNyK,UAAU,QAEd,CACIzK,MAAM,eACNyK,UAAU,iBACVC,OAAO,SAAC/T,GACJ,IAAI,IAAIsJ,KAAO,EAAKmiB,oBAChB,GAAGvR,OAAO5Q,KAAOtJ,EACb,OAAO,EAAKyrB,oBAAoBniB,KAKhD,CACID,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC1T,GAAD,OACP,8BACI,kBAAC+R,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAW3T,MAD1C,eAEI,kBAACgS,GAAD,CAAWhI,QAAS,kBAAI,EAAKqhB,kBAAkBrrB,WA3CzC,EAkDlBsrB,wBAAwB,SAACvD,GACrB,IAAMqD,EAAoBrD,EAAiBA,EAAgBje,QAAO,SAACC,EAAIpK,GAEnE,OADAoK,EAAIpK,EAAeb,KAAKa,EAAeiI,KAChCmC,IACT,IAAI,GACN,EAAKqhB,oBAAoBA,GAvDX,EA0DlBG,iBA1DkB,sBA0DD,8BAAA9tB,EAAA,6DACP+tB,EAAG,IACN5jB,KAAK,EAAKnO,MAAMolB,WACnB2M,EAAG7rB,eAAe,EAAKlG,MAAMqlB,WAC7B,EAAKpT,SAAS,CAACoI,SAAQ,IAJV,SAKP,EAAKlO,MAAM2gB,KAAKiF,GALT,cAMb,EAAK9f,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAACsc,aAAa,EAAKpiB,MAAMlL,mBAAmBd,OAP7C,UASP,EAAKgM,MAAM0gB,OATJ,QAUPyB,EAAgB,EAAKniB,MAAMnL,sBAAsBb,KACvD,EAAK0xB,wBAAwBvD,GAC7B,EAAKrc,SAAS,CAACqc,oBAZF,4CA1DC,EAyElB5T,QAAQ,WACJ,EAAKnU,YAAY,KACjB,EAAK0L,SAAS,CACV0I,WAAU,KA5EA,EA+ElBqX,uBAAuB,WACnB,EAAK5lB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,IACnBpU,EAAY+F,EAClB,EAAKF,KAAKyO,cACP,EAAKtU,cACJA,EAAYlB,IAAI,EAAKkB,YAAYlB,KANpB,SAQX,EAAK8G,MAAM8lB,MAAM1rB,GARN,OAUE,KADbmF,EAAO,EAAKS,MAAMlL,oBACdZ,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK0xB,oBAELhuB,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iBAhFc,EAoGlBwN,WAAW,SAAC3T,GACR,EAAKA,YAAYA,EACjB,EAAK0L,SAAS,CAAC0I,WAAU,KAtGX,EAyGlBiX,kBAAkB,SAACrrB,GACf,KAAM2L,QAAQ,CACV3C,MAAM,4BAAQhJ,EAAY4H,KAAK,gBAC/BiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAM+lB,IAAI3rB,EAAYlB,KADhC,OAGkB,KADbqG,EAAO,EAAKS,MAAMlL,oBACdZ,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK0xB,oBALR,2CAAD,kDAAC,MA1GT,EAAK9xB,MAAM,CACP2a,WAAU,EACVN,SAAQ,EACRkU,aAAa,GACbD,gBAAgB,GAChBlJ,WAAW,GACXC,WAAW,IARD,E,kFAwHd3Y,KAAKoN,e,0CAGLpN,KAAKolB,qB,+BAEA,IAAD,SAC4DplB,KAAK1M,MAA9DsuB,EADH,EACGA,gBAAgBjU,EADnB,EACmBA,QAAQM,EAD3B,EAC2BA,UAAUyK,EADrC,EACqCA,WAAWC,EADhD,EACgDA,WAC9C9e,EAAYmG,KAAKnG,aAAa,GAC9BgJ,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,YAAzD,iBAEHsX,EACN,0BAAMtK,UAAU,aACZ,wBACAL,MAAOwY,EACPnY,UAAU,mBACV2I,SAAU,SAAAhJ,GAAK,OAAE,EAAKoF,SAAS,CAACoT,WAAWxY,MAGnCyhB,EAAgBxY,KAAI,SAACqc,GAAD,OAChB,kBAAC,GAAD,CAAQ3iB,IAAK2iB,EAAG9sB,IAAKwH,MAAOslB,EAAG9sB,KAAM8sB,EAAGhkB,UAIpD,kBAAC,GAAD,CACAjB,UAAU,mBACVW,YAAY,iCACZhB,MAAOuY,EACPvP,SAAU,SAAA2E,GAAK,OAAI,EAAKvI,SAAS,CAACmT,WAAW5K,EAAMyD,OAAOpR,SAC1D+Y,SAAUlZ,KAAKolB,iBACfjM,aAAW,KAGf,OACI,wBAAMtW,MAAOA,EAAOiI,MAAOA,GACvB,wBACAqE,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYrP,KAAKP,MAAMlL,mBAAmBd,KAC1C4Z,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gB1DnLN,M0DqLP,wBACE1M,MAAOhJ,EAAYlB,IAAM,2BAAS,2BAClC6Q,QAASyE,EACTvI,KAAM1F,KAAKslB,uBACX7b,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO7F,YAAaA,EAAa+nB,gBAAiBA,U,GA/KjFtgB,aAqMpBS,GAAqB,CAACoe,QAAKC,QAAKmF,Md5HjB,SAAA1rB,GAAW,8CAAI,WAAMkF,GAAN,eAAAzH,EAAA,sEACbwC,GAAeD,GADF,OAC1BmF,EAD0B,OAEhCD,GAP0BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACzCH,KvD6ByB,kBuD5BzBE,MACAC,YAEgC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDc4HY6xB,IdjHzB,SAAAE,GAAa,8CAAI,WAAM3mB,GAAN,eAAAzH,EAAA,sE3CxDM3B,EAAc,sCAAsC,CAAC,I2CyDzD+vB,G3CzD6E,U2CwD/E,OAC1B1mB,EAD0B,OAEhCD,GAPwBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACvCH,KvDoByB,kBuDnBzBE,MACAC,YAEgC,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDcmHjBgP,gBATS,SAAArP,GACpB,MAAO,CACHgB,sBAAsBhB,EAAMgB,sBAC5BC,mBAAmBjB,EAAMiB,sBAQ7BwN,GAFWY,CAGbqiB,ICpNItkB,GAAK,IAAKA,KAEVoL,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACE1F,EAAiBgG,KAAKP,MAAtBzF,gBACAuG,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,2BACI,kBAAC,GAAD,eAAMqG,MAAM,4BANC,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMTpL,EAAkB,OAAO,CACrBQ,aAAa/G,EAAgByH,KAC7Bd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,uD,GA5BrBG,aAoCP,OAAKE,QAAL,CAAcsK,IC/BvB6Z,G,YAEF,WAAYlmB,GAAO,IAAD,8BACd,4CAAMA,KAQV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAACvT,GAAD,OACP,8BACI,kBAAC4R,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWxT,MAD1C,eAEI,kBAAC6R,GAAD,CAAWhI,QAAS,kBAAI,EAAK+hB,sBAAsB5rB,WA1B7C,EAgClB6rB,qBAhCkB,sBAgCG,sBAAAvuB,EAAA,6DACjB,EAAKiO,SAAS,CAACoI,SAAQ,IADN,SAEX,EAAKlO,MAAM4gB,OAFA,OAGjB,EAAK9a,SAAS,CAACoI,SAAQ,IACvB,EAAKpI,SAAS,CAAEugB,iBAAiB,EAAKrmB,MAAMjL,uBAAuBf,OAJlD,2CAhCH,EAuClBua,QAAQ,WACJ,EAAKhU,gBAAgB,KACrB,EAAKuL,SAAS,CACV0I,WAAU,KA1CA,EA6ClB8X,2BAA2B,WACvB,EAAKrmB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,IACnBjU,EAAgB4F,EACtB,EAAKF,KAAKyO,cACP,EAAKnU,kBACJA,EAAgBrB,IAAI,EAAKqB,gBAAgBrB,KAN5B,SAQX,EAAK8G,MAAMumB,MAAMhsB,GARN,OAUE,KADbgF,EAAO,EAAKS,MAAMjL,wBACdb,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKmyB,wBAELzuB,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,2CAAzB,oCAAAsM,KAAA,iBA9Cc,EAkElBwN,WAAW,SAACxT,GACR,EAAKA,gBAAgBA,EACrB,EAAKuL,SAAS,CAAC0I,WAAU,KApEX,EAuElB2X,sBAAsB,SAAC5rB,GACnB,KAAMwL,QAAQ,CACV3C,MAAM,4BAAQ7I,EAAgByH,KAAK,gBACnCiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMwmB,IAAIjsB,EAAgBrB,KADpC,OAGkB,KADbqG,EAAO,EAAKS,MAAMjL,wBACdb,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKmyB,wBALR,2CAAD,kDAAC,MAxET,EAAKvyB,MAAM,CACP2a,WAAU,EACVN,SAAQ,EACRmY,iBAAiB,IALP,E,kFAsFd9lB,KAAKoN,e,0CAGLpN,KAAK6lB,yB,+BAEA,IAAD,SACuC7lB,KAAK1M,MAAzCwyB,EADH,EACGA,iBAAiBnY,EADpB,EACoBA,QAAQM,EAD5B,EAC4BA,UAC1BjU,EAAgBgG,KAAKhG,iBAAiB,GACtC6I,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,gBAAzD,iBAET,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYyW,EACZzY,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gB5DxHN,M4D0HP,wBACE1M,MAAO7I,EAAgBrB,IAAM,uCAAW,uCACxC6Q,QAASyE,EACTvI,KAAM1F,KAAK+lB,2BACXtc,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO1F,gBAAiBA,U,GAvHnDsH,aA2IxBS,GAAqB,CAACse,QAAK2F,MhB7BZ,SAAAhsB,GAAe,8CAAI,WAAM+E,GAAN,eAAAzH,EAAA,sEACjB2C,GAAmBD,GADF,OAC9BgF,EAD8B,OAEpCD,GAP8BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC7CH,KvDC6B,sBuDA7BE,MACAC,YAEoC,iCALP,IAACD,EAAIC,IAKE,OAAJ,uDgB6BGsyB,IhBlBpB,SAAA9rB,GAAiB,8CAAI,WAAM4E,GAAN,eAAAzH,EAAA,sEACf4C,GAAiBC,GADF,OAC9B6E,EAD8B,OAEpCD,GAP4BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CAC3CH,KvDR6B,sBuDS7BE,MACAC,YAEoC,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDgBoBrBgP,gBARS,SAAArP,GACpB,MAAO,CACHkB,uBAAuBlB,EAAMkB,0BAQjCuN,GAFWY,CAGbgjB,I,2BC7II7d,GAAO,KAAOA,OACdpH,GAAK,IAAKA,KAEVwlB,G,YAEF,WAAYzmB,GAAO,IAAD,8BACd,4CAAMA,KAWV0mB,QAAQ,WACJ,EAAK1mB,MAAMC,KAAKyO,eAbF,EAelBiY,YAAY,WACR,EAAK3mB,MAAMC,KAAKC,gBAAe,SAACxH,EAAIyH,GAChC,EAAKH,MAAM4mB,cAAczmB,OAjBf,EAsBlBmiB,MAtBkB,uCAsBZ,WAAM5hB,GAAN,eAAA7I,EAAA,6DACF,EAAKiO,SAAS,CAACsc,aAAa,KAD1B,SAEiBjoB,GAAc,CAAC,eAAiBuG,IAFjD,OAGiB,KADbnB,EAFJ,QAGQrL,QACN,EAAK4R,SAAS,CAACsc,aAAa7iB,EAAOvL,OAJrC,2CAtBY,wDA8BlB6yB,WA9BkB,sBA8BP,8BAAAhvB,EAAA,sEACqBiC,IADrB,cAEqB,KADtBqoB,EADC,QAEYjuB,QACf,EAAK4R,SAAS,CAACqc,gBAAgBA,EAAgBnuB,OAH5C,SAKsBsG,KALtB,OAMsB,KADvB+rB,EALC,QAManyB,QAChB,EAAK4R,SAAS,CAACugB,iBAAiBA,EAAiBryB,OAP9C,2CA5BP,EAAKH,MAAM,CACPsuB,gBAAgB,GAChBC,aAAa,GACbiE,iBAAiB,IALP,E,kFA0Cd9lB,KAAKsmB,aACLtmB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEa,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBADH,EAEmDP,KAAK1M,MAArDsuB,EAFH,EAEGA,gBAAgBC,EAFnB,EAEmBA,aAAaiE,EAFhC,EAEgCA,iBAEpC,OACI,uBAAMtlB,UAAU,4BACZ,wBAAKkL,OAAQ,IACT,wBAAKC,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,iBAAiB,CACnCQ,aAAa,IADbR,CAGI,wBAAQ4I,SAAUnJ,KAAK+hB,OAEfH,EAAgBxY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,aAOhF,wBAAKkK,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,cAAc,CAChCQ,aAAa,IADbR,CAGI,4BAEQshB,EAAazY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,aAO7E,wBAAKkK,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,kBAAkB,CACpCQ,aAAa,IADbR,CAGI,4BAEQulB,EAAiB1c,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,aAOjF,wBAAKkK,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,QAAQ,CAC1BQ,aAAa,IADbR,CAGI,4BAEQwW,GAAgB3N,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAG/d,MAAOA,MAAO+d,EAAG/d,OAAQ+d,EAAGtX,cAOpF,wBAAK+E,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,OAAO,CACzBQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAO,MAEbrG,EAAkB,KAAK,CACvBQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAO,OAEbrG,EAAkB,MAAM,CACxBQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,SAAS,CAC3BQ,aAAa,IADbR,CAGI,4BAEQyW,GAAa5N,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAG/d,MAAOA,MAAO+d,EAAG/d,OAAQ+d,EAAGtX,cAOjF,wBAAK+E,KAAM,GACP,kBAAC,GAAD,CAAM1K,MAAO,CAAC4E,MAAM,UAChB,8BACI,uBAAQ5E,MAAO,CAACgI,aAAa,IAAKzV,KAAK,UAAUqQ,QAAS7D,KAAKomB,aAA/D,eAA8E,uBAAM5yB,KAAK,YACzF,uBAAQyN,MAAO,CAAEslB,WAAY,GAAK/yB,KAAK,SAASqQ,QAAS7D,KAAKmmB,SAAS,uBAAM3yB,KAAK,WAAlF,yB,GAvKPgd,iBAgLV,OAAKhP,QAAL,CAAc0kB,IC3KrBM,G,KAAAA,MAEFpP,G,YAEF,WAAY3X,GAAO,IAAD,8BACd,4CAAMA,KAiBV2N,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,KACNyK,UAAU,MACVtJ,MAAO,IACT,CACEnB,MAAM,uCACNyK,UAAU,cACVtJ,MAAO,IACPuJ,OAAO,SAAC1T,GACL,OAAOA,EAAYL,eAAeiI,KAAK,MAAM5H,EAAY4H,OAE9D,CACEoB,MAAM,eACNyK,UAAU,SACVtJ,MAAO,GACPuJ,OAAO,SAACkZ,GACL,OAAOA,EAAOA,EAAOhlB,KAAK,WAE/B,CACEoB,MAAM,2BACNyK,UAAU,OACVtJ,MAAO,KACT,CACEnB,MAAM,2BACNyK,UAAU,kBACVtJ,MAAO,IACPuJ,OAAO,SAACvT,GACJ,OAAOA,EAAgByH,OAE7B,CACEoB,MAAM,qBACNyK,UAAU,KACVtJ,MAAO,KACT,CACEnB,MAAM,eACNyK,UAAU,QACVtJ,MAAO,IACPuJ,OAAO,SAACmZ,GACJ,IAAIC,EAAa,GAMjB,OALA5P,GAAgBvO,SAAQ,SAAAhT,GACjBA,EAAK2K,QAAQghB,OAAOuF,KACnBC,EAAcnxB,EAAKoR,UAGpB+f,IAEb,CACE9jB,MAAM,KACNyK,UAAU,KACVtJ,MAAO,KACT,CACEnB,MAAM,MACNyK,UAAU,MACVtJ,MAAO,KACT,CACEnB,MAAM,eACNmB,MAAO,GACPsJ,UAAU,SACVC,OAAO,SAAC5Z,GACJ,OAAY,IAATA,EAEK,8BACI,wBAAKuN,M5C3GX,W4C2GM,iBAGM,IAATvN,EAED,8BACI,wBAAKuN,M5C9GT,W4C8GI,iBAGM,IAATvN,EAED,8BACI,wBAAKuN,M5CzHV,W4CyHK,iBAKJ,iCAId,CACE2B,MAAM,2BACNyK,UAAU,cACVtJ,MAAO,IACPuJ,OAAO,SAACqZ,GAAD,OAAeviB,GAAYuiB,KACpC,CACE/jB,MAAM,eACNwV,MAAO,QACPrU,MAAO,IACPuJ,OAAO,SAAClT,GAAD,OACP,8BACI,kBAACuc,GAAD,CAAY/S,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,qBAAqB,CAACjI,kBAD3E,eAEI,kBAACuR,GAAD,CAAS/H,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,0BAA0B,CAACjI,kBAF7E,eAGI,kBAACwR,GAAD,CAAWhI,QAAS,kBAAI,EAAKgjB,iBAAiBxsB,WApHxC,EA2HlBysB,gBA3HkB,uCA2HD,WAAMtO,GAAN,uCAAAlhB,EAAA,6DACb,EAAKkhB,QAAQA,GACA,EACb,EAAKjT,SAAS,CAACoI,SAAQ,IAHV,EAcX,EAAKra,MATHkG,EALS,EAKTA,eACAK,EANS,EAMTA,YACAG,EAPS,EAOTA,gBACA0sB,EARS,EAQTA,MACAjlB,EATS,EASTA,KACAmf,EAVS,EAUTA,GACAmG,EAXS,EAWTA,IACApzB,EAZS,EAYTA,OACAqzB,EAbS,EAaTA,QAbS,SAeP,EAAKvnB,MAAM6gB,KAAK,CAClB7H,QAdS,EAeTD,UACAI,S9DxKW,G8DyKXpf,iBACAK,cACAG,kBACA0sB,QACAjlB,OACAmf,KACAmG,MACApzB,SACAqzB,YA3BS,OA6Bb,EAAKzhB,SAAS,CAACoI,SAAQ,IA7BV,EA8BM,EAAKlO,MAAMhL,kBAAkBhB,KAAzColB,EA9BM,EA8BNA,MAAMtM,EA9BA,EA8BAA,KACb,EAAKhH,SAAS,CAACib,YAAYjU,EAAKsM,UA/BnB,2CA3HC,wDA6JlB7K,QAAQ,WACJ,EAAK3T,WAAW,KAChB,EAAKkL,SAAS,CAAC0C,QAAO,KA/JR,EAkKlBuF,WAAW,SAACnT,GACR,EAAKA,WAAWA,EAChB,EAAKkL,SAAS,CAAC0C,QAAO,KApKR,EAuKlBgf,UAAU,WACN,EAAKvnB,KAAKyO,eAxKI,EA2KlB0Y,iBAAiB,SAACxsB,GACd,KAAMmL,QAAQ,CACV3C,MAAM,2BAAOxI,EAAWoH,KAAK,eAC7BiE,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACK,EAAKmI,MAAMynB,IAAI7sB,EAAW1B,KAD/B,OAGkB,KADbqG,EAAO,EAAKS,MAAMhL,mBACdd,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKozB,gBAAgB,EAAKtO,UAL7B,2CAAD,kDAAC,MA9KK,EAwLlB6N,cAAc,SAACc,GACX,EAAK5hB,SAAS,CACV/L,eAAe2tB,EAAW3tB,eAC1BK,YAAYstB,EAAWttB,YACvBG,gBAAgBmtB,EAAWntB,gBAC3B0sB,MAAMS,EAAWT,MACjBjlB,KAAK0lB,EAAW1lB,KAChBmf,GAAGuG,EAAWvG,GACdmG,IAAII,EAAWJ,IACfpzB,OAAOwzB,EAAWxzB,SACpB,WACE,EAAKmzB,gBAAgB,EAAKtO,aAjM9B,EAAKllB,MAAM,CACPktB,YAAY,GACZ3H,MAAM,EACNlL,SAAQ,EACR1F,QAAO,EACPzO,eAAe,GACfK,YAAY,GACZG,gBAAgB,GAChB0sB,MAAM,GACNjlB,KAAK,GACLmf,GAAG,GACHmG,IAAI,GACJpzB,OAAO,IAdG,E,kFAwMdqM,KAAKoN,e,0CAILpN,KAAK8mB,gBAAgB,K,+BAGhB,IAAD,SAC8B9mB,KAAK1M,MAAhCktB,EADH,EACGA,YAAY3H,EADf,EACeA,MAAMlL,EADrB,EACqBA,QACnB9K,EAAM,uBAAQrP,KAAK,UAAUqQ,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,6BAA4B,uBAAM9O,KAAK,mBAAnG,gBACZ,OACI,wBAAMqP,MAAOA,GACT,4BACA,kBAAC2jB,GAAD,CAAOY,OAAO,gBACd,kBAAC,GAAD,CAAYrb,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO2mB,cAAermB,KAAKqmB,kBAGnE,wBACAlX,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYmR,EACZnT,QAASrN,KAAKqN,QACd8F,OAAQ,CAAEiG,EAAG,KACb9J,WAAY,CACRC,gB9D5PG,G8D6PHoH,iBAAgB,EAChBkC,QACA1P,SAASnJ,KAAK8mB,wB,GAtOfxlB,aA2PbS,GAAqB,CAACue,QAAKC,SAAM2G,IlB7GpB,SAAA1sB,GAAY,8CAAI,WAAMuE,GAAN,eAAAzH,EAAA,sEACViD,GAAYC,GADF,OACzBwE,EADyB,OAE/BD,GAPuBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACtCH,KvDpCwB,iBuDqCxBE,MACAC,YAE+B,iCALT,IAACD,EAAIC,IAKI,OAAJ,wDkB+GhBgP,gBARS,SAAArP,GACpB,MAAO,CACHmB,kBAAkBnB,EAAMmB,qBAQ5BsN,GAFWY,CAGbyU,IC9QF1C,KAAOC,OAAO,SAEd,IAAMjU,GAAK,IAAKA,KACVoH,GAAO,KAAOA,OACboV,G,IAAAA,SACDC,GAASpY,GAAUP,KAAKW,OAExBiY,G,2MAEF9pB,MAAM,CACFsuB,gBAAgB,GAChBC,aAAa,GACbwF,QAAQ,GACRvB,iBAAiB,I,EAGrB/D,M,uCAAM,WAAM5hB,GAAN,eAAA7I,EAAA,6DACF,EAAKiO,SAAS,CAACsc,aAAa,KAD1B,SAEI,EAAKpiB,MAAM2gB,KAAK,CAAC,eAAiBjgB,IAFtC,OAGInB,EAAO,EAAKS,MAAMlL,mBACxB,EAAKgR,SAAS,CAACsc,aAAa7iB,EAAOvL,OAJjC,2C,wDAON6yB,W,sBAAW,gCAAAhvB,EAAA,sEACD,EAAKmI,MAAM0gB,OADV,cAEDyB,EAAgB,EAAKniB,MAAMnL,sBACjC,EAAKiR,SAAS,CAACqc,gBAAgBA,EAAgBnuB,OAHxC,SAKD,EAAKgM,MAAM4gB,OALV,cAMDyF,EAAiB,EAAKrmB,MAAMjL,uBAClC,EAAK+Q,SAAS,CAACugB,iBAAiBA,EAAiBryB,OAP1C,UASD,EAAKgM,MAAM6gB,KAAK,CAAC,QAAS,IATzB,QAUDE,EAAY,EAAK/gB,MAAMhL,kBAC7B,EAAK8Q,SAAS,CAAC8hB,QAAQ7G,EAAY/sB,KAAK8Y,OAXjC,4C,EAeXiR,OAAO,WACH,EAAK/d,MAAMC,KAAKC,eAAhB,uCAA+B,WAAO1I,EAAM2I,GAAb,iBAAAtI,EAAA,yDACvBL,EADuB,uBAEjBoD,EAAWuF,EACd,EAAKvF,WAAWA,aACfA,EAAW1B,IAAI,EAAK0B,WAAWA,WAAW1B,KAJvB,SAMjB,EAAK8G,MAAM8gB,MAAMlmB,GANA,OAQJ,KADb2E,EAAO,EAAKS,MAAMhL,mBACdd,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK+L,MAAMK,QAAQge,UAEnB1mB,EAAA,EAAQH,MAAM+H,EAAOtL,KAZF,2CAA/B,oCAAAsM,KAAA,iB,mFAmBAA,KAAKsmB,e,2CAIL,IAAMjsB,EAAW2F,KAAKP,MAAMgE,SAASnQ,MACrC0M,KAAK6d,WAAWxjB,EAEhB2F,KAAK3F,WAAWA,GAAa,K,+BAExB,IAAD,OACGwjB,EAAqB7d,KAArB6d,SAASxjB,EAAY2F,KAAZ3F,WADZ,EAE2D2F,KAAK1M,MAA7DsuB,EAFH,EAEGA,gBAAgBC,EAFnB,EAEmBA,aAAaiE,EAFhC,EAEgCA,iBAAiBuB,EAFjD,EAEiDA,QAC9C9mB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAMDsC,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,8BAAOD,EAAW,2BAAO,6BAGjC,OACI,wBAAMhb,MAAOA,GACT,sBAba,CACjBmJ,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,IAYT,kBAAC,GAAD,CAAM/E,MAAM,4BACXrG,EAAkB,SAAS,CACxBQ,aAAa8c,EAAWxjB,EAAWA,WAAWosB,OAAQ,IADzDlmB,CAGG,4BAEQ8mB,EAAQje,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,KAAxC,IAA+Cyc,EAAGgE,UAK9E,kBAAC,GAAD,CAAMtb,MAAM,4BACXrG,EAAkB,iBAAiB,CAChCQ,aAAa8c,EAAWxjB,EAAWA,WAAWR,YAAYL,eAAeb,IAAK,EAC9EgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,wBAAQ4I,SAAUnJ,KAAK+hB,OAEfH,EAAgBxY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,YAK5E,kBAAC,GAAD,CAAMmF,MAAM,4BACXrG,EAAkB,cAAc,CAC7BQ,aAAa8c,EAAWxjB,EAAWA,WAAWR,YAAYlB,IAAK,GADlE4H,CAGG,4BAEQshB,EAAazY,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,YAKzE,kBAAC,GAAD,CAAMmF,MAAM,sBACXrG,EAAkB,KAAK,CACpBQ,aAAa8c,EAAWxjB,EAAWA,WAAW6nB,GAAK,IADtD3hB,CAGG,uBAAOY,YAAY,yBAGvB,kBAAC,GAAD,CAAMyF,MAAM,4BACXrG,EAAkB,OAAO,CACtBQ,aAAa8c,EAAWxjB,EAAWA,WAAWoH,KAAO,IADxDlB,CAGG,uBAAOY,YAAY,+BAGvB,kBAAC,GAAD,CAAMyF,MAAM,4BACXrG,EAAkB,QAAQ,CACvBQ,aAAa8c,EAAWxjB,EAAWA,WAAWqsB,MAAQ,KADzDnmB,CAGG,4BAEIwW,GAAgB3N,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAK2K,MAAOA,MAAO3K,EAAK2K,OAAQ3K,EAAKoR,aAKpF,kBAAC,GAAD,CAAMA,MAAM,4BACXrG,EAAkB,kBAAkB,CACjCQ,aAAa8c,EAAWxjB,EAAWA,WAAWL,gBAAgBrB,IAAM,EACpEgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEQulB,EAAiB1c,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,YAK7E,kBAAC,GAAD,CAAMmF,MAAM,kBACXrG,EAAkB,KAAK,CACpBQ,aAAa8c,EAAWxjB,EAAWA,WAAWumB,GAAK,IADtDrgB,CAGG,uBAAOY,YAAY,wCAGvB,kBAAC,GAAD,CAAMyF,MAAM,mBACXrG,EAAkB,MAAM,CACrBQ,aAAa8c,EAAWxjB,EAAWA,WAAW0sB,IAAM,IADvDxmB,CAGG,uBAAOY,YAAY,yCAGvB,kBAAC,GAAD,CAAMyF,MAAM,4BACXrG,EAAkB,cAAc,CAC7BQ,aAAa8c,EAAWnJ,KAAOra,EAAWA,WAAWusB,YAAY,cAAgBlS,KAAOyI,GAAS,cACjGxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,+BAGJ,kBAAC,GAAD,CAAMqG,MAAM,4BACXrG,EAAkB,SAAS,CACxBQ,aAAa8c,EAAWxjB,EAAWA,WAAW1G,OAAS,IACvDgN,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,4BAEIyW,GAAa5N,KAAI,SAAA5T,GAAI,OAAE,kBAAC,GAAD,CAAQsN,IAAKtN,EAAK2K,MAAOA,MAAO3K,EAAK2K,OAAQ3K,EAAKoR,aAKjF,kBAAC,GAAD,CAAMA,MAAM,gBACXrG,EAAkB,UAAU,CACzBQ,aAAa8c,EAAWxjB,EAAWA,WAAW2sB,QAAU,IAD3DzmB,CAGG,kBAAC,GAAD,CAAUY,YAAY,GAAGqd,SAAU,CAACC,QAAQ,OAGhD,kBAAC,GAAD,KACI,uBAAQjrB,KAAK,UAAUqQ,QAAS7D,KAAKwd,QAAQ,uBAAMhqB,KAAK,SAAxD,gBADJ,WAEI,uBAAQA,KAAK,SAASqQ,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,WAAU,uBAAMtqB,KAAK,UAA3E,uB,GAhNE8N,aAoOpBS,GAAqB,CAACoe,QAAKC,QAAKC,QAAKC,QAAKC,UAEjC5d,gBAdS,SAAArP,GACpB,MAAO,CACHgB,sBAAsBhB,EAAMgB,sBAC5BjB,kBAAkBC,EAAMD,kBACxBS,YAAYR,EAAMQ,YAClBI,uBAAuBZ,EAAMY,uBAC7BM,uBAAuBlB,EAAMkB,uBAC7BC,kBAAkBnB,EAAMmB,kBACxBF,mBAAmBjB,EAAMiB,sBAQ7BwN,GAFWY,CAGb,IAAKnB,QAAL,CAAc4b,KCpPV1c,GAAK,KAAaA,KAEH4mB,G,2MACjBX,aAAa,SAAAxwB,GACT,IAAIub,EAAQ,GAMZ,OALAqF,GAAgBvO,SAAQ,SAAAhT,GACjBA,EAAK2K,QAAQghB,OAAOhrB,KACnBub,EAASlc,EAAKoR,UAGf8K,G,EAGX6V,cAAc,SAAApxB,GACV,IAAIub,EAAQ,GAMZ,OALAsF,GAAaxO,SAAQ,SAAAhT,GACdA,EAAK2K,QAAQghB,OAAOhrB,KACnBub,EAASlc,EAAKoR,UAGf8K,G,wEAGF,IAAD,SAaF1R,KAAKP,MAAMgE,SAASnQ,MAAM+G,WAXxBR,EAFA,EAEAA,YACA4sB,EAHA,EAGAA,OACAzsB,EAJA,EAIAA,gBACA0sB,EALA,EAKAA,MACAxE,EANA,EAMAA,GACAzgB,EAPA,EAOAA,KACAmf,EARA,EAQAA,GACAmG,EATA,EASAA,IACApzB,EAVA,EAUAA,OACAqzB,EAXA,EAWAA,QACAJ,EAZA,EAYAA,YAGE/jB,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,2DAGR,OACI,wBAAMjb,MAAOA,GACX,wBAAcsM,UAAQ,GACpB,kBAAC,GAAD,CAAMvI,MAAM,qBAAM+E,KAAM,GAAI9R,EAAYL,eAAeiI,MACvD,kBAAC,GAAD,CAAMmF,MAAM,qBAAM+E,KAAM,GAAI9R,EAAY4H,MACxC,kBAAC,GAAD,CAAMmF,MAAM,iCAAQ+E,KAAM,GAAI8a,EAAOA,EAAOhlB,KAAK,UACjD,kBAAC,GAAD,CAAMmF,MAAM,2BAAO+E,KAAM,GAAIuW,GAC7B,kBAAC,GAAD,CAAMtb,MAAM,iCAAQ+E,KAAM,GAAIlK,GAC9B,kBAAC,GAAD,CAAMmF,MAAM,iCAAQ+E,KAAM,GAAI3L,KAAK2mB,aAAaD,IAChD,kBAAC,GAAD,CAAM9f,MAAM,iCAAQ+E,KAAM,GAAI3R,EAAgByH,MAC9C,kBAAC,GAAD,CAAMmF,MAAM,uBAAQ+E,KAAM,GAAIiV,GAC9B,kBAAC,GAAD,CAAMha,MAAM,wBAAS+E,KAAM,GAAIob,GAC/B,kBAAC,GAAD,CAAMngB,MAAM,iCAAQ+E,KAAM,GAAI3L,KAAKunB,cAAc5zB,IACjD,kBAAC,GAAD,CAAMiT,MAAM,iCAAQ+E,KAAM,GAAI5G,GAAU6hB,IACxC,kBAAC,GAAD,CAAMhgB,MAAM,qBAAM+E,KAAM,GAAIqb,S,GAxDE1lB,aCAzBkmB,G,iLAGb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnqB,KAAK,cAAc2iB,UAAW5I,GAAM6I,OAAK,IAChD,kBAAC,IAAD,CAAO5iB,KAAK,0BAA0B2iB,UAAW5C,KACjD,kBAAC,IAAD,CAAO/f,KAAK,qBAAqB2iB,UAAWE,KAC5C,kBAAC,IAAD,CAAU5f,GAAG,qB,GARWgB,aCHnBmmB,G,2MAQjBjhB,UAAU,SAACkhB,EAAUj0B,EAAKqT,GACtB,MAAM,CACFL,QAAS,CACL2E,SAAU,CAAC,MAAO,QAEtBtE,OAAQ,CACJoE,OAAQ,WAERlE,KAAM,EACNvT,KAAMqT,GAEV6gB,MAAO,CACFC,MAAO,SACRnmB,KAAM,CACFomB,UAAW,CACP3mB,MAAO,OACP2F,gBAAiB,OACjBihB,aAAc,EACdrc,QAAS,CAAC,EAAG,KAGrBic,UAAWA,GAEfhgB,OAAQ,CAAC,CACLjG,KAAM,GACNjO,KAAM,QAENC,KAAMA,M,wEAKT,IAAD,EACqCuM,KAAKP,MAAxCioB,EADF,EACEA,UAAUj0B,EADZ,EACYA,KAAKqT,EADjB,EACiBA,OAAOjE,EADxB,EACwBA,MAAMiI,EAD9B,EAC8BA,MAClC,OACI,wBAAMjI,MAAOA,EAAOiI,MAAOA,GACvB,kBAAC,KAAD,CAAclD,OAAQ5H,KAAKwG,UAAUkhB,EAAUj0B,EAAKqT,U,GA5C7BxF,aC6FjCymB,GAAsB,SAAAt0B,GAAI,MAAI,CAChCD,K9E3CwB,iB8E4CxBC,SAmBEu0B,GAAoB,SAAAv0B,GAAI,MAAI,CAC9BD,K9E9DsB,e8E+DtBC,SAYEw0B,GAAsB,SAAAx0B,GAAI,MAAI,CAChCD,K9E1EwB,iB8E2ExBC,SChIEqU,GAAO,KAAOA,OACZogB,G,KAAAA,YAEFC,G,YAEF,WAAY1oB,GAAO,IAAD,8BACd,4CAAMA,KA6BV2oB,WA9BkB,uCA8BP,WAAMC,EAAUC,GAAhB,eAAAhxB,EAAA,sEACD,EAAKmI,MAAM8oB,YAAYF,EAAUC,GADhC,OAEDE,EAAO,EAAK/oB,MAAMgpB,aACxB,EAAKljB,SAAS,CACVmjB,MAAM,CAAC,CAACvoB,MAAOqoB,EAAO/mB,KAAM,mBAJzB,2CA9BO,0DAqClBknB,WArCkB,uCAqCP,WAAM5vB,EAAWsvB,EAAUC,GAA3B,eAAAhxB,EAAA,sEACD,EAAKmI,MAAMmpB,cAAc7vB,EAAWsvB,EAAUC,GAD7C,OAEDzxB,EAAI,EAAK4I,MAAMgpB,aACrB,EAAKljB,SAAS,CACVsjB,MAAMhyB,EAAIpD,KAAKA,KACfq1B,QAAQjyB,EAAIpD,KAAKqT,SALd,2CArCO,4DA6ClBa,SA7CkB,sBA6CT,4BAAArQ,EAAA,sEACC,EAAKmI,MAAMspB,QADZ,OAEClyB,EAAI,EAAK4I,MAAMgpB,aACrB,EAAKljB,SAAS,CACV4K,YAAYtZ,EAAIpD,OAJf,2CA7CS,EAqDlBu1B,WAAW,SAACzkB,EAAM0kB,GACd,IAAMZ,EAAUY,EAAW,GACrBX,EAAQW,EAAW,GACzB,EAAKb,WAAWC,EAAUC,IAxDZ,EA2DlBY,WAAW,SAAC3kB,EAAM0kB,GACd,IAAMlwB,EAAW,EAAKzF,MAAMsqB,OACtByK,EAAUY,EAAW,GACrBX,EAAQW,EAAW,GACzB,EAAKN,WAAW5vB,EAAWsvB,EAAUC,IA/DvB,EAiElBa,iBAAiB,SAAChpB,GACd,EAAKoF,SAAS,CAACqY,OAAOzd,EAAMuR,QAAQ,MAhEpC,EAAKpe,MAAM,CACPo0B,UAAU,CACE,CAAEjmB,KAAM,4BACR,CAAEA,KAAM,oDACR,CAAEA,KAAM,sBAAOX,IAAI,KACnB,CAAEW,KAAM,sBAAOX,IAAI,KACnB,CAAEW,KAAM,sBAAOX,IAAI,KACnB,CAAEW,KAAM,sBAAOX,IAAI,KACnB,CAAEW,KAAM,gBAAMX,IAAI,KAClB,CAAEW,KAAM,wCAAUX,IAAI,KACtB,CAAEW,KAAM,oDAAYX,IAAI,KACxB,CAAEW,KAAM,sBAAOX,IAAI,KACnB,CAAEW,KAAM,4BAAQX,IAAI,KACpB,CAAEW,KAAM,4BAAQX,IAAI,KACpB,CAAEW,KAAM,4BAAQX,IAAI,KACpB,CAAEW,KAAM,wCAAUX,IAAI,KACtB,CAAEW,KAAM,6BAEpBinB,MAAM,GACNG,MAAM,GACNO,QAAQ,GACRN,QAAQ,GACR3Y,YAAY,GACZyN,OAAO,IACPlM,QAAQ,QA1BE,E,kFAqEd1R,KAAK2H,a,+BAEA,IAAD,EAC6D3H,KAAK1M,MAAhEo0B,EADF,EACEA,UAAUgB,EADZ,EACYA,MAAMG,EADlB,EACkBA,MAAMO,EADxB,EACwBA,QAAQN,EADhC,EACgCA,QAAQ3Y,EADxC,EACwCA,YAAYuB,EADpD,EACoDA,QAClDqM,EAAoB5N,EAAY/G,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAEvc,SAEjE4nB,EAAO,kBAACnB,GAAD,CAAa/e,SAAUnJ,KAAKgpB,aAEnCM,EAAO,6BACD,kBAACpB,GAAD,CAAa/e,SAAUnJ,KAAKkpB,WAAYjoB,MAAO,CAACyQ,QAAQA,KACxD,wBAAQvI,SAAUnJ,KAAKmpB,iBAAkBloB,MAAO,CAAC4E,MAAM,QAAQ7B,MAAM,UACnE+Z,IAGd,OACI,yBAAK9c,MAAO,CAAEuK,WAAY,UAAWC,QAAS,SAC1C,wBAAKC,OAAQ,IACT,wBAAK6d,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,GAAD,CAAWjC,UAAWA,EAAWj0B,KAAMi1B,EAAO5hB,OAAQsiB,EAASvmB,MAblE,eAaiFiI,MAAOue,KAEzF,wBAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,GAAD,CAAWjC,UAAWA,EAAWj0B,KAAMo1B,EAAO/hB,OAAQgiB,EAASjmB,MAdlE,eAciFiI,MAAOwe,W,GA5F1FhoB,aA+GbS,GAAsB,CAACwmB,YD7BF,SAACF,EAAUC,GAAX,8CAAuB,WAAMvpB,GAAN,eAAAzH,EAAA,sElEwCH3B,EAAc,8BAA8B,CAAC+G,UkEvCxD2rB,ElEuC4E1rB,QkEvClE2rB,IADI,OACxCtpB,EADwC,OAE9CD,EAN8B,CAC9BvL,K9EnCsB,e8EoCtBC,KAI2BuL,EAAO,KAFY,2CAAvB,uDC6Bc4pB,cDnBZ,SAAC7vB,EAAWsvB,EAAUC,GAAtB,8CAAkC,WAAMvpB,GAAN,qBAAAzH,EAAA,sEACxCmF,GAAe1D,EAAWsvB,EAAUC,GADI,OAI3D,IAAStK,KAHHhf,EADqD,OAErDvL,EAAK,GACLqT,EAAO,GACC9H,EACVvL,EAAK6O,KAAK,CACNnC,MAAM,CAACnB,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GACrEhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,IAC9Dhf,EAAOgf,GAAG,IAAIhf,EAAOgf,GAAG,IAAIhf,EAAOgf,GAAG,IAAIhf,EAAOgf,GAAG,IAAIhf,EAAOgf,GAAG,KAClEvc,KAAKzC,EAAOgf,GAAG,KAEnBlX,EAAOxE,KAAKtD,EAAOgf,GAAG,IAE1Bjf,EAASgpB,GAAoB,CAACt0B,OAAKqT,YAbwB,2CAAlC,uDCmB0BiiB,MDvFlC,yDAAM,WAAMhqB,GAAN,mBAAAzH,EAAA,sElEwFF3B,EAAc,0BkExFZ,OAGvB,IAASqoB,KAFHnnB,EADiB,OAEjBsZ,EAAY,GACJtZ,EACVsZ,EAAY7N,KAAK,CAAC,IAAMzL,EAAImnB,GAAG,GAAG,KAAOnnB,EAAImnB,GAAG,KAEpDjf,EAVwB,CACxBvL,K9EakB,U8EZlBC,KAQqB0c,IANE,2CAAN,wDCyFNxN,gBANS,SAAArP,GACpB,MAAO,CAACU,cAAcV,EAAMU,iBAO5B+N,GAFWY,CAGbwlB,ICzHmByB,G,2MAQjBpjB,UAAU,SAAC/S,GACP,MAAM,CACFqT,OAAQ,GACRL,QAAS,CACL2E,SAAU,CAAC,MAAO,QAEtBye,QAAS,CACLC,OAAQr2B,GAEZ2T,MAAO,CAAC5T,KAAM,YACd8T,MAAO,GAGPI,OAAQ,CACJ,CAAClU,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,U,wEAKV,IAAD,EACoBwM,KAAKP,MAAvBhM,EADF,EACEA,KAAKoP,EADP,EACOA,MAAMiI,EADb,EACaA,MACjB,OACI,wBAAMjI,MAAOA,EAAOiI,MAAOA,GACvB,kBAAC,KAAD,CAAclD,OAAQ5H,KAAKwG,UAAU/S,U,GArCd6N,aCEjCwG,GAAO,KAAOA,OACZogB,G,KAAAA,YAEF6B,G,YAEF,WAAYtqB,GAAO,IAAD,8BACd,4CAAMA,KAUV2oB,WAXkB,uCAWP,WAAMC,EAAUC,GAAhB,eAAAhxB,EAAA,sEACD,EAAKmI,MAAMuqB,YAAY3B,EAAUC,GADhC,OAEDzxB,EAAI,EAAK4I,MAAMzL,cACrB,EAAKuR,SAAS,CACVmjB,MAAM7xB,EAAIpD,OAJP,2CAXO,0DAkBlBk1B,WAlBkB,uCAkBP,WAAM5vB,EAAWsvB,EAAUC,GAA3B,eAAAhxB,EAAA,sEACD,EAAKmI,MAAMwqB,cAAclxB,EAAWsvB,EAAUC,GAD7C,OAEDzxB,EAAI,EAAK4I,MAAMzL,cACrB,EAAKuR,SAAS,CACVsjB,MAAMhyB,EAAIpD,OAJP,2CAlBO,4DAyBlBkU,SAzBkB,sBAyBT,4BAAArQ,EAAA,sEACC,EAAKmI,MAAMyqB,QADZ,OAECrzB,EAAI,EAAK4I,MAAMzL,cACrB,EAAKuR,SAAS,CACV4K,YAAYtZ,EAAIpD,OAJf,2CAzBS,EAiClBu1B,WAAW,SAACzkB,EAAM0kB,GACd,IAAMZ,EAAUY,EAAW,GACrBX,EAAQW,EAAW,GACzB,EAAKb,WAAWC,EAAUC,IApCZ,EAuClBY,WAAW,SAAC3kB,EAAM0kB,GACd,IAAMlwB,EAAW,EAAKzF,MAAMsqB,OACtByK,EAAUY,EAAW,GACrBX,EAAQW,EAAW,GACzB,EAAKN,WAAW5vB,EAAWsvB,EAAUC,IA3CvB,EA6ClBa,iBAAiB,SAAChpB,GACd,EAAKoF,SAAS,CAACqY,OAAOzd,EAAMuR,QAAQ,MA5CpC,EAAKpe,MAAM,CACPo1B,MAAM,GACNG,MAAM,GACN1Y,YAAY,GACZyN,OAAO,IACPlM,QAAQ,QAPE,E,kFAiDd1R,KAAK2H,a,+BAEA,IAAD,EACmC3H,KAAK1M,MAAtCo1B,EADF,EACEA,MAAMG,EADR,EACQA,MAAM1Y,EADd,EACcA,YAAYuB,EAD1B,EAC0BA,QACxBqM,EAAoB5N,EAAY/G,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAEvc,SAEjE4nB,EAAO,kBAAC,GAAD,CAAalgB,SAAUnJ,KAAKgpB,aAEnCM,EAAO,6BACD,kBAAC,GAAD,CAAangB,SAAUnJ,KAAKkpB,WAAYjoB,MAAO,CAACyQ,QAAQA,KACxD,wBAAQvI,SAAUnJ,KAAKmpB,iBAAkBloB,MAAO,CAAC4E,MAAM,QAAQ7B,MAAM,UACnE+Z,IAGd,OACI,yBAAK9c,MAAO,CAAEuK,WAAY,UAAWC,QAAS,SAC1C,wBAAKC,OAAQ,IACT,wBAAKC,KAAM,IACP,kBAAC,GAAD,CAAWlY,KAAMi1B,EAAO7lB,MAb3B,eAa0CiI,MAAOue,KAElD,wBAAK1d,KAAM,IACP,kBAAC,GAAD,CAAWlY,KAAMo1B,EAAOhmB,MAd3B,eAc0CiI,MAAOwe,W,GAxEnDhoB,aA2FbS,GAAsB,CAACioB,YHsBF,SAAC3B,EAAUC,GAAX,8CAAuB,WAAMvpB,GAAN,mBAAAzH,EAAA,sElEaH3B,EAAc,8BAA8B,CAAC+G,UkEZxD2rB,ElEY4E1rB,QkEZlE2rB,IADI,OAG9C,IAAStK,KAFHhf,EADwC,OAExCvL,EAAK,CAAC,CAAC,eAAM,2BAAQ,sBAAQ,4BAAS,4BAAS,4BAAS,wCAAW,qCAC3DuL,EACNvL,EAAK6O,KAAK,CAAC,2BAAOtD,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,KAElHjf,EAASipB,GAAkBv0B,IANmB,2CAAvB,uDGtBcw2B,cHoCZ,SAAClxB,EAAWsvB,EAAUC,GAAtB,8CAAkC,WAAMvpB,GAAN,mBAAAzH,EAAA,sEACxCsF,GAAe7D,EAAWsvB,EAAUC,GADI,OAG3D,IAAStK,KAFHhf,EADqD,OAErDvL,EAAK,CAAC,CAAC,eAAM,2BAAQ,sBAAQ,4BAAS,4BAAS,4BAAS,wCAAW,qCAC3DuL,EACNvL,EAAK6O,KAAK,CAACtD,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,GAAGhf,EAAOgf,GAAG,KAExHjf,EAASkpB,GAAoBx0B,IAN8B,2CAAlC,uDGpC0By2B,MHrDlC,yDAAM,WAAMnrB,GAAN,mBAAAzH,EAAA,sElE4EF3B,EAAc,0BkE5EZ,OAGvB,IAASqoB,KAFHhf,EADiB,OAEjBmR,EAAY,GACJnR,EACVmR,EAAY7N,KAAK,CAAC,IAAMtD,EAAOgf,GAAG,GAAG,KAAOhf,EAAOgf,GAAG,KAE1Djf,EAVwB,CACxBvL,K9ECkB,U8EAlBC,KAQqB0c,IANE,2CAAN,wDGuDNxN,gBANS,SAAArP,GACpB,MAAO,CAACU,cAAcV,EAAMU,iBAO5B+N,GAFWY,CAGbonB,I,mBCrGmBI,G,2MACjB72B,MAAM,CACF82B,YAAY,GACZC,aAAa,GACbpiB,QAAO,G,EAEXmF,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,2BACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,QAEd,CACIzK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,qBACNyK,UAAU,a,EAIlBgd,U,uCAAU,WAAM7kB,GAAN,qBAAAnO,EAAA,yDACA0F,EAAOyI,EAAQ8L,OAAOgZ,UAC5B,EAAKhlB,SAAS,CAAC0C,QAAO,IAChBoiB,EAAa,GACfxzB,EAAI,GACiB,aAAtB,EAAK4I,MAAM+qB,SALR,iCAMQztB,GAAcC,GANtB,OAMFnG,EANE,gDAQQoG,GAAaD,GARrB,QAQFnG,EARE,eAUN,IAASmnB,KAAKnnB,EACVwzB,EAAa/nB,KAAK,CACd,KAAOzL,EAAImnB,GAAG,GACd,KAAOnnB,EAAImnB,GAAG,GACd,KAAOnnB,EAAImnB,GAAG,GACd,QAAUnnB,EAAImnB,GAAG,KAGzB,EAAK1qB,MAAM,CAAC+2B,iBAlBN,4C,8HAoBD,IAAD,SACcrqB,KAAKP,MAAjBhM,EADF,EACEA,KAAKoP,EADP,EACOA,MADP,EAEsB7C,KAAK1M,MAAzB82B,EAFF,EAEEA,YAAYniB,EAFd,EAEcA,OAClB,OACI,wBAAMpF,MAAOA,GAELpP,EAAK2V,KAAI,SAAA4U,GAAC,OACN,yBAAKlb,IAAKkb,EAAEvc,MACR,0BAAMoC,QAAS,EAAKymB,UAAWrpB,MAAO,CAAC+C,MAAM,UAAWga,EAAEvc,MAC1D,wBACAR,MAAO,CAAC+C,MAAM,MAAM6B,MAAM,SAC1B4kB,QAASzM,EAAE7d,MACXuqB,YAAa1M,EAAE7d,MAAM,GrD9D3B,UqD8DwC6d,EAAE7d,MAAM,GrDvD5C,UATH,gBqDqEP,wBACI0C,MAAOunB,EACP5gB,QAASvB,EACTwB,SAAU,WACN,EAAKlE,SAAS,CAAC0C,QAAO,MAG1B,wBACIkH,UAAQ,EACRC,OAAO,MACPC,WAAY5b,EACZ4Z,QAASrN,KAAKqN,gB,GA1EO/L,aCCxBqpB,G,2MACjBr3B,MAAM,CACFs3B,QAAQ,GACRC,SAAS,I,EAEbC,Y,sBAAY,gCAAAxzB,EAAA,sEACWuF,KADX,OAER,GADMkuB,EADE,OAEE,CAEN,IAAS/M,KADH4M,EAAQ,GACAG,EACVH,EAAQtoB,KAAK,CAAC,KAAOyoB,EAAO/M,GAAG,GAAG,MAAQ+M,EAAO/M,GAAG,KAExD,EAAKzY,SAAS,CACVqlB,YARA,2C,EAaZI,a,sBAAa,gCAAA1zB,EAAA,sEACWwF,KADX,OAEL,GADEmuB,EADG,OAEM,CAEX,IAASjN,KADH6M,EAAS,GACDI,EACVJ,EAASvoB,KAAK,CAAC,KAAO2oB,EAAQjN,GAAG,GAAG,MAAQiN,EAAQjN,GAAG,KAE3D,EAAKzY,SAAS,CACVslB,aARC,2C,oFAcT7qB,KAAK8qB,cACL9qB,KAAKgrB,iB,+BAEA,IAAD,EACoBhrB,KAAK1M,MAAvBs3B,EADF,EACEA,QAAQC,EADV,EACUA,SAKd,OACI,yBAAK5pB,MAAO,CAAEuK,WAAY,UAAWC,QAAS,SAC1C,wBAAKC,OAAQ,IACT,wBAAK6d,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,GAAD,CAAiBl2B,KAAMm3B,EAAS/nB,MARjC,4DAQkD2nB,SANnD,SAQF,wBAAKjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,GAAD,CAAiBl2B,KAAMo3B,EAAUhoB,MAVjC,qEAUmD2nB,SARpD,gB,GAxCiBlpB,aCGlCwG,GAAO,KAAOA,OAGCojB,G,2MAEjB53B,MAAM,CACFqa,SAAQ,EACRla,KAAK,GACL03B,QAAQ,K,EAGZ/d,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,YACNyK,UAAU,aAEd,CACIzK,MAAM,SACNyK,UAAU,UAEd,CACIzK,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC6d,GAAD,OACP,8BACI,kBAACxf,GAAD,CAAS/H,QAAS,kBAAI,EAAKwnB,YAAYD,W,EAOnDC,YAAY,SAACD,GACT,KAAM5lB,QAAQ,CACV3C,MAAM,4BAAQuoB,EAAU3pB,KAAK,gBAC7BiE,KAAK,WAAD,4BAAC,sBAAApO,EAAA,sDAkBDF,EAAA,EAAQH,MAAM,4BAlBb,2CAAD,kDAAC,M,EAuBbq0B,W,uCAAW,WAAMnrB,GAAN,qBAAA7I,EAAA,yDACP,EAAKiO,SAAS,CACV4lB,QAAQhrB,IAERnB,EAAO,GACX,EAAKuG,SAAS,CAACoI,SAAQ,IACZ,MAARxN,EANI,gCAOUjD,KAPV,OAOH8B,EAPG,+CASU7B,KATV,QASH6B,EATG,eAYP,GADA,EAAKuG,SAAS,CAACoI,SAAQ,IACpB3O,EAAO,CAGN,IAASgf,KAFHvqB,EAAK,GACPuO,EAAE,EACQhD,EACVvL,EAAK6O,KAAK,CACN,IAAMN,EACN,KAAOhD,EAAOgf,GAAG,GACjB,UAAYhf,EAAOgf,GAAG,GACtB,OAAShf,EAAOgf,GAAG,KAEvBhc,IAEJ,EAAKuD,SAAS,CACV9R,cAGJ2D,EAAA,EAAQH,MAAM,yCA5BX,4C,0IAiCP+I,KAAKoN,e,+BAEA,IAAD,EACiBpN,KAAK1M,MAAnBG,EADH,EACGA,KAAKka,EADR,EACQA,QACN7C,EAAO,wBAAQ3B,SAAUnJ,KAAKsrB,WAAYrqB,MAAO,CAAC+C,MAAM,UAClD,kBAAC,GAAD,CAAQ7D,MAAM,KAAd,+BACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,qDAEZ,OACI,wBAAM2K,MAAOA,GACT,wBACAsE,OAAO,MACPD,UAAQ,EACRxB,QAASA,EACT0B,WAAY5b,EACZ4Z,QAASrN,KAAKqN,e,GA5GU/L,aCDlCZ,GAAK,IAAKA,KAEV6qB,G,2MAOFC,S,sBAAS,4BAAAl0B,EAAA,sEACC,EAAKmI,MAAMgsB,I1EfG,sB0Ecf,OAECzsB,EAAO,EAAKS,MAAM/K,eACxB0C,EAAA,EAAQiX,QAAQrP,EAAOtL,KAHlB,2C,EAMTg4B,e,sBAAe,4BAAAp0B,EAAA,sEACL,EAAKmI,MAAMksB,I1EvBI,kC0EsBV,OAEL3sB,EAAO,EAAKS,MAAM/K,eACxB0C,EAAA,EAAQiX,QAAQrP,EAAOtL,KAHZ,2C,EAMfk4B,c,sBAAc,4BAAAt0B,EAAA,sEACJ,EAAKmI,MAAMksB,I1E5BG,iC0E2BV,OAEJ3sB,EAAO,EAAKS,MAAM/K,eACxB0C,EAAA,EAAQiX,QAAQrP,EAAOtL,KAHb,2C,wEAWV,OACI,4BACI,sBANa,CACjBsY,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAKT,kBAAC,GAAD,CAAM/E,MAAM,4BACR,uBAAQpT,KAAK,UAAUqQ,QAAS7D,KAAKwrB,UAAU,uBAAMh4B,KAAK,WAA1D,iBAEJ,kBAAC,GAAD,CAAMoT,MAAM,4BACR,uBAAQpT,KAAK,UAAUqQ,QAAS7D,KAAK0rB,gBAAgB,uBAAMl4B,KAAK,SAAhE,4BADJ,WAEI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAK4rB,eAAe,uBAAMp4B,KAAK,SAA/D,mC,GAtCF8N,aA0DhBS,GAAqB,CAAC0pB,ICpCT,SAAApuB,GAAI,8CAAI,WAAM0B,GAAN,eAAAzH,EAAA,sEACJ8F,GAAgBC,GADZ,OACjB2B,EADiB,OAEvBD,GAP0BrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACzCH,KtFqGsB,esFpGtBE,MACAC,YAEuB,iCALE,IAACD,EAAIC,IAKP,OAAJ,uDDoCSg4B,ICzBb,SAAAtuB,GAAI,8CAAI,WAAM0B,GAAN,eAAAzH,EAAA,sEACFgG,GAAeD,GADb,OACjB2B,EADiB,OAEvBD,GAPyBrL,EAOIsL,EAAOtL,IAPPC,EAOWqL,EAAOrL,OAPP,CACxCH,KtF4FsB,esF3FtBE,MACAC,YAEuB,iCALC,IAACD,EAAIC,IAKN,OAAJ,wDD2BRgP,gBARS,SAAArP,GACpB,MAAO,CACHoB,eAAepB,EAAMoB,kBAQzBqN,GAFWY,CAGb4oB,IExEI7qB,GAAK,IAAKA,KAEVoL,G,6LAQE9L,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACElC,EAAcwC,KAAKP,MAAnBjC,aACA+C,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAKP,OACI,2BACI,kBAAC,GAAD,eAAMqG,MAAM,4BANC,CACjBoF,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,MAMTpL,EAAkB,OAAO,CACrBQ,aAAavD,EAAaiE,KAC1Bd,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,uDAH3BmJ,CAMI,uBAAOY,YAAY,6D,GA5BrBqP,iBAoCP,OAAKhP,QAAL,CAAcsK,ICjCR+f,G,2MACjBv4B,MAAM,CACFw4B,cAAc,GACdne,SAAQ,EACR1F,QAAO,G,EAEXmF,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,KACNyK,UAAU,OACZ,CACEzK,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAerE,GAAYqE,KAEtC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAAC/P,GAAD,OACP,8BACI,kBAACoO,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWhQ,MAD1C,eAEI,kBAACqO,GAAD,CAAWhI,QAAS,kBAAI,EAAKkoB,mBAAmBvuB,W,EAO5DwuB,iB,sBAAkB,8BAAA10B,EAAA,6DACd,EAAKiO,SAAS,CAACoI,SAAQ,IADT,SAEKpQ,KAFL,OAERyB,EAFQ,OAGd,EAAKuG,SAAS,CAACoI,SAAQ,IACJ,IAAhB3O,EAAOrL,QACAm4B,EAAc9sB,EAAOvL,KAC3B,EAAK8R,SAAS,CAACumB,mBAEf10B,EAAA,EAAQH,MAAM+H,EAAOtL,KARX,2C,EAYlBsa,QAAQ,WACJ,EAAKxQ,aAAa,KAClB,EAAK+H,SAAS,CAAC0C,QAAO,K,EAG1BuF,WAAW,SAAChQ,GACR,EAAKA,aAAaA,EAClB,EAAK+H,SAAS,CAAC0C,QAAO,K,EAG1BgkB,wBAAwB,WACpB,EAAKvsB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,uBAEjB,EAAKoN,SAAS,CAAC0C,QAAO,IAChBzK,EAAaoC,EACnB,EAAKF,KAAKyO,cACP,EAAK3Q,eACJA,EAAa7E,IAAI,EAAK6E,aAAa7E,KANtB,SAQE8E,GAAgBD,GARlB,OASE,KADbwB,EARW,QASPrL,QACNyD,EAAA,EAAQiX,QAAQ,4BAChB,EAAK2d,oBAEL50B,EAAA,EAAQH,MAAM+H,EAAOtL,KAbR,2CAAzB,oCAAAsM,KAAA,iB,EAoBJ+rB,mBAAmB,SAACvuB,GAChB,KAAMgI,QAAQ,CACV3C,MAAM,2BAAOrF,EAAaiE,KAAK,eAC/BiE,KAAK,WAAD,4BAAC,sBAAApO,EAAA,sEACkBoG,GAAcF,EAAa7E,KAD7C,OAEkB,IAFlB,OAEShF,SACNyD,EAAA,EAAQiX,QAAQ,kCAChB,EAAK2d,oBAJR,2CAAD,kDAAC,M,oFAWThsB,KAAKoN,e,0CAGLpN,KAAKgsB,qB,+BAEA,IAAD,SACiChsB,KAAK1M,MAAnCw4B,EADH,EACGA,cAAcne,EADjB,EACiBA,QAAQ1F,EADzB,EACyBA,OACvBzK,EAAawC,KAAKxC,cAAc,GAChCqF,EAAM,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,UAAzD,gBACZ,OACI,wBAAMqP,MAAOA,GACT,wBACAsM,UAAQ,EACRC,OAAO,MACPzB,QAASA,EACT0B,WAAYyc,EACZze,QAASrN,KAAKqN,QACdiC,WAAY,CAACC,gB7ErHN,G6EqHgCoH,iBAAgB,KAGvD,wBACE9T,MAAOrF,EAAa7E,IAAM,2BAAS,2BACnC6Q,QAASvB,EACTvC,KAAM1F,KAAKisB,wBACXxiB,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0C,QAAO,MAGxB,kBAAC,GAAD,CACA8D,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAC5BlC,aAAcA,EACdsuB,cAAeA,U,GA1HOxqB,aCIpCwG,I,QAAO,KAAOA,QACdpH,GAAK,IAAKA,KAEVwlB,G,2MACF5yB,MAAM,CACFw4B,cAAc,I,EAKlB3F,QAAQ,WACJ,EAAK1mB,MAAMC,KAAKyO,e,EAGpBiY,YAAY,WACR,EAAK3mB,MAAMC,KAAKC,gBAAe,SAACxH,EAAIyH,GAChC,EAAKH,MAAM4mB,cAAczmB,O,EAIjC0mB,W,sBAAW,4BAAAhvB,EAAA,sEACmBiG,KADnB,OAEmB,KADpBuuB,EADC,QAEUn4B,QACb,EAAK4R,SAAS,CAACumB,cAAcA,EAAcr4B,OAHxC,2C,oFAQPuM,KAAKsmB,aACLtmB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEa,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACAurB,EAAgB9rB,KAAK1M,MAArBw4B,cAEP,OACI,uBAAMtrB,UAAU,4BACZ,wBAAKkL,OAAQ,IACT,wBAAKC,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,eAAe,CACjCQ,aAAa,IADbR,CAGI,4BAEQurB,EAAc1iB,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAGvlB,IAAKwH,MAAO+d,EAAGvlB,KAAMulB,EAAGzc,aAO9E,wBAAKkK,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,OAAO,CACzBQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,SAAS,CAC3BQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,sBAEZrG,EAAkB,YAAY,CAC9BQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,4BAEZrG,EAAkB,gBAAgB,CAClCQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM1K,MAAO,CAAC4E,MAAM,UAChB,8BACI,uBAAQ5E,MAAO,CAACgI,aAAa,IAAKzV,KAAK,UAAUqQ,QAAS7D,KAAKomB,aAA/D,eAA8E,uBAAM5yB,KAAK,YACzF,uBAAQyN,MAAO,CAAEslB,WAAY,GAAK/yB,KAAK,SAASqQ,QAAS7D,KAAKmmB,SAAS,uBAAM3yB,KAAK,WAAlF,yB,GAnGPgd,iBA4GV,OAAKhP,QAAL,CAAc0kB,ICjHrBM,G,KAAAA,MAEapP,G,2MACjB9jB,MAAM,CACF44B,MAAM,GACNrT,MAAM,EACNlL,SAAQ,EACR1F,QAAO,EACPzK,aAAa,GACbiE,KAAK,GACL0qB,OAAO,GACPC,UAAU,GACVC,cAAc,I,EAIlBjf,WAAW,WACP,EAAKC,QAAQ,CAAC,CACVxK,MAAM,2BACNyK,UAAU,eACVtJ,MAAO,IACPuJ,OAAO,SAAC/P,GAAgB,OAAOA,EAAaiE,OAC9C,CACEoB,MAAM,eACNyK,UAAU,OACVtJ,MAAO,KACT,CACEnB,MAAM,OACNyK,UAAU,OACVtJ,MAAO,KACT,CACEnB,MAAM,eACNmB,MAAO,IACPsJ,UAAU,UACZ,CACEzK,MAAM,qBACNmB,MAAO,IACPsJ,UAAU,aACZ,CACEzK,MAAM,2BACNmB,MAAO,GACPsJ,UAAU,iBACZ,CACEzK,MAAM,eACNmB,MAAO,GACPsJ,UAAU,SACZ,CACEzK,MAAM,2BACNyK,UAAU,cACVtJ,MAAO,IACPuJ,OAAO,SAAC7E,GAAD,OAAe3D,GAAU2D,KAClC,CACE7F,MAAM,eACNwV,MAAO,QACPrU,MAAO,IACPuJ,OAAO,SAAC1P,GAAD,OACP,8BACI,kBAAC+Y,GAAD,CAAY/S,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,eAAe,CAACzE,YADrE,eAEI,kBAAC+N,GAAD,CAAS/H,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,oBAAoBzE,MAFtE,eAGI,kBAACgO,GAAD,CAAWhI,QAAS,kBAAI,EAAKyoB,WAAWzuB,W,EAKpD0uB,S,uCAAU,WAAM/T,GAAN,iCAAAlhB,EAAA,6DACN,EAAKkhB,QAAQA,GACA,EACb,EAAKjT,SAAS,CAACoI,SAAQ,IAHjB,EAIkD,EAAKra,MAAvDkK,EAJA,EAIAA,aAAaiE,EAJb,EAIaA,KAAK0qB,EAJlB,EAIkBA,OAAOC,EAJzB,EAIyBA,UAAUC,EAJnC,EAImCA,cAJnC,SAKazuB,GAAO,CACtB6a,QAJS,EAKTD,UACAI,S/EpFW,G+EqFXpb,eACAiE,OACA0qB,SACAC,YACAC,kBAbE,OAKFrtB,EALE,OAeN,EAAKuG,SAAS,CAACoI,SAAQ,IACJ,IAAhB3O,EAAOrL,QAAY,EACCqL,EAAOvL,KAAnBolB,EADU,EACVA,MAAMtM,EADI,EACJA,KACb,EAAKhH,SAAS,CAAC2mB,MAAM3f,EAAKsM,YAE1B,EAAKtT,SAAS,CAAC2mB,MAAM,KACrB90B,EAAA,EAAQH,MAAM+H,EAAOtL,MArBnB,2C,wDAyBVsa,QAAQ,WACJ,EAAKnQ,KAAK,KACV,EAAK0H,SAAS,CAAC0C,QAAO,K,EAG1BuF,WAAW,SAAC3P,GACR,EAAKA,KAAKA,EACV,EAAK0H,SAAS,CAAC0C,QAAO,K,EAG1Bgf,UAAU,WACN,EAAKvnB,KAAKyO,e,EAGdme,WAAW,SAACzuB,GACR,KAAM2H,QAAQ,CACV3C,MAAM,iCACN6C,KAAK,WAAD,4BAAC,sBAAApO,EAAA,sEACkByG,GAAMF,EAAKlF,KAD7B,OAEkB,IAFlB,OAEShF,SACNyD,EAAA,EAAQiX,QAAQ,kCAChB,EAAKke,SAAS,IAJjB,2CAAD,kDAAC,M,EAUblG,cAAc,SAACc,GACX,EAAK5hB,SAAS,CACV/H,aAAa2pB,EAAW3pB,aACxBiE,KAAK0lB,EAAW1lB,KAChB0qB,OAAOhF,EAAWgF,OAClBC,UAAUjF,EAAWiF,UACrBC,cAAclF,EAAWkF,gBAC3B,WACE,EAAKE,SAAS,EAAK/T,a,oFAKvBxY,KAAKoN,e,0CAGLpN,KAAKusB,SAAS,K,+BAGT,IAAD,SACwBvsB,KAAK1M,MAA1B44B,EADH,EACGA,MAAMrT,EADT,EACSA,MAAMlL,EADf,EACeA,QACb9K,EAAO,8BACT,uBAAQrP,KAAK,UAAUqQ,QAAS,kBAAI,EAAKpE,MAAMK,QAAQwC,KAAK,uBAAsB,uBAAM9O,KAAK,mBAA7F,iBAGJ,OACI,wBAAMqP,MAAOA,GACT,4BACA,kBAAC,GAAD,CAAOukB,OAAO,gBACd,kBAAC,GAAD,CAAYrb,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO2mB,cAAermB,KAAKqmB,kBAGnE,wBACAlX,UAAQ,EACRwC,KAAK,QACLvC,OAAO,MACPzB,QAASA,EACT0B,WAAY6c,EACZ7e,QAASrN,KAAKqN,QACd8F,OAAQ,CAAEiG,EAAG,KACb9J,WAAY,CACRT,QAAQ7O,KAAKwY,QACbjJ,gB/E1KG,G+E2KHoH,iBAAgB,EAChBkC,QACA1P,SAASnJ,KAAKusB,iB,GA/JAjrB,aCRbgY,G,YAMjB,WAAY7Z,GAAO,IAAD,uBACd,4CAAMA,KAoBV8Z,QAAQ,WAEJ,IAAIlkB,EAAI,GAIR,OAHA,EAAK/B,MAAMkmB,SAASpQ,KAAI,SAAAqQ,GAAI,OACxBpkB,GAAKokB,EAAKhY,KAAK,OAEZpM,EAAIsT,UAAU,EAAEtT,EAAIgL,OAAO,IA3BpB,EA8BlBqZ,aAAa,kBAAI,EAAKnU,SAAS,CAACoU,eAAc,KA9B5B,EAiClBC,cAAc,SAAAH,GACV,EAAKlU,SAAS,CACVsU,aAAaJ,EAAK7jB,KAAK6jB,EAAKK,SAC5BH,eAAc,KApCJ,EAuClBI,aAAa,YAAoB,IAAlBN,EAAiB,EAAjBA,KAAKD,EAAY,EAAZA,SAChB,GAAiB,SAAdC,EAAK9lB,OAAgB,CACpB,IAAMqL,EAAOya,EAAKO,SAClB,GAAmB,IAAhBhb,EAAOrL,OAAW,CACjByD,EAAA,EAAQiX,QAAQ,6BADC,IAEV5a,EAAMuL,EAANvL,MACPgmB,EAAKD,EAASA,EAASnZ,OAAO,IACzBoB,KAAKhO,EAAK,GACfgmB,EAAK7jB,IAAInC,EAAK,QAEd2D,EAAA,EAAQH,MAAM,kCAGbwiB,EAAK9lB,OAQd,EAAK4R,SAAS,CAACiU,cA1Df,IAAIA,EAAS,GACNgT,EAAO,EAAK/sB,MAAZ+sB,MACJA,GAAOA,EAAMnsB,OAAO,IAEnBmZ,EADWgT,EAAMz0B,MAAM,KACPqR,KAAI,SAAC8Q,EAAGC,GAAJ,MAAa,CACzBC,KAAKD,EACL1Y,KAAKyY,EACLG,OAAO,OACPzkB,IAAIwC,EAAa8hB,OAVf,OAcd,EAAK5mB,MAAM,CACPqmB,eAAc,EACdE,aAAa,GACbL,YAjBU,E,sEA+DT,IAAD,EACwCxZ,KAAK1M,MAA1CumB,EADH,EACGA,aAAaF,EADhB,EACgBA,cAAcH,EAD9B,EAC8BA,SAC5Bc,EACF,6BACI,uBAAM9mB,KAAK,SACX,8CAGR,OACI,6BACI,wBACCD,OAAO,iBACPgnB,OAAO,UACP9Y,KAAK,QACL+Y,SAAS,eACThB,SAAUA,EACViB,UAAWza,KAAK4Z,cAChBzQ,SAAUnJ,KAAK+Z,cAEfP,EAASnZ,QhF5FG,EgF4FqB,KAAKia,GAEvC,wBAAOtW,MAAM,MAAMwF,QAASmQ,EAAee,OAAQ,KAAMjR,SAAUzJ,KAAK0Z,cACpE,yBAAKiB,IAAI,GAAG1Z,MAAO,CAAC+C,MAAM,QAAS4W,IAAKf,U,GA3FtBvY,aAAjBgY,GAEVuB,SAAS,CACZ2R,MAAM7qB,IAAUmZ,OCCxBpG,KAAOC,OAAO,SAEd,IAAMjU,GAAK,IAAKA,KACToH,G,KAAAA,OACAoV,G,IAAAA,SACDC,GAASpY,GAAUP,KAAKW,OAExBiY,G,YAKF,WAAY3d,GAAO,IAAD,8BACd,4CAAMA,KALVnM,MAAM,CACFw4B,cAAc,IAGA,EAKlBE,iBALkB,sBAKD,8BAAA10B,EAAA,sEACMiG,KADN,OAEM,KADbyB,EADO,QAEHrL,SACAm4B,EAAc9sB,EAAOvL,KAC3B,EAAK8R,SAAS,CAACumB,mBAJN,2CALC,EAclBvO,cAAc,SAAC3W,GACX,OAAOA,EAAMA,EAAMvG,OAAS,IAfd,EAkBlBmd,OAAO,WACH,EAAK/d,MAAMC,KAAKC,eAAhB,uCAA+B,WAAM1I,EAAM2I,GAAZ,uCAAAtI,EAAA,yDACvBL,EADuB,uBAGnByR,EAUF9I,EAVE8I,YACAjH,EASF7B,EATE6B,KACAgrB,EAQF7sB,EARE6sB,KACAN,EAOFvsB,EAPEusB,OACAC,EAMFxsB,EANEwsB,UACAC,EAKFzsB,EALEysB,cACAK,EAIF9sB,EAJE8sB,MACAC,EAGF/sB,EAHE+sB,QACAh5B,EAEFiM,EAFEjM,OACA6J,EACFoC,EADEpC,aAEEgvB,EAAM,EAAK9O,GAAG7O,QAAQ0K,UACtB1b,EAAK,CACP6K,cACAjH,OACAgrB,OACAN,SACAC,YACAC,gBACAK,QACAC,UACAh5B,SACA6J,eACAgvB,SAED,EAAK3O,WACJhgB,EAAKlF,IAAI,EAAKkF,KAAKlF,KA7BA,SA+BJmF,GAAQD,GA/BJ,OAgCJ,KADbmB,EA/BiB,QAgCbrL,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK+L,MAAMK,QAAQge,UAEnB1mB,EAAA,EAAQH,MAAM+H,EAAOtL,KApCF,2CAA/B,oCAAAsM,KAAA,iBAjBA,EAAK0d,GAAGzO,IAAMC,YAFA,E,kFA8DdlP,KAAKgsB,mBACL,IAAMnuB,EAAKmC,KAAKP,MAAMgE,SAASnQ,MAC/B0M,KAAK6d,WAAWhgB,EAEhBmC,KAAKnC,KAAKA,GAAO,K,+BAEZ,IAAD,OACGiuB,EAAe9rB,KAAK1M,MAApBw4B,cACAjO,EAAe7d,KAAf6d,SAAShgB,EAAMmC,KAANnC,KAEZ6K,EAUF7K,EAVE6K,YACAjH,EASF5D,EATE4D,KACAgrB,EAQF5uB,EARE4uB,KACAN,EAOFtuB,EAPEsuB,OACAC,EAMFvuB,EANEuuB,UACAC,EAKFxuB,EALEwuB,cACAK,EAIF7uB,EAJE6uB,MACAC,EAGF9uB,EAHE8uB,QACAnvB,EAEFK,EAFEL,aACAgvB,EACF3uB,EADE2uB,MAEGjsB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAMDsC,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,8BAAOD,EAAW,2BAAO,6BAGjC,OACI,wBAAMhb,MAAOA,GACT,sBAba,CACjBmJ,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,IAYT,kBAAC,GAAD,CAAM/E,MAAM,4BACXrG,EAAkB,cAAc,CAC7BQ,aAAa8c,EAAWnJ,KAAOhM,EAAY,cAAgBgM,KAAOyI,GAAS,cAC3Exc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,uDAJ7BmJ,CAQG,+BAGJ,kBAAC,GAAD,CAAMqG,MAAM,4BACXrG,EAAkB,eAAe,CAC9BQ,aAAa8c,EAAWrgB,EAAa7E,IAAM,EAC3CgI,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,iDAJ7BmJ,CAQG,4BAEIurB,EAAc1iB,KAAI,SAAAmV,GAAE,OAAE,kBAAC,GAAD,CAAQzb,IAAKyb,EAAG5lB,IAAKwH,MAAOoe,EAAG5lB,KAAM4lB,EAAG9c,YAKtE,kBAAC,GAAD,CAAMmF,MAAM,gBACXrG,EAAkB,OAAO,CACtBQ,aAAa8c,EAAWpc,EAAM,GAC9Bd,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,2CAJ7BmJ,CAQG,uBAAOY,YAAY,sCAGvB,kBAAC,GAAD,CAAMyF,MAAM,QACXrG,EAAkB,OAAO,CACtBQ,aAAa8c,EAAW4O,EAAO,IADlClsB,CAGG,uBAAOY,YAAY,8BAGvB,kBAAC,GAAD,CAAMyF,MAAM,gBACXrG,EAAkB,SAAS,CACxBQ,aAAa8c,EAAWsO,EAAS,IADpC5rB,CAGG,uBAAOY,YAAY,sCAGvB,kBAAC,GAAD,CAAMyF,MAAM,sBACXrG,EAAkB,YAAY,CAC3BQ,aAAa8c,EAAWuO,EAAY,IADvC7rB,CAGG,uBAAOY,YAAY,4CAGvB,kBAAC,GAAD,CAAMyF,MAAM,4BACXrG,EAAkB,gBAAgB,CAC/BQ,aAAa8c,EAAWwO,EAAgB,IAD3C9rB,CAGG,uBAAOY,YAAY,oEAGvB,kBAAC,GAAD,CAAMyF,MAAM,gBACXrG,EAAkB,QAAQ,CACvBQ,aAAa8c,EAAW6O,EAAQ,IADnCnsB,CAGG,uBAAOY,YAAY,sCAGvB,kBAAC,GAAD,CAAMyF,MAAM,eAAKoF,SAAU,CAACL,KAAK,GAAIM,WAAY,CAACN,KAAK,KACtDpL,EAAkB,UAAU,CACzBQ,aAAa8c,EAAW8O,EAAU,IADrCpsB,CAGI,kBAAC,GAAD,CAAUY,YAAY,GAAGqd,SAAU,CAACC,QAAQ,EAAEC,QAAQ,OAG3D,kBAAC,GAAD,CAAM9X,MAAM,gBACR,kBAAC,GAAD,CAAU+I,IAAK3P,KAAK0d,GAAI8O,MAAOA,KAEnC,kBAAC,GAAD,KACI,uBAAQh5B,KAAK,UAAUqQ,QAAS7D,KAAKwd,QAAQ,uBAAMhqB,KAAK,SAAxD,gBADJ,WAEI,uBAAQA,KAAK,UAAS,uBAAMA,KAAK,UAAjC,uB,GA9LE8N,aAqMX,OAAKE,QAAL,CAAc4b,IC9M7B1I,KAAOC,OAAO,SAEd,IAAMjU,GAAK,KAAaA,KAEHie,G,2MACjBrrB,MAAM,CACFqmB,eAAc,EACdE,aAAa,I,EAGjBH,aAAa,kBAAI,EAAKnU,SAAS,CAACoU,eAAc,K,EAG9CC,cAAc,SAAAoF,GACV,EAAKzZ,SAAS,CACVsU,aAAazhB,EAAa4mB,EAC1BrF,eAAc,K,wEAIb,IAAD,SAYF3Z,KAAKP,MAAMgE,SAASnQ,MAAMuK,KAVxB6K,EAFA,EAEAA,YACAjH,EAHA,EAGAA,KACA0qB,EAJA,EAIAA,OACAC,EALA,EAKAA,UACAC,EANA,EAMAA,cACAK,EAPA,EAOAA,MACAD,EARA,EAQAA,KACAE,EATA,EASAA,QACAnvB,EAVA,EAUAA,aACAgvB,EAXA,EAWAA,MAXA,EAc+BxsB,KAAK1M,MAAjCumB,EAdH,EAcGA,aAAaF,EAdhB,EAcgBA,cACd9W,EACF,8BACI,kBAACwW,GAAD,CAASxV,QAAS,kBAAI,EAAKpE,MAAMK,QAAQge,YACzC,+CAIR,OACI,wBAAMjb,MAAOA,GACX,wBAAcsM,UAAQ,GACpB,kBAAC,GAAD,CAAMvI,MAAM,2BAAO+E,KAAM,GAAI5G,GAAU2D,IACvC,kBAAC,GAAD,CAAM9B,MAAM,4BAASpJ,EAAaiE,MAClC,kBAAC,GAAD,CAAMmF,MAAM,gBAAMnF,GAClB,kBAAC,GAAD,CAAMmF,MAAM,QAAQ6lB,GACpB,kBAAC,GAAD,CAAM7lB,MAAM,gBAAMulB,GAClB,kBAAC,GAAD,CAAMvlB,MAAM,sBAAOwlB,GACnB,kBAAC,GAAD,CAAMxlB,MAAM,4BAAQylB,GACpB,kBAAC,GAAD,CAAMzlB,MAAM,gBAAM8lB,GAClB,kBAAC,GAAD,CAAM9lB,MAAM,2BAAO+E,KAAM,GAAIghB,GAC7B,kBAAC,GAAD,CAAM/lB,MAAM,2BAAO+E,KAAM,GAErB6gB,EAAQA,EAAMz0B,MAAM,KAAKqR,KAAI,SAAA4V,GAAG,OACxB,uBAAGlc,IAAKkc,EAAKnb,QAAS,WAAK,EAAK+V,cAAcoF,KAC9C,yBACAlc,IAAKkc,EACLxe,UAAU,sBACVoa,IAAKxiB,EAAa4mB,EAClBrE,IAAI,YAGV,+BAIR,wBAAO3W,MAAM,MAAMwF,QAASmQ,EAAee,OAAQ,KAAMjR,SAAUzJ,KAAK0Z,cAClE,yBAAKiB,IAAI,GAAG1Z,MAAO,CAAC+C,MAAM,QAAS4W,IAAKf,U,GAlETvY,aCH9BsrB,G,iLAGb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOvvB,KAAK,QAAQ2iB,UAAW5I,GAAM6I,OAAK,IAC1C,kBAAC,IAAD,CAAO5iB,KAAK,oBAAoB2iB,UAAW5C,KAC3C,kBAAC,IAAD,CAAO/f,KAAK,eAAe2iB,UAAWE,KACtC,kBAAC,IAAD,CAAU5f,GAAG,e,GARKgB,aCDlCoT,KAAOC,OAAO,SACd,IAAMjU,GAAK,IAAKA,KACToH,G,KAAAA,OACDqV,GAASpY,GAAUP,KAAKW,OAExB2G,G,2MAEFxY,MAAM,CACF44B,MAAM,I,EAQVW,kB,uCAAkB,WAAM1sB,GAAN,iBAAA7I,EAAA,0DACX6I,EADW,gCAESvC,GAAO,CAAC,KAAOuC,IAFxB,OAGS,KADbnB,EAFI,QAGArL,QACAu4B,EAAMltB,EAAOvL,KAAK8Y,KACxB,EAAKhH,SAAS,CAAC2mB,WAEf,EAAK3mB,SAAS,CAAC2mB,MAAM,KAPf,sBAUV,EAAK3mB,SAAS,CAAC2mB,MAAM,KAVX,2C,0IAedlsB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACExB,EAAW8B,KAAKP,MAAhBvB,UAED4uB,EADQ9sB,KAAK1M,MAAZ44B,MACmB9iB,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAEvc,SACpDlB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,sBAAUiE,EACN,kBAAC,GAAD,CAAMhJ,MAAM,4BACPrG,EAAkB,cAAc,CAC7BQ,aAAc7C,EAAUwK,YAAYgM,KAAOxW,EAAUwK,YAAY,cAAcgM,KAAOyI,GAAS,cAC/Fxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,+BAJ7BmJ,CAQG,+BAGR,kBAAC,GAAD,eAAMqG,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAa7C,EAAUL,KAAKK,EAAUL,KAAKlF,IAAI,EAC/CgI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,wBACI4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,eACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAK6sB,kBACfvO,gBAAiB,MAEpBwO,KAKT,kBAAC,GAAD,eAAMlmB,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAa7C,EAAU8W,KACvBrU,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,mC,GAlFFe,aA0FP,OAAKE,QAAL,CAAcsK,IC1FvBpL,GAAK,IAAKA,KACRwnB,G,KAAAA,YAEFhC,G,2MAEF5yB,MAAM,CACF+0B,UAAU,GACVC,QAAQ,I,EAMZnC,QAAQ,WACJ,EAAK1mB,MAAMC,KAAKyO,e,EAGpBiY,YAAY,WACR,EAAK3mB,MAAMC,KAAKC,gBAAe,SAACxH,EAAIyH,GAChC,EAAKH,MAAM4mB,cAAc,CACrB0G,SAASntB,EAAOmtB,SAChB1E,UAAU,EAAK/0B,MAAM+0B,UACrBC,QAAQ,EAAKh1B,MAAMg1B,c,EAM/B0E,aAAa,SAACzoB,EAAM0kB,GAChB,IAAMZ,EAAUY,EAAW,GACrBX,EAAQW,EAAW,GACzB,EAAK1jB,SAAS,CAAC8iB,YAAUC,a,oFAIzBtoB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEa,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAEP,OACI,uBAAMC,UAAU,4BACZ,wBAAKkL,OAAQ,IACT,wBAAKC,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,WAAW,CAC7BQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,IACP,kBAAC,GAAD,CAAM/E,MAAM,4BAEZrG,EAAkB,cAAc,CAChCQ,aAAa,IADbR,CAGQ,kBAAC,GAAD,CAAa4I,SAAUnJ,KAAKgtB,kBAKxC,wBAAKrhB,KAAM,GACP,kBAAC,GAAD,CAAM1K,MAAO,CAAC4E,MAAM,UAChB,8BACI,uBAAQ5E,MAAO,CAACgI,aAAa,IAAKzV,KAAK,UAAUqQ,QAAS7D,KAAKomB,aAA/D,eAA8E,uBAAM5yB,KAAK,YACzF,uBAAQyN,MAAO,CAAEslB,WAAY,GAAK/yB,KAAK,SAASqQ,QAAS7D,KAAKmmB,SAAS,uBAAM3yB,KAAK,WAAlF,yB,GAnEPgd,iBA4EV,OAAKhP,QAAL,CAAc0kB,IChFR+G,G,2MAEjB35B,MAAM,CACFulB,MAAM,EACN5K,WAAU,EACVN,SAAQ,EACRuf,WAAW,GACXH,SAAS,GACT1E,UAAU,GACVC,QAAQ,I,EAEZlb,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,eACNyK,UAAU,OACVC,OAAO,SAAC1P,GAAQ,OAAOA,EAAK4D,OAEhC,CACIoB,MAAM,eACNyK,UAAU,QAEd,CACIzK,MAAM,2BACNyK,UAAU,cACVC,OAAO,SAAC7E,GAAD,OAAe3D,GAAU2D,KAEpC,CACI7F,MAAM,eACNmB,MAAM,IACNuJ,OAAO,SAACrP,GAAD,OACP,8BACI,kBAAC0N,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWtP,MAD1C,eAEI,kBAAC2N,GAAD,CAAWhI,QAAS,kBAAI,EAAKspB,gBAAgBjvB,W,EAOzDkvB,c,uCAAc,WAAM5U,GAAN,6BAAAlhB,EAAA,6DACV,EAAKkhB,QAAQA,GACA,EACb,EAAKjT,SAAS,CAACoI,SAAQ,IAHb,EAIwB,EAAKra,MAAjCy5B,EAJI,EAIJA,SAAS1E,EAJL,EAIKA,UAAUC,EAJf,EAIeA,QAJf,SAKSrqB,GAAY,CAC3Bwa,QAJS,EAKTD,UACAI,StF5DW,GsF6DXmU,WACA1E,YACAC,YAXM,OAKNtpB,EALM,OAaV,EAAKuG,SAAS,CAACoI,SAAQ,IACJ,IAAhB3O,EAAOrL,QAAY,EACCqL,EAAOvL,KAAnBolB,EADU,EACVA,MAAMtM,EADI,EACJA,KACb,EAAKhH,SAAS,CAAC2nB,WAAW3gB,EAAKsM,YAE/B,EAAKtT,SAAS,CAAC2nB,WAAW,KAC1B91B,EAAA,EAAQH,MAAM+H,EAAOtL,MAnBf,2C,wDAuBdsa,QAAQ,WACJ,EAAK9P,UAAU,KACf,EAAKqH,SAAS,CACV0I,WAAU,K,EAGlBof,qBAAqB,WACjB,EAAK3tB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,wBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,KACnB/P,EAAU0B,GACN8I,YAAY3D,GAAUnF,EAAM,aACtC,EAAKF,KAAKyO,cACP,EAAKjQ,YACJA,EAAUvF,IAAI,EAAKuF,UAAUvF,KAPhB,SASEwF,GAAaD,GATf,OAUE,KADbc,EATW,QAUPrL,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK05B,cAAc,IAEnBh2B,EAAA,EAAQH,MAAM+H,EAAOtL,KAdR,4CAAzB,oCAAAsM,KAAA,iB,EAoBJwN,WAAW,SAACtP,GACR,EAAKA,UAAUA,EACf,EAAKqH,SAAS,CAAC0I,WAAU,K,EAG7Bkf,gBAAgB,SAACjvB,GACb,KAAMsH,QAAQ,CACV3C,MAAM,uCACN6C,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACkB8G,GAAWF,EAAUvF,KADvC,OAEkB,KADbqG,EADL,QAESrL,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAK05B,cAAc,IAJtB,2CAAD,kDAAC,M,EAUb/G,cAAc,SAACc,GACX,EAAK5hB,SAAS,CACVwnB,SAAS5F,EAAW4F,SACpB1E,UAAUlB,EAAWkB,UACrBC,QAAQnB,EAAWmB,UACrB,WACE,EAAK8E,cAAc,EAAK5U,a,oFAK5BxY,KAAKoN,e,0CAGLpN,KAAKotB,cAAc,K,+BAEd,IAAD,SACuCptB,KAAK1M,MAAzC45B,EADH,EACGA,WAAWvf,EADd,EACcA,QAAQM,EADtB,EACsBA,UAAU4K,EADhC,EACgCA,MAC9B3a,EAAU8B,KAAK9B,WAAW,GAC1B2E,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,YAAzD,iBAET,OACI,wBAAMqP,MAAOA,GACT,kBAAC,GAAD,CAAYkJ,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO2mB,cAAermB,KAAKqmB,gBACnE,wBACAlX,UAAQ,EACRwC,KAAK,QACLvC,OAAO,MACPzB,QAASA,EACT0B,WAAY6d,EACZ7f,QAASrN,KAAKqN,QACdiC,WAAY,CACRT,QAAQ7O,KAAKwY,QACbjJ,gBtF3JG,GsF4JHoH,iBAAgB,EAChBkC,QACA1P,SAASnJ,KAAKusB,YAGlB,wBACE1pB,MAAO3E,EAAUvF,IAAM,2BAAS,2BAChC6Q,QAASyE,EACTvI,KAAM1F,KAAKqtB,qBACX5jB,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOxB,UAAWA,EAAWgvB,WAAYA,U,GA9J3D5rB,aCJvCoT,KAAOC,OAAO,SACd,IAAMjU,GAAK,IAAKA,KACToH,G,KAAAA,OACDqV,GAASpY,GAAUP,KAAKW,OAExB2G,G,2MAEFxY,MAAM,CACF44B,MAAM,GACNlY,MAAM,GACNsZ,MAAM,G,EAQVT,kB,uCAAkB,WAAM1sB,GAAN,eAAA7I,EAAA,sEACKsG,GAAO,CAAC,KAAOuC,IADpB,OAEK,KADbnB,EADQ,QAEJrL,QACN,EAAK4R,SAAS,CAAC2mB,MAAMltB,EAAOvL,KAAK8Y,OAHvB,2C,wDAOlB+Q,kB,uCAAkB,WAAMnd,GAAN,qBAAA7I,EAAA,0DACX6I,EADW,iCAEUhH,EAAO,CAAC,SAAWgH,IAF7B,cAEJotB,EAFI,gBAGUp0B,EAAO,CAAC,KAAOgH,IAHzB,OAGJqtB,EAHI,OAIU,IAAjBD,EAAQ55B,QACDqgB,EAAMuZ,EAAQ95B,KACpB,EAAK8R,SAAS,CAACyO,WACO,IAAjBwZ,EAAQ75B,QACPqgB,EAAMwZ,EAAQ/5B,KACpB,EAAK8R,SAAS,CAACyO,WAEf,EAAKzO,SAAS,CAACyO,MAAM,KAXf,wBAcV,EAAKzO,SAAS,CAACyO,MAAM,KAdX,4C,wDAkBlByZ,S,uCAAS,WAAMttB,GAAN,2BAAA7I,EAAA,sEACe2G,GAAY,CAAC,KAAOkC,IADnC,cACCutB,EADD,gBAEgBpvB,GAAe,CAAC,OAAS6B,EAAM,OAAS,IAFxD,OAKL,GAHMwtB,EAFD,OAGDC,EAAS,EACTC,EAAM,EACU,IAAjBH,EAAQ/5B,OAEP,IADMm6B,EAAGJ,EAAQj6B,KAAK8Y,KACdvK,EAAE,EAAEA,EAAE8rB,EAAGztB,OAAO2B,IACpB4rB,GAAUE,EAAG9rB,GAAGgT,KAGH,IAAlB2Y,EAASh6B,SACFo6B,EAAGJ,EAASl6B,KAAK8Y,KACvBshB,EAAME,EAAG1tB,QAEb,EAAKkF,SAAS,CAAC+nB,MAAMM,EAASC,IAfzB,4C,0IAmBL7tB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEnB,EAAcyB,KAAKP,MAAnBlB,aADH,EAEgByB,KAAK1M,MAAlB0gB,EAFH,EAEGA,MAAMkY,EAFT,EAESA,MACPjO,EAAcjK,EAAM5K,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAE1lB,SAAxB,IAAmC0lB,EAAEvc,SAClEqrB,EAAcZ,EAAM9iB,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAExgB,aAAaiE,KAArC,IAA4Cuc,EAAEvc,SAC1ElB,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,sBAAUiE,EACN,kBAAC,GAAD,CAAMhJ,MAAM,4BACPrG,EAAkB,cAAc,CAC7BQ,aAAcxC,EAAamK,YAAYgM,KAAOnW,EAAamK,YAAY,cAAcgM,KAAOyI,GAAS,cACrGxc,MAAM,CACN,CACIC,UAAS,EAAKxJ,QAAQ,+BAJ7BmJ,CAQG,+BAGR,kBAAC,GAAD,eAAMqG,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAcxC,EAAaV,KAAKU,EAAaV,KAAKlF,IAAI,EACtDgI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,2CAH3BmJ,CAMI,wBACI4I,SAAUnJ,KAAKytB,SACftP,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,2BACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAK6sB,kBACfvO,gBAAiB,MAEpBwO,KAKRvuB,EAAaV,KAAO,KAAM,kBAAC,GAAD,eAAM+I,MAAM,gBAASgJ,GAE5CrP,EAAkB,QAAQ,CACtBQ,aAAaf,KAAK1M,MAAMg6B,MACxB3sB,MAAM,CACN,CAACC,UAAS,KAHdL,CAMI,uBAAOoM,UAAQ,MAIvB,kBAAC,GAAD,eAAM/F,MAAM,sBAAUgJ,GAElBrP,EAAkB,SAAS,CACvBQ,aAAaxC,EAAayvB,OAAOzvB,EAAayvB,OAAOr1B,IAAI,EACzDgI,MAAM,CACN,CAACC,UAAS,EAAKxJ,QAAQ,iDAH3BmJ,CAMI,wBACI4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,iCACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAKsd,kBACfgB,gBAAiB,MAEpBL,U,GAxIH3c,aAiJP,OAAKE,QAAL,CAAcsK,ICvJ7B4I,KAAOC,OAAO,SACd,IAAMjU,GAAK,IAAKA,KAGVutB,G,6LAQEjuB,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEnB,EAAcyB,KAAKP,MAAnBlB,aACAgC,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBACDqP,EAAe,CACjB5D,SAAS,CAACL,KAAK,GACfM,WAAW,CAACN,KAAK,KAErB,OACI,sBAAUiE,EACN,kBAAC,GAAD,CAAMhJ,MAAM,4BACPrG,EAAkB,cAAc,CAC7BQ,aAAcgE,GAAUxG,EAAamK,aACrC/H,MAAM,CACN,CACIC,UAAS,KAJhBL,CAQG,uBAAOoM,UAAQ,MAGvB,kBAAC,GAAD,eAAM/F,MAAM,gBAASgJ,GAEjBrP,EAAkB,OAAO,CACrBQ,aAAaxC,EAAaV,KAAK4D,KAC/Bd,MAAM,CACN,CAACC,UAAS,KAHdL,CAMI,uBAAOoM,UAAQ,MAIvB,kBAAC,GAAD,eAAM/F,MAAM,sBAAUgJ,GAElBrP,EAAkB,SAAS,CACvBQ,aAAaxC,EAAayvB,OAAOvsB,KACjCd,MAAM,CACN,CAACC,UAAS,KAHdL,CAMI,uBAAOoM,UAAQ,W,GApDdrL,aA4DV,OAAKE,QAAL,CAAcysB,ICxDvBnmB,GAAO,KAAOA,OACdpH,GAAK,IAAKA,KACRwnB,G,KAAAA,YAEFhC,G,2MAEF5yB,MAAM,CACF0gB,MAAM,GACNka,WAAW,GACXC,SAAS,GACTC,WAAW,GACXC,SAAS,I,EAMblI,QAAQ,WACJ,EAAK1mB,MAAMC,KAAKyO,cAChB,EAAK5I,SAAS,CACV2oB,WAAW,GACXC,SAAS,GACTC,WAAW,GACXC,SAAS,M,EAIjBjI,YAAY,WACR,EAAK3mB,MAAMC,KAAKC,gBAAe,SAACxH,EAAIyH,GAChC,EAAKH,MAAM4mB,cAAc,CACrBxoB,KAAK+B,EAAO/B,KACZmwB,OAAOpuB,EAAOouB,OACdr6B,OAAOiM,EAAOjM,OACdu6B,WAAW,EAAK56B,MAAM46B,WACtBC,SAAS,EAAK76B,MAAM66B,SACpBC,WAAW,EAAK96B,MAAM86B,WACtBC,SAAS,EAAK/6B,MAAM+6B,e,EAMhCC,cAAc,SAAC/pB,EAAM0kB,GACjB,IAAMiF,EAAWjF,EAAW,GACtBkF,EAASlF,EAAW,GAC1B,EAAK1jB,SAAS,CAAC2oB,aAAWC,c,EAG9BI,cAAc,SAAChqB,EAAM0kB,GACjB,IAAMmF,EAAWnF,EAAW,GACtBoF,EAASpF,EAAW,GAC1B,EAAK1jB,SAAS,CAAC6oB,aAAWC,c,EAG9B/Q,kB,uCAAkB,WAAMnd,GAAN,qBAAA7I,EAAA,0DACX6I,EADW,iCAEUhH,EAAO,CAAC,SAAWgH,IAF7B,cAEJotB,EAFI,gBAGUp0B,EAAO,CAAC,KAAOgH,IAHzB,OAGJqtB,EAHI,OAIU,IAAjBD,EAAQ55B,QACDqgB,EAAMuZ,EAAQ95B,KACpB,EAAK8R,SAAS,CAACyO,WACO,IAAjBwZ,EAAQ75B,QACPqgB,EAAMwZ,EAAQ/5B,KACpB,EAAK8R,SAAS,CAACyO,WAEf,EAAKzO,SAAS,CAACyO,MAAM,KAXf,wBAcV,EAAKzO,SAAS,CAACyO,MAAM,KAdX,4C,0IAmBdhU,KAAKP,MAAMsM,QAAQ/L,KAAKP,MAAMC,Q,+BAGzB,IACEa,EAAmBP,KAAKP,MAAMC,KAA9Ba,kBAED0d,EAAcje,KAAK1M,MAAM0gB,MAAM5K,KAAI,SAAA4U,GAAC,OAAI,kBAAC,GAAD,CAAQlb,IAAKkb,EAAErlB,KAAOqlB,EAAE1lB,SAAxB,IAAmC0lB,EAAEvc,SACnF,OACI,uBAAMjB,UAAU,4BACZ,wBAAKkL,OAAQ,IACT,wBAAKC,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,4BAEZrG,EAAkB,cAAc,CAChCQ,aAAa,IADbR,CAGQ,kBAAC,GAAD,CAAa4I,SAAUnJ,KAAKsuB,mBAKxC,wBAAK3iB,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,4BAEZrG,EAAkB,cAAc,CAChCQ,aAAa,IADbR,CAGQ,kBAAC,GAAD,CAAa4I,SAAUnJ,KAAKuuB,mBAKxC,wBAAK5iB,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,gBAEZrG,EAAkB,OAAO,CACzBQ,aAAa,IADbR,CAGI,+BAKR,wBAAKoL,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,4BAEZrG,EAAkB,SAAS,CAC3BQ,aAAa,IADbR,CAGI,4BA5CH,CAAC,CAAC,MAAQ,EAAE,MAAQ,sBAAO,CAAC,MAAQ,EAAE,MAAQ,uBA8CxB6I,KAAI,SAAA8U,GAAE,OAAE,kBAAC,GAAD,CAAQpb,IAAKob,EAAG/d,MAAOA,MAAO+d,EAAG/d,OAAQ+d,EAAGtX,cAQ/E,wBAAK+E,KAAM,GACP,kBAAC,GAAD,CAAM/E,MAAM,sBAEZrG,EAAkB,SAAS,CAC3BQ,aAAa,IADbR,CAGQ,wBACA4d,YAAU,EACVld,MAAO,CAAE+C,MAAO,QAChB7C,YAAY,iCACZid,WAAW,EACXC,cAAc,EACdnF,SAAUlZ,KAAKsd,kBACfgB,gBAAiB,MAEpBL,MAMT,wBAAKtS,KAAM,GACP,kBAAC,GAAD,CAAM1K,MAAO,CAAC4E,MAAM,UAChB,8BACI,uBAAQ5E,MAAO,CAACgI,aAAa,IAAKzV,KAAK,UAAUqQ,QAAS7D,KAAKomB,aAA/D,eAA8E,uBAAM5yB,KAAK,YACzF,uBAAQyN,MAAO,CAAEslB,WAAY,GAAK/yB,KAAK,SAASqQ,QAAS7D,KAAKmmB,SAAS,uBAAM3yB,KAAK,WAAlF,yB,GAzJPgd,iBAkKV,OAAKhP,QAAL,CAAc0kB,ICxKRsI,G,2MAEjBl7B,MAAM,CACFulB,MAAM,EACN5K,WAAU,EACVwgB,cAAa,EACb9gB,SAAQ,EACR+gB,cAAc,GACdC,WAAW,GACXh7B,QAAO,EACPq6B,OAAO,EACPnwB,KAAK,GACLqwB,WAAW,GACXC,SAAS,GACTC,WAAW,GACXC,SAAS,I,EAEbjhB,WAAW,WACP,EAAKC,QAAQ,CACb,CACIxK,MAAM,4BACNyK,UAAU,OACVC,OAAO,SAAC1P,GAAQ,OAAOA,EAAKL,aAAaiE,KAAK,IAAI5D,EAAK4D,OAE3D,CACIoB,MAAM,qBACNyK,UAAU,SACVtJ,MAAM,IACNuJ,OAAO,SAACygB,GAAU,OAAOA,EAAO11B,SAAS,IAAI01B,EAAOvsB,OAExD,CACIoB,MAAM,2BACNyK,UAAU,cACVtJ,MAAM,IACNuJ,OAAO,SAAC7E,GAAD,OAAe3D,GAAU2D,KAClC,CACE7F,MAAM,2BACNyK,UAAU,SACVtJ,MAAM,GACNuJ,OAAO,SAAC5Z,GACJ,OAAGA,EAEK,8BACI,wBAAKuN,MxEnDT,WwEmDI,uBAKJ,8BACI,wBAAKA,MxE5DX,WwE4DM,yBAKlB,CACE2B,MAAM,2BACNyK,UAAU,cACVtJ,MAAM,IACNuJ,OAAO,SAACqhB,GAAD,OAAe7pB,GAAU6pB,KAEpC,CACI/rB,MAAM,eACNmB,MAAM,GACNuJ,OAAO,SAAChP,GAAD,OACP,8BACI,kBAACqN,GAAD,CAAS/H,QAAS,kBAAI,EAAK2J,WAAWjP,MAD1C,eAEI,kBAACsN,GAAD,CAAWhI,QAAS,kBAAI,EAAKgrB,mBAAmBtwB,W,EAQ5DuwB,iB,uCAAiB,WAAMtW,GAAN,uCAAAlhB,EAAA,6DACb,EAAKkhB,QAAQA,GACA,EACb,EAAKjT,SAAS,CAACoI,SAAQ,IAHV,EAIqD,EAAKra,MAAjEK,EAJO,EAIPA,OAAOkK,EAJA,EAIAA,KAAKmwB,EAJL,EAIKA,OAAOE,EAJZ,EAIYA,WAAWC,EAJvB,EAIuBA,SAASC,EAJhC,EAIgCA,WAAWC,EAJ3C,EAI2CA,SAClDN,EAAG,CACLtV,QAJS,EAKTD,UACAI,S1F/FW,G0FgGXjlB,SACAkK,OACAqwB,aACAC,WACAC,aACAC,YAEDL,IAAQD,EAAGC,OAAOA,GAhBR,SAiBM1vB,GAAeyvB,GAjBrB,OAiBT/uB,EAjBS,OAkBb,EAAKuG,SAAS,CAACoI,SAAQ,IACJ,IAAhB3O,EAAOrL,QAAY,EACCqL,EAAOvL,KAAnBolB,EADU,EACVA,MAAMtM,EADI,EACJA,KACb,EAAKhH,SAAS,CAACmpB,cAAcniB,EAAKsM,YAElC,EAAKtT,SAAS,CAACmpB,cAAc,KAC7Bt3B,EAAA,EAAQH,MAAM+H,EAAOtL,MAxBZ,4C,wDA4BjBsa,QAAQ,WACJ,EAAKzP,aAAa,KAClB,EAAKgH,SAAS,CACV0I,WAAU,K,EAIlBJ,MAAM,SAACtP,GACH,MAAM,CACFsF,QAAQ,SAAAiK,GACJ,EAAKvI,SAAS,CACVopB,WAAWpwB,O,EAM3BwwB,wBAAwB,WACpB,EAAKrvB,KAAKC,eAAV,uCAAyB,WAAMxH,EAAIyH,GAAV,iBAAAtI,EAAA,yDACjBa,EADiB,oBAEjB,EAAKoN,SAAS,CAAC0I,WAAU,OACnB1P,EAAaqB,GACH0tB,MAAM,GAJL,gBAKbl2B,EAAA,EAAQH,MAAM,4BALD,8BAObsH,EAAamK,YAAY3D,GAAUnF,EAAM,aACzC,EAAKF,KAAKyO,cACP,EAAK5P,eACJA,EAAa5F,IAAI,EAAK4F,aAAa5F,KAEvC4F,EAAa5K,QAAO,EAZP,UAaM6K,GAAgBD,GAbtB,QAcM,KADbS,EAbO,QAcHrL,QACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKo7B,iBAAiB,IAEtB13B,EAAA,EAAQH,MAAM+H,EAAOtL,KAlBZ,4CAAzB,oCAAAsM,KAAA,iB,EAyBJwN,WAAW,SAACjP,GACR,EAAKA,aAAaA,EAClB,EAAKgH,SAAS,CAAC0I,WAAU,K,EAG7B+gB,WAAW,WACP,EAAKzpB,SAAS,CACVkpB,cAAa,K,EAIrBI,mBAAmB,SAACtwB,GAChB,KAAMiH,QAAQ,CACV3C,MAAM,uCACN6C,KAAK,WAAD,4BAAC,4BAAApO,EAAA,sEACkBmH,GAAcF,EAAa5F,KAD7C,OAEkB,KADbqG,EADL,QAESrL,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKo7B,iBAAiB,IAJzB,2CAAD,kDAAC,M,EAUbzI,cAAc,SAACc,GACX,EAAK5hB,SAAS,CACV5R,OAAOwzB,EAAWxzB,OAClBq6B,OAAO7G,EAAW6G,OAClBnwB,KAAKspB,EAAWtpB,KAChBqwB,WAAW/G,EAAW+G,WACtBC,SAAShH,EAAWgH,SACpBC,WAAWjH,EAAWiH,WACtBC,SAASlH,EAAWkH,WAEtB,WACE,EAAKS,iBAAiB,EAAKtW,a,EAInCyW,W,sBAAW,8BAAA33B,EAAA,sDACDy2B,EAAG,EAAKz6B,MAAMq7B,YAAY,GAC1Bt5B,EAAI,GACP04B,GAAIA,EAAGlwB,KAAK4D,KACX,KAAM+D,QAAQ,CACV3C,MAAM,uCACN6C,KAAK,WAAD,4BAAC,8BAAApO,EAAA,6DACDjC,EAAI1B,QAAO,EACPu7B,EAAU,IAAI1qB,KAClBnP,EAAIu5B,YAAY7pB,GAAUmqB,GAC1B75B,EAAIsD,IAAIo1B,EAAGp1B,IAJV,SAKkB6F,GAAgBnJ,GALlC,OAMkB,KADb2J,EALL,QAMSrL,SACNyD,EAAA,EAAQiX,QAAQrP,EAAOtL,KACvB,EAAKo7B,iBAAiB,IARzB,2CAAD,kDAAC,KAaT13B,EAAA,EAAQH,MAAM,gEAElB,EAAKsO,SAAS,CAACkpB,cAAa,IArBrB,2C,oFA0BPzuB,KAAKoN,e,0CAGLpN,KAAK8uB,iBAAiB,K,+BAEjB,IAAD,SACgF9uB,KAAK1M,MAAlFo7B,EADH,EACGA,cAAc/gB,EADjB,EACiBA,QAAQM,EADzB,EACyBA,UAAUwgB,EADnC,EACmCA,aAAa3C,EADhD,EACgDA,cAAc6C,EAD9D,EAC8DA,WAAW9V,EADzE,EACyEA,MACvEta,EAAayB,KAAKzB,cAAc,GAChCsE,EACD,8BACI,uBAAQrP,KAAK,UAAUqQ,QAAS7D,KAAKgO,SAAS,uBAAMxa,KAAK,YAAzD,gBADJ,eAEI,uBAAQA,KAAK,UAAUqQ,QAAS7D,KAAKgvB,WAAYriB,UAAWgiB,EAAWh2B,KAAKg2B,EAAWh7B,QAAQ,uBAAMH,KAAK,aAA1G,iBAET,OACI,wBAAMqP,MAAOA,GACT,kBAAC,GAAD,CAAYkJ,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAO2mB,cAAermB,KAAKqmB,gBACnE,wBACAlX,UAAQ,EACRwC,KAAK,QACLvC,OAAO,MACPzB,QAASA,EACT0B,WAAYqf,EACZrhB,QAASrN,KAAKqN,QACdiC,WAAY,CACRT,QAAQ7O,KAAKwY,QACbjJ,gB1FxPG,G0FyPHoH,iBAAgB,EAChBkC,QACA1P,SAASnJ,KAAKusB,UAElB/c,aAAc,CACdhc,KAAK,QACLic,gBAAgB,CAACkf,EAAWh2B,KAC5B+W,SAAS,SAACnR,GACN,EAAKgH,SAAS,CACVopB,WAAWpwB,MAInBsP,MAAO7N,KAAK6N,QAEZ,wBACEhL,MAAOtE,EAAa5F,IAAM,2BAAS,2BACnC6Q,QAASyE,EACTvI,KAAM1F,KAAK+uB,wBACXtlB,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAAC0I,WAAU,MAG3B,kBAAC,GAAD,CAASlC,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOnB,aAAcA,EAAcutB,cAAeA,KAE3F,wBACEjpB,MAAO,eACP2G,QAASilB,EACT/oB,KAAM1F,KAAKivB,WACXxlB,SAAU,WACN,EAAK/J,KAAKyO,cACV,EAAK5I,SAAS,CAACkpB,cAAa,MAG9B,kBAAC,GAAD,CAAY1iB,QAAS,SAACrM,GAAQ,EAAKA,KAAKA,GAAOnB,aAAcowB,U,GA/QvCrtB,aCLpC6tB,I,mNAEFC,YAAY,WACR,EAAK3vB,MAAMd,aAAa,sBACxB,EAAKc,MAAMK,QAAQC,QAAQ,e,wEAK3B,OACI,wBAAKS,UAAU,aACX,wBAAKmL,KAAM,GAAInL,UAAU,mBACzB,wBAAKmL,KAAM,GAAInL,UAAU,mBACrB,qCACA,oGACA,6BACI,uBAAQhN,KAAK,UAAUqQ,QAAS7D,KAAKovB,aAArC,mC,GAhBD9tB,cAgCjBS,GAAsB,CAACpD,iBAEdgE,eAJS,KAMpBZ,GAFWY,CAGbwsB,ICPME,G,KAAAA,OAAQC,G,KAAAA,OAAQC,G,KAAAA,MAAOC,G,KAAAA,QAEzBC,G,iLAGE,IAAM58B,EAAKmN,KAAKP,MAAM5M,KACtB,IAAIA,IAAOA,EAAK8F,IACZ,OAAO,kBAAC,IAAD,CAAU2H,GAAG,WAEpBzN,EAAK0P,OACLvC,KAAKP,MAAMZ,SAEf,IAAM0D,EAAM1P,EAAK0P,MACXjK,EAASzF,EAAKyF,SAChB+E,EAAK2C,KAAKP,MAAMgE,SAASC,SAO7B,OANsC,IAAnCrG,EAAKgG,QAAQ,sBACZhG,EAAK,oBAEwB,IAA9BA,EAAKgG,QAAQ,iBACZhG,EAAK,eAEK,UAAX/E,GAAqBiK,EAAM4P,SAAS9U,IAAc,MAAPA,EAK1C,wBAAQmD,UAAU,eACd,kBAAC6uB,GAAD,CAAQ7uB,UAAU,mBACd,kBAAC,GAAD,OAEJ,wBAAQA,UAAU,sBACd,kBAAC+uB,GAAD,CAAO/uB,UAAU,2BACb,kBAAC,GAAD,OAEJ,wBAAQA,UAAU,4BACd,kBAACgvB,GAAD,CAAShvB,UAAU,oCACf,kBAAC,GAAD,CAAcA,UAAU,yCACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUyf,OAAK,EAACxd,KAAK,IAAInC,GAAG,eAC5B,kBAAC,IAAD,CAAOjD,KAAK,aAAa2iB,UAAWzU,KACpC,kBAAC,IAAD,CAAOlO,KAAK,SAAS2iB,UAAW7S,KAChC,kBAAC,IAAD,CAAO9P,KAAK,cAAc2iB,UAAWhP,KACrC,kBAAC,IAAD,CAAO3T,KAAK,QAAQ2iB,UAAWrM,KAC/B,kBAAC,IAAD,CAAOtW,KAAK,mBAAmB2iB,UAAW5J,KAC1C,kBAAC,IAAD,CAAO/Y,KAAK,mBAAmB2iB,UAAWD,KAC1C,kBAAC,IAAD,CAAO1iB,KAAK,uBAAuB2iB,UAAWc,KAC9C,kBAAC,IAAD,CAAOzjB,KAAK,iBAAiB2iB,UAAWuC,KACxC,kBAAC,IAAD,CAAOllB,KAAK,aAAa2iB,UAAWwD,KACpC,kBAAC,IAAD,CAAOnmB,KAAK,YAAY2iB,UAAWoE,KACnC,kBAAC,IAAD,CAAO/mB,KAAK,kBAAkB2iB,UAAW2E,KACzC,kBAAC,IAAD,CAAOtnB,KAAK,eAAe2iB,UAAWgF,KACtC,kBAAC,IAAD,CAAO3nB,KAAK,mBAAmB2iB,UAAW2F,KAC1C,kBAAC,IAAD,CAAOtoB,KAAK,cAAc2iB,UAAWwH,KACrC,kBAAC,IAAD,CAAOnqB,KAAK,QAAQ2iB,UAAWmI,KAC/B,kBAAC,IAAD,CAAO9qB,KAAK,QAAQ2iB,UAAW+J,KAC/B,kBAAC,IAAD,CAAO1sB,KAAK,cAAc2iB,UAAW2K,KACrC,kBAAC,IAAD,CAAOttB,KAAK,cAAc2iB,UAAWkL,KACrC,kBAAC,IAAD,CAAO7tB,KAAK,WAAW2iB,UAAWuL,KAClC,kBAAC,IAAD,CAAOluB,KAAK,gBAAgB2iB,UAAW6L,KACvC,kBAAC,IAAD,CAAOxuB,KAAK,QAAQ2iB,UAAW4M,KAC/B,kBAAC,IAAD,CAAOvvB,KAAK,aAAa2iB,UAAWiN,KACpC,kBAAC,IAAD,CAAO5vB,KAAK,gBAAgB2iB,UAAWwO,KACvC,kBAAC,IAAD,CAAOnxB,KAAK,cAAc2iB,UAAWpL,KACrC,kBAAC,IAAD,CAAOoL,UAAWmP,OAG1B,kBAACG,GAAD,CAAQ9uB,UAAU,mCACd,kBAAC,GAAD,WA7ChBpJ,EAAA,EAAQH,MAAM,kCACP,kBAAC,IAAD,CAAUqJ,GAAG,oB,GArBZgB,aAyELqB,gBACX,SAAArP,GAAK,MAAG,CAACT,KAAKS,EAAMT,QACpB,CAACgM,WAFU8D,CAGb8sB,IC7GmBC,G,iLAEb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOryB,KAAK,SAAS2iB,UAAW3gB,KAChC,kBAAC,IAAD,CAAOhC,KAAK,IAAI2iB,UAAWyP,W,GANdnuB,aCKbquB,QACW,cAA7Bn4B,OAAOiM,SAASmsB,UAEe,UAA7Bp4B,OAAOiM,SAASmsB,UAEhBp4B,OAAOiM,SAASmsB,SAASC,MACvB,2D,gBCNNC,IAASviB,OACL,kBAAC,IAAD,CAAUza,MAAOA,GACb,kBAAC,GAAD,OACU6E,SAASo4B,eAAe,SDoHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMt5B,MAAK,SAAAu5B,GACjCA,EAAaC,iB","file":"static/js/main.9c913afe.chunk.js","sourcesContent":["import store from 'store'\r\n\r\nconst USER_KEY='user_key'\r\nexport default{\r\n    saveUser(user){store.set(USER_KEY,user)},\r\n    getUser(){return store.get(USER_KEY)||{}},\r\n    removeUser(){store.remove(USER_KEY)}   \r\n}\r\n","\r\nimport storeUtils from '../../utils/storeUtils'\r\nimport {\r\n    SET_BREAD_CRUM,\r\n    RECEIVE_USER,\r\n    RESET_USER,\r\n    GET_DEPARTMENT,\r\n    COU_DEPARTMENT,\r\n    DEL_DEPARTMENT,\r\n    GET_GROUP,\r\n    COU_GROUP,\r\n    DEL_GROUP,\r\n    GET_USER,\r\n    COU_USER,\r\n    DEL_USER,\r\n    REC_PWD\r\n } from '../actiontypes'\r\n\r\n//管理面包屑\r\nconst initBreadCrum='仪表盘'\r\nexport const breadCrum=(state=initBreadCrum,action)=>{\r\n    switch(action.type){\r\n        case SET_BREAD_CRUM:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//管理登陆用户\r\nconst initUser=storeUtils.getUser()\r\nexport const user=(state=initUser,action)=>{\r\n    switch(action.type){\r\n        case RECEIVE_USER:\r\n            return action.data\r\n        case RESET_USER:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//管理部门\r\nexport const departmentReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//管理组\r\nexport const groupReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_GROUP:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_GROUP:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_GROUP:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//管理用户\r\nexport const userReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_USER:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_USER:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case REC_PWD:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","/*\r\n根据旧state和action生成返回新state\r\n*/\r\nimport {combineReducers} from 'redux'\r\n\r\nimport {\r\n    departmentReducer,\r\n    breadCrum,\r\n    user,\r\n    groupReducer,\r\n    userReducer\r\n} from './account-reducer'\r\n\r\nimport { chartsReducer } from './analysis-reducer'\r\n\r\nimport { timelineReducer } from './timeline-reducer'\r\n\r\nimport { \r\n    applicationSoftwareReducer,\r\n    problemCategoryReducer,\r\n    processedRecordReducer,\r\n    printerRepairReducer,\r\n    cartridayReducer\r\n } from './oapm-reducer'\r\n\r\nimport { \r\n    devicecategoryReducer,\r\n    devicemodelReducer,\r\n    installlocationReducer,\r\n    deviceinfoReducer,\r\n} from './informationdevice-reducer'\r\n\r\nimport { settingReducer } from './setting-reducer'\r\n\r\nimport { toolsReducer } from './tools-reducer'\r\n\r\nimport { \r\n    bookcategoryReducer,\r\n    bookReducer,\r\n    bookstockReducer,\r\n    borrowrecordReducer,\r\n} from './bms-reducer'\r\n\r\nexport default combineReducers({\r\n    departmentReducer,\r\n    breadCrum,\r\n    user,\r\n    groupReducer,\r\n    userReducer,\r\n    timelineReducer,\r\n    chartsReducer,\r\n    applicationSoftwareReducer,\r\n    problemCategoryReducer,\r\n    processedRecordReducer,\r\n    printerRepairReducer,\r\n    cartridayReducer,\r\n    devicecategoryReducer,\r\n    devicemodelReducer,\r\n    installlocationReducer,\r\n    deviceinfoReducer,\r\n    settingReducer,\r\n    toolsReducer,\r\n    bookcategoryReducer,\r\n    bookReducer,\r\n    bookstockReducer,\r\n    borrowrecordReducer,\r\n})","/*\r\naction type常量名称\r\n*/\r\n\r\n//设置面包屑\r\nexport const SET_BREAD_CRUM='set_bread_crum'\r\n\r\n//收集用户信息\r\nexport const RECEIVE_USER='receive_user'\r\n\r\n//重置用户信息\r\nexport const RESET_USER='reset_user'\r\n\r\n/**accoutn**/\r\n//获取部门\r\nexport const GET_DEPARTMENT='get_department'\r\n//新增修改部门\r\nexport const COU_DEPARTMENT='cou_department'\r\n//删除部门\r\nexport const DEL_DEPARTMENT='del_department'\r\n//获取组\r\nexport const GET_GROUP='get_group'\r\n//新增修改组\r\nexport const COU_GROUP='cou_group'\r\n//删除组\r\nexport const DEL_GROUP='del_group'\r\n//获取用户\r\nexport const GET_USER='get_user'\r\n//新增修改用户\r\nexport const COU_USER='cou_user'\r\n//删除用户\r\nexport const DEL_USER='del_user'\r\n//重置密码\r\nexport const REC_PWD='rec_pwd'\r\n\r\n/**timeline**/\r\n//获取时间轴\r\nexport const GET_TIMELINE='get_timeline'\r\n//新增修改时间轴\r\nexport const COU_TIMELINE='cou_timeline'\r\n//删除时间轴\r\nexport const DEL_TIMELINE='del_timeline'\r\n\r\n/**analysis**/\r\n//住院科室\r\nexport const GET_ZYKS='getzyks'\r\n//门诊科室\r\nexport const GET_MZKS='getmzks'\r\n//获取最近30天问题记录\r\nexport const CHART_PROCESSEDRECORD_DAY='chart_processedrecord_day'\r\n//获取问题类别比例\r\nexport const CHART_PROCESSEDRECORD='chart_processedrecord'\r\n//获取设备类别比例\r\nexport const CHART_DEVICE='chart_device'\r\n//获取全院治疗情况\r\nexport const CHART_QYZLQK='chart_qyzlqk'\r\n//获取部门医师治疗情况\r\nexport const CHART_BMYSZLQK='chart_bmyszlqk'\r\n//获取全院诊断情况\r\nexport const CHART_QYZDQK='chart_qyzdqk'\r\n//获取部门医师诊断情况\r\nexport const CHART_BMYSZDQK='chart_bmyszdqk'\r\n\r\n/**oapm**/\r\n//获取信息模块\r\nexport const GET_APPWARE='get_appware'\r\n//新增修改信息模块\r\nexport const COU_APPWARE='cou_appware'\r\n//删除信息模块\r\nexport const DEL_APPWAREE='del_appware'\r\n//获取问题类别\r\nexport const GET_PROBLEMCATEGORY='get_problemcategory'\r\n//新增修改问题类别\r\nexport const COU_PROBLEMCATEGORY='cou_problemcategory'\r\n//删除问题类别\r\nexport const DEL_PROBLEMCATEGORY='del_problemcategory'\r\n//获取处理记录\r\nexport const GET_PROCESSEDRECORD='get_processedrecord'\r\n//新增修改处理记录\r\nexport const COU_PROCESSEDRECORD='cou_processedrecord'\r\n//删除处理记录\r\nexport const DEL_PROCESSEDRECORD='del_processedrecord'\r\n//导出处理记录excel\r\nexport const EXPORT_PROCESSEDRECORD_EXCEL='export_processedrecord_excel'\r\n//上传图片\r\nexport const UPLOAD_IMG='upload_img'\r\n//获取设备维修\r\nexport const GET_PRINTERREPAIR='get_printerrepair'\r\n//新增修改设备维修\r\nexport const COU_PRINTERREPAIR='cou_printerrepair'\r\n//删除设备维修\r\nexport const DEL_PRINTERREPAIR='del_printerrepair'\r\n//审核设备维修\r\nexport const REVIEWED_PRINTERREPAIR='reviewed_printerrepair'\r\n//获取硒鼓加粉\r\nexport const GET_CARTRIDAY='get_cartriday'\r\n//新增修改硒鼓加粉\r\nexport const COU_CARTRIDAY='cou_cartriday'\r\n//删除硒鼓加粉\r\nexport const DEL_CARTRIDAY='del_cartriday'\r\n//审核硒鼓加粉\r\nexport const REVIEWED_CARTRIDAY='reviewed_cartriday'\r\n\r\n/**informationdevice**/\r\n//获取设备类别\r\nexport const GET_DEVICECATEGORY='get_devicecategory'\r\n//新增修改设备类别\r\nexport const COU_DEVICECATEGORY='cou_devicecategory'\r\n//删除设备类别\r\nexport const DEL_DEVICECATEGORY='del_devicecategory'\r\n//获取设备型号\r\nexport const GET_DEVICEMODEL='get_devicemodel'\r\n//新增修改设备型号\r\nexport const COU_DEVICEMODEL='cou_devicemodel'\r\n//删除设备型号\r\nexport const DEL_DEVICEMODEL='del_devicemodel'\r\n//获取安装地点\r\nexport const GET_INSTALLLOCATION='get_installlocation'\r\n//新增修改安装地点\r\nexport const COU_INSTALLLOCATION='cou_installlocation'\r\n//删除安装地点\r\nexport const DEL_INSTALLLOCATION='del_installlocation'\r\n//获取设备信息\r\nexport const GET_DEVICEINFO='get_deviceinfo'\r\n//新增修改设备信息\r\nexport const COU_DEVICEINFO='cou_deviceinfo'\r\n//删除设备信息\r\nexport const DEL_DEVICEINFO='del_deviceinfo'\r\n\r\n/**setting**/\r\n//备份数据\r\nexport const BACKUP_DATA='backup_data'\r\n//清除访问日志\r\nexport const CLEAR_ACCLOG='clear_acclog'\r\n//清除错误日志\r\nexport const CLEAR_ERRLOG='clear_errlog'\r\n\r\n/**tools**/\r\n//查看中联表空间\r\nexport const DISPLAY_ZLTS='display_zlts'\r\n//查看体检系统表空间\r\nexport const DISPLAY_TJTS='display_tjts'\r\n\r\n/**bms**/\r\n//获取图书类别\r\nexport const GET_BOOKCATEGORY='get_bookcategory'\r\n//新增修改图书类别\r\nexport const COU_BOOKCATEGORY='cou_bookcategory'\r\n//删除图书类别\r\nexport const DEL_BOOKCATEGORY='del_bookcategory'\r\n//获取图书目录\r\nexport const GET_BOOK='get_book'\r\n//新增修改图书目录\r\nexport const COU_BOOK='cou_book'\r\n//删除图书目录\r\nexport const DEL_BOOK='del_book'\r\n//获取图书库存\r\nexport const GET_BOOKSTOCK='get_bookstock'\r\n//新增修改图书库存\r\nexport const COU_BOOKSTOCK='cou_bookstock'\r\n//删除图书库存\r\nexport const DEL_BOOKSTOCK='del_bookstock'\r\n//获取借阅记录\r\nexport const GET_BORROWRECORD='get_borrowrecord'\r\n//新增修改借阅记录\r\nexport const COU_BORROWRECORD='cou_borrowrecord'\r\n//删除借阅记录\r\nexport const DEL_BORROWRECORD='del_borrowrecord'\r\n//归还图书\r\nexport const RETURN_BOOK='return_book'","import {\r\n    GET_TIMELINE,\r\n    COU_TIMELINE,\r\n    DEL_TIMELINE,\r\n} from '../actiontypes'\r\n\r\n//管理时间轴\r\nexport const timelineReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_TIMELINE:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_TIMELINE:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_TIMELINE:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\n//管理chart\r\nexport const chartsReducer=(state={},action)=>{\r\n    if(action.type){\r\n        return {\r\n            ...state,\r\n            data:action.data\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n","import {\r\n    GET_APPWARE,\r\n    COU_APPWARE,\r\n    DEL_APPWAREE,\r\n    GET_PROBLEMCATEGORY,\r\n    COU_PROBLEMCATEGORY,\r\n    DEL_PROBLEMCATEGORY,\r\n    GET_PROCESSEDRECORD,\r\n    COU_PROCESSEDRECORD,\r\n    DEL_PROCESSEDRECORD,\r\n    EXPORT_PROCESSEDRECORD_EXCEL,\r\n    UPLOAD_IMG,\r\n    GET_PRINTERREPAIR,\r\n    COU_PRINTERREPAIR,\r\n    DEL_PRINTERREPAIR,\r\n    REVIEWED_PRINTERREPAIR,\r\n    GET_CARTRIDAY,\r\n    COU_CARTRIDAY,\r\n    DEL_CARTRIDAY,\r\n    REVIEWED_CARTRIDAY,\r\n} from '../actiontypes'\r\n\r\n//管理信息模块\r\nexport const applicationSoftwareReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_APPWARE:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_APPWARE:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_APPWAREE:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//问题类别\r\nexport const problemCategoryReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_PROBLEMCATEGORY:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_PROBLEMCATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_PROBLEMCATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理处理记录\r\nexport const processedRecordReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_PROCESSEDRECORD:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_PROCESSEDRECORD:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_PROCESSEDRECORD:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case EXPORT_PROCESSEDRECORD_EXCEL:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case UPLOAD_IMG:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理设备维修\r\nexport const printerRepairReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_PRINTERREPAIR:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_PRINTERREPAIR:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_PRINTERREPAIR:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case REVIEWED_PRINTERREPAIR:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理硒鼓加粉\r\nexport const cartridayReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_CARTRIDAY:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_CARTRIDAY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_CARTRIDAY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case REVIEWED_CARTRIDAY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_DEVICECATEGORY,\r\n    COU_DEVICECATEGORY,\r\n    DEL_DEVICECATEGORY,\r\n    GET_DEVICEMODEL,\r\n    COU_DEVICEMODEL,\r\n    DEL_DEVICEMODEL,\r\n    GET_INSTALLLOCATION,\r\n    COU_INSTALLLOCATION,\r\n    DEL_INSTALLLOCATION,\r\n    GET_DEVICEINFO,\r\n    COU_DEVICEINFO,\r\n    DEL_DEVICEINFO\r\n} from '../actiontypes'\r\n\r\n//管理设备类别\r\nexport const devicecategoryReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_DEVICECATEGORY:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_DEVICECATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_DEVICECATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理设备型号\r\nexport const devicemodelReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_DEVICEMODEL:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_DEVICEMODEL:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_DEVICEMODEL:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理安装地点\r\nexport const installlocationReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_INSTALLLOCATION:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_INSTALLLOCATION:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_INSTALLLOCATION:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理设备信息\r\nexport const deviceinfoReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_DEVICEINFO:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_DEVICEINFO:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_DEVICEINFO:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    BACKUP_DATA,\r\n    CLEAR_ACCLOG,\r\n    CLEAR_ERRLOG,\r\n} from '../actiontypes'\r\n\r\n//管理时间轴\r\nexport const settingReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case BACKUP_DATA:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case CLEAR_ACCLOG:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case CLEAR_ERRLOG:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    DISPLAY_ZLTS,\r\n    DISPLAY_TJTS,\r\n} from '../actiontypes'\r\n\r\n//管理时间轴\r\nexport const toolsReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case DISPLAY_ZLTS:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case DISPLAY_TJTS:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_BOOKCATEGORY,\r\n    COU_BOOKCATEGORY,\r\n    DEL_BOOKCATEGORY,\r\n    GET_BOOK,\r\n    COU_BOOK,\r\n    DEL_BOOK,\r\n    GET_BOOKSTOCK,\r\n    COU_BOOKSTOCK,\r\n    DEL_BOOKSTOCK,\r\n    GET_BORROWRECORD,\r\n    COU_BORROWRECORD,\r\n    DEL_BORROWRECORD,\r\n    RETURN_BOOK\r\n} from '../actiontypes'\r\n\r\n//管理图书类别\r\nexport const bookcategoryReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_BOOKCATEGORY:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_BOOKCATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_BOOKCATEGORY:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理图书\r\nexport const bookReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_BOOK:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_BOOK:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_BOOK:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理图书库存\r\nexport const bookstockReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_BOOKSTOCK:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_BOOKSTOCK:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_BOOKSTOCK:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//管理借阅记录\r\nexport const borrowrecordReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case GET_BORROWRECORD:\r\n            return {\r\n                ...state,\r\n                data:action.data\r\n            }\r\n        case COU_BORROWRECORD:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case DEL_BORROWRECORD:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        case RETURN_BOOK:\r\n            return {\r\n                ...state,\r\n                msg:action.msg,\r\n                status:action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","/*\r\n\r\n*/\r\nimport{createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n//import {componseWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducers'\r\n\r\nexport default createStore(reducer,applyMiddleware(thunk))","//const csrftoken=()=>{fetch(HOST+'/account/get_token/')}\r\n\r\nconst obj2String=(obj, arr = [], idx = 0)=>{\r\n    for(let item in obj) {\r\n        arr[idx++] = [item, obj[item]]\r\n    }\r\n    return new URLSearchParams(arr).toString()\r\n}\r\n\r\nconst fetchreq=(url,data={},method='GET')=>{\r\n    let opt={}\r\n    if(method === 'GET'){\r\n        url += '?' + obj2String(data)\r\n        opt={\r\n            method: method.toUpperCase(),\r\n            credentials:'include',\r\n            headers: new Headers({\r\n                //'X-csrftoken':csrftoken,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n    }else{\r\n        let para=JSON.stringify(data);\r\n        opt={\r\n            method: method.toUpperCase(),\r\n            mode:'cors',\r\n            credentials:'include',\r\n            body:para,\r\n            headers: new Headers({\r\n                //'X-csrftoken':csrftoken,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n    }\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(url,opt)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            //resolve( eval('(' + res + ')') )\r\n            resolve(JSON.parse(res))\r\n        }).catch(error=>{\r\n            console.log(error.message)\r\n        })\r\n    })  \r\n}\r\nexport default fetchreq","import {message} from 'antd'\r\nconst obj2String=(obj, arr = [], idx = 0)=>{\r\n    for(let item in obj) {\r\n        arr[idx++] = [item, obj[item]]\r\n    }\r\n    return new URLSearchParams(arr).toString()\r\n}\r\nconst fetchdownload=async(url,data={})=>{\r\n    let opt={}\r\n    url += '?' + obj2String(data)\r\n    opt={\r\n        method:'GET',\r\n        credentials:'include',\r\n        headers: new Headers({\r\n            //'X-csrftoken':csrftoken,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }\r\n    const obj=await fetch(url,opt)\r\n        .then(res=>res.blob()\r\n        .then(blob=>{\r\n            //return res\r\n            const url = window.URL.createObjectURL(blob)\r\n            const a = document.createElement('a')\r\n            a.href = url\r\n            const fileName = res.headers.get('Content-Disposition').split('=')[1]\r\n            a.download = decodeURIComponent(fileName)\r\n            a.click()\r\n        }))\r\n        .catch(err=>{message.error(err)})\r\n    return obj;\r\n}\r\nexport default fetchdownload","export const PAGE_SIZE=10\r\nexport const BASE_IMG_URL='http://192.168.201.135:8000/media/img/'\r\nexport const FILELIST_LENGTH=5\r\nexport const HOST=''\r\nexport const SITENAME='HISX'\r\nexport const ACCESS_LOG_PATH='/var/log/nginx/hisx_access.log'\r\nexport const ERROR_LOG_PATH='/var/log/nginx/hisx_error.log'\r\nexport const DB_BACKUP_PATH='/var/www/hisxdata/'","import fetchreq from './datareq'\r\nimport fetchdownload from './downloadreq'\r\nimport {HOST} from '../utils/constants'\r\n/**account**/\r\n//登陆\r\nexport const cLogin=(username,password)=>fetchreq(HOST+'/api/account/auth/',{username,password},'POST')\r\n//重置密码\r\nexport const cReset=(username)=>fetchreq(HOST+'/api/account/auth/',{username},'PATCH')\r\n\r\n//读取组\r\nexport const rGroups=(group)=>fetchreq(HOST+'/api/account/group/',group)\r\n//增加或更新组\r\nexport const couGroup=(group)=>fetchreq(HOST+'/api/account/group/',group,(group._id ? 'PATCH' : 'POST'))\r\n//删除组\r\nexport const dGroup=(groupId)=>fetchreq(HOST+'/api/account/group/',{'_id':groupId},'DELETE')\r\n\r\n//读取部门\r\nexport const rDepartments=(department)=>fetchreq(HOST+'/api/account/department/',department)\r\n//增加或更新部门\r\nexport const couDepartment=(department)=>fetchreq(HOST+'/api/account/department/',department,(department._id ? 'PATCH' : 'POST'))\r\n//删除部门\r\nexport const dDepartment=(departmentId)=>fetchreq(HOST+'/api/account/department/',{'_id':departmentId},'DELETE')\r\n\r\n//读取用户\r\nexport const rUsers=(user)=>fetchreq(HOST+'/api/account/user/',user)\r\n//增加或更新用户\r\nexport const couUser=(user)=>fetchreq(HOST+'/api/account/user/',user,(user._id ? 'PATCH' : 'POST'))\r\n//删除用户\r\nexport const dUser=(userId)=>fetchreq(HOST+'/api/account/user/',{'_id':userId},'DELETE')\r\n\r\n/**informationdevice**/\r\n//读取设备类别\r\nexport const rDeviceCategorys=(devicecategory)=>fetchreq(HOST+'/api/informationdevice/devicecategory/',devicecategory)\r\n//增加或更新设备类别\r\nexport const couDeviceCategory=(devicecategory)=>fetchreq(HOST+'/api/informationdevice/devicecategory/',devicecategory,(devicecategory._id ? 'PATCH' : 'POST'))\r\n//删除设备类别\r\nexport const dDeviceCategory=(devicecategoryId)=>fetchreq(HOST+'/api/informationdevice/devicecategory/',{'_id':devicecategoryId},'DELETE')\r\n\r\n//读取设备型号\r\nexport const rDeviceModels=(devicemodel)=>fetchreq(HOST+'/api/informationdevice/devicemodel/',devicemodel)\r\n//增加或更新设备型号\r\nexport const couDeviceModel=(devicemodel)=>fetchreq(HOST+'/api/informationdevice/devicemodel/',devicemodel,(devicemodel._id ? 'PATCH' : 'POST'))\r\n//删除设备型号\r\nexport const dDeviceModel=(devicemodeld)=>fetchreq(HOST+'/api/informationdevice/devicemodel/',{'_id':devicemodeld},'DELETE')\r\n\r\n//读取安装位置\r\nexport const rInstallLocations=(installlocation)=>fetchreq(HOST+'/api/informationdevice/installlocation/',installlocation)\r\n//增加或更新安装位置\r\nexport const couInstallLocation=(installlocation)=>fetchreq(HOST+'/api/informationdevice/installlocation/',installlocation,(installlocation._id ? 'PATCH' : 'POST'))\r\n//删除安装位置\r\nexport const dInstallLocation=(installlocationId)=>fetchreq(HOST+'/api/informationdevice/installlocation/',{'_id':installlocationId},'DELETE')\r\n\r\n//读取设备信息\r\nexport const rDeviceInfos=(deviceinfo)=>fetchreq(HOST+'/api/informationdevice/deviceinfo/',deviceinfo)\r\n//增加或更新设备信息\r\nexport const couDeviceInfo=(deviceinfo)=>fetchreq(HOST+'/api/informationdevice/deviceinfo/',deviceinfo,(deviceinfo._id ? 'PATCH' : 'POST'))\r\n//删除设备信息\r\nexport const dDeviceInfo=(deviceinfoId)=>fetchreq(HOST+'/api/informationdevice/deviceinfo/',{'_id':deviceinfoId},'DELETE')\r\n\r\n//读取设备拓扑\r\nexport const rDeviceTopos=(devicetopo)=>fetchreq(HOST+'/api/informationdevice/devicetopo/',devicetopo)\r\n//增加或更新设备拓扑\r\nexport const couDeviceTopo=(devicetopo)=>fetchreq(HOST+'/api/informationdevice/devicetopo/',devicetopo,(devicetopo._id ? 'PATCH' : 'POST'))\r\n//删除设备拓扑\r\nexport const dDeviceTopo=(devicetopoId)=>fetchreq(HOST+'/api/informationdevice/devicetopo/',{'_id':devicetopoId},'DELETE')\r\n\r\n/**oapm**/\r\n//读取问题类别\r\nexport const rProblemCategorys=(problemcategory)=>fetchreq(HOST+'/api/oapm/problemcategory/',problemcategory)\r\n//增加或更新问题类别\r\nexport const couProblemCategory=(problemcategory)=>fetchreq(HOST+'/api/oapm/problemcategory/',problemcategory,(problemcategory._id ? 'PATCH' : 'POST'))\r\n//删除问题类别\r\nexport const dProblemCategory=(problemcategoryId)=>fetchreq(HOST+'/api/oapm/problemcategory/',{'_id':problemcategoryId},'DELETE')\r\n\r\n//读取运维记录\r\nexport const rProcessedRecords=(ProcessedRecord)=>fetchreq(HOST+'/api/oapm/processedrecord/',ProcessedRecord)\r\n//增加或更新运维记录\r\nexport const couProcessedRecord=(processedrecord)=>fetchreq(HOST+'/api/oapm/processedrecord/',processedrecord,(processedrecord._id ? 'PATCH' : 'POST'))\r\n//删除运维记录\r\nexport const dProcessedRecord=(processedrecordId)=>fetchreq(HOST+'/api/oapm/processedrecord/',{'_id':processedrecordId},'DELETE')\r\n//上传图片\r\nexport const cImg=(name)=>fetchreq(HOST+'/api/oapm/img/',{name},'POST')\r\n//导出excel\r\nexport const eProcessedRecord=()=>fetchdownload(HOST+'/api/oapm/export_ProcessedRecord_excel/')\r\n\r\n//读取打印机维修\r\nexport const rPrinterRepairs=(printerrepair)=>fetchreq(HOST+'/api/oapm/printerrepair/',printerrepair)\r\n//增加或更新打印机维修\r\nexport const couPrinterRepair=(printerrepair)=>fetchreq(HOST+'/api/oapm/printerrepair/',printerrepair,(printerrepair._id ? 'PATCH' : 'POST'))\r\n//删除打印机维修\r\nexport const dPrinterRepair=(printerrepairId)=>fetchreq(HOST+'/api/oapm/printerrepair/',{'_id':printerrepairId},'DELETE')\r\n//审核打印机维修\r\nexport const rePrinterRepair=(handlerId)=>fetchreq(HOST+'/api/oapm/printerrepair/',{'handler':handlerId},'PUT')\r\n\r\n\r\n//读取硒鼓加粉\r\nexport const rCartridays=(cartriday)=>fetchreq(HOST+'/api/oapm/cartriday/',cartriday)\r\n//增加或更新硒鼓加粉\r\nexport const couCartriday=(cartriday)=>fetchreq(HOST+'/api/oapm/cartriday/',cartriday,(cartriday._id ? 'PATCH' : 'POST'))\r\n//删除硒鼓加粉\r\nexport const dCartriday=(cartridayId)=>fetchreq(HOST+'/api/oapm/cartriday/',{'_id':cartridayId},'DELETE')\r\n//审核硒鼓加粉\r\nexport const reCartriday=(handlerId)=>fetchreq(HOST+'/api/oapm/cartriday/',{'_handler':handlerId},'PUT')\r\n\r\n\r\n\r\n//读取应用软件\r\nexport const rApplicationSoftwares=(applicationsoftware)=>fetchreq(HOST+'/api/oapm/applicationsoftware/',applicationsoftware)\r\n//增加或更新应用软件\r\nexport const couApplicationSoftware=(applicationsoftware)=>fetchreq(HOST+'/api/oapm/applicationsoftware/',applicationsoftware,(applicationsoftware._id ? 'PATCH' : 'POST'))\r\n//删除应用软件\r\nexport const dApplicationSoftware=(applicationsoftwareId)=>fetchreq(HOST+'/api/oapm/applicationsoftware/',{'_id':applicationsoftwareId},'DELETE')\r\n\r\n/**timeline**/\r\n//读取时间轴\r\nexport const rTimeLines=(timeline)=>fetchreq(HOST+'/api/timeline/',timeline)\r\n//增加或更新时间轴\r\nexport const couTimeLine=(timeline)=>fetchreq(HOST+'/api/timeline/',timeline,(timeline._id ? 'PATCH' : 'POST'))\r\n//删除时间轴\r\nexport const dTimeLine=(timelineId)=>fetchreq(HOST+'/api/timeline/',{'_id':timelineId},'DELETE')\r\n\r\n/**analysis**/\r\n//住院科室\r\nexport const getzyks=()=>fetchreq(HOST+'/api/analysis/getzyks/')\r\n//门诊科室\r\nexport const getmzks=()=>fetchreq(HOST+'/api/analysis/getmzks/')\r\n//获取最近30天问题记录\r\nexport const chart_processedrecord_day=()=>fetchreq(HOST+'/api/analysis/chart_processedrecord_day/')\r\n//获取问题类别比例\r\nexport const chart_processedrecord=()=>fetchreq(HOST+'/api/analysis/chart_processedrecord/')\r\n//获取设备类别比例\r\nexport const chart_device=()=>fetchreq(HOST+'/api/analysis/chart_device/')\r\n//获取全院治疗情况\r\nexport const chart_qyzlqk=(startDate,endDate)=>fetchreq(HOST+'/api/analysis/chart_qyzlqk/',{startDate:startDate,endDate:endDate})\r\n//获取部门医师治疗情况\r\nexport const chart_bmyszlqk=(department,startDate,endDate)=>fetchreq(HOST+'/api/analysis/chart_bmyszlqk/',{department:department,startDate:startDate,endDate:endDate})\r\n//获取全院诊断情况\r\nexport const chart_qyzdqk=(startDate,endDate)=>fetchreq(HOST+'/api/analysis/chart_qyzdqk/',{startDate:startDate,endDate:endDate})\r\n//获取部门医师诊断情况\r\nexport const chart_bmyszdqk=(department,startDate,endDate)=>fetchreq(HOST+'/api/analysis/chart_bmyszdqk/',{department:department,startDate:startDate,endDate:endDate})\r\n\r\n/**tools**/\r\n//获取zlhis表空间使用情况\r\nexport const getzlhists=()=>fetchreq(HOST+'/api/analysis/getzlhists/')\r\n//获取体检系统表空间使用情况\r\nexport const gettjxtts=()=>fetchreq(HOST+'/api/analysis/gettjxtts/')\r\n//获取zlhis某个表空间使用情况\r\nexport const getzlhistssub=(tsname)=>fetchreq(HOST+'/api/analysis/getzlhistssub/',{tsname:tsname})\r\n//获取体检系统某个表空间使用情况\r\nexport const gettjxttssub=(tsname)=>fetchreq(HOST+'/api/analysis/gettjxttssub/',{tsname:tsname})\r\n//查询his锁表情况\r\nexport const gethislocktables=()=>fetchreq(HOST+'/api/analysis/gethislocktables/')\r\n//his解锁表\r\nexport const hisunlocktables=(ss)=>fetchreq(HOST+'/api/analysis/hisunlocktables/',{ss:ss},'POST')\r\n//查询体检系统锁表情况\r\nexport const gettjxtlocktables=()=>fetchreq(HOST+'/api/analysis/gettjxtlocktables/')\r\n//体检系统解锁表\r\nexport const tjxtunlocktables=(ss)=>fetchreq(HOST+'/api/analysis/tjxtunlocktables/',{ss:ss},'POST')\r\n\r\n/**setting**/\r\n//清理session\r\nexport const delovertimesession=()=>fetchreq(HOST+'/api/systemsetting/delovertimesession/')\r\n//备份\r\nexport const database_backup=(path)=>fetchreq(HOST+'/api/systemsetting/database_backup/',{'path':path})\r\n//清理日志\r\nexport const clear_nginxlog=(path)=>fetchreq(HOST+'/api/systemsetting/clear_nginxlog/',{'path':path})\r\n\r\n/**bms**/\r\n//读取图书类别\r\nexport const rBookCategorys=(bookcategory)=>fetchreq(HOST+'/api/bms/bookcategory/',bookcategory)\r\n//增加或更新图书类别\r\nexport const couBookCategory=(bookcategory)=>fetchreq(HOST+'/api/bms/bookcategory/',bookcategory,(bookcategory._id ? 'PATCH' : 'POST'))\r\n//删除图书类别\r\nexport const dBookCategory=(bookcategoryId)=>fetchreq(HOST+'/api/bms/bookcategory/',{'_id':bookcategoryId},'DELETE')\r\n\r\n//读取图书\r\nexport const rBooks=(book)=>fetchreq(HOST+'/api/bms/book/',book)\r\n//增加或更新图书\r\nexport const couBook=(book)=>fetchreq(HOST+'/api/bms/book/',book,(book._id ? 'PATCH' : 'POST'))\r\n//删除图书\r\nexport const dBook=(bookId)=>fetchreq(HOST+'/api/bms/book/',{'_id':bookId},'DELETE')\r\n\r\n//读取图书库存\r\nexport const rBookStocks=(bookstock)=>fetchreq(HOST+'/api/bms/bookstock/',bookstock)\r\n//增加或更新图书库存\r\nexport const couBookStock=(bookstock)=>fetchreq(HOST+'/api/bms/bookstock/',bookstock,(bookstock._id ? 'PATCH' : 'POST'))\r\n//删除图书库存\r\nexport const dBookStock=(bookstockId)=>fetchreq(HOST+'/api/bms/bookstock/',{'_id':bookstockId},'DELETE')\r\n\r\n//读取借阅记录\r\nexport const rBorrowRecords=(borrowrecord)=>fetchreq(HOST+'/api/bms/borrowrecord/',borrowrecord)\r\n//增加或更新借阅记录\r\nexport const couBorrowRecord=(borrowrecord)=>fetchreq(HOST+'/api/bms/borrowrecord/',borrowrecord,(borrowrecord._id ? 'PATCH' : 'POST'))\r\n//删除借阅记录\r\nexport const dBorrowRecord=(borrowrecordId)=>fetchreq(HOST+'/api/bms/borrowrecord/',{'_id':borrowrecordId},'DELETE')\r\n","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    SET_BREAD_CRUM,\r\n    RECEIVE_USER,\r\n    RESET_USER,\r\n    GET_DEPARTMENT,\r\n    COU_DEPARTMENT,\r\n    DEL_DEPARTMENT,\r\n    GET_GROUP,\r\n    COU_GROUP,\r\n    DEL_GROUP,\r\n    GET_USER,\r\n    COU_USER,\r\n    DEL_USER,\r\n    REC_PWD\r\n} from '../actiontypes'\r\n\r\nimport storeUtils from '../../utils/storeUtils'\r\nimport {\r\n    rDepartments,\r\n    couDepartment,\r\n    dDepartment,\r\n    cLogin,\r\n    rGroups,\r\n    couGroup,\r\n    dGroup,\r\n    rUsers,\r\n    couUser,\r\n    dUser,\r\n    cReset\r\n} from '../../api'\r\n\r\n//设置面包屑同步action\r\nexport const setBreadCrum= breadCrum =>({type:SET_BREAD_CRUM,data:breadCrum})\r\n\r\n//接收用户同步action\r\nexport const receiveUser= user =>({type:RECEIVE_USER,data:user})\r\n//登录\r\n\r\nexport const login=(username,password)=>{\r\n    return async dispatch=>{\r\n        const result=await cLogin(username,password)\r\n        if(result.status===1){\r\n            const{_id,username,name,group}=result.data[0]\r\n            const arr=[]\r\n            for(let i=0;i<group.length;i++){\r\n                const g={'_id':group[i]}\r\n                const res=await rGroups(g)\r\n                if(res.status===1){\r\n                    for(let j=0;j<res.data.length;j++){\r\n                        let temp=res.data[j].menu.split(',')\r\n                        for(let k=0;k<temp.length;k++){\r\n                            arr.push(temp[k])\r\n                        }\r\n                    } \r\n                }                \r\n            }\r\n            const menus=Array.from(new Set(arr))\r\n            const user={_id,username,name,group,menus}\r\n            storeUtils.saveUser(user)\r\n            dispatch(receiveUser(user))\r\n            \r\n        }else{\r\n            console.log(result.msg)\r\n        }\r\n    }\r\n}\r\n\r\n//登出\r\nexport const logout=()=>{\r\n    //react onbeforeunload 关闭浏览器时执行\r\n    storeUtils.removeUser()\r\n    return {type:RESET_USER}\r\n}\r\n\r\n//获取部门\r\nconst rDepartmentsAction = data =>({\r\n    type:GET_DEPARTMENT,\r\n    data\r\n})\r\nexport const rDeps = department => async dispatch => {\r\n    const result = await rDepartments(department)\r\n    if(result.status === 1){\r\n        dispatch(rDepartmentsAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改部门\r\nconst couDepartmentsAction = (msg,status) =>({\r\n    type:COU_DEPARTMENT,\r\n    msg,\r\n    status\r\n})\r\nexport const couDep = department => async dispatch=>{\r\n    const result=await couDepartment(department)\r\n    dispatch(couDepartmentsAction(result.msg,result.status))\r\n}\r\n\r\n//删除部门\r\nconst dDepartmentsAction = (msg,status) =>({\r\n    type:DEL_DEPARTMENT,\r\n    msg,\r\n    status\r\n})\r\nexport const dDep = departmentId => async dispatch=>{\r\n    const result = await dDepartment(departmentId)\r\n    dispatch(dDepartmentsAction(result.msg,result.status))\r\n}\r\n\r\n//获取组\r\nconst rGroupsAction = data =>({\r\n    type:GET_GROUP,\r\n    data\r\n})\r\nexport const rGro = group => async dispatch => {\r\n    const result = await rGroups(group)\r\n    if(result.status === 1){\r\n        const data = result.data\r\n        dispatch(rGroupsAction(data))\r\n    }\r\n  }\r\n\r\n//新增修改组\r\nconst couGroupsAction = (msg,status) =>({\r\n    type:COU_GROUP,\r\n    msg,\r\n    status\r\n})\r\nexport const couGro = group => async dispatch=>{\r\n    const result=await couGroup(group)\r\n    dispatch(couGroupsAction(result.msg,result.status))\r\n}\r\n\r\n//删除组\r\nconst dGroupsAction = (msg,status) =>({\r\n    type:DEL_GROUP,\r\n    msg,\r\n    status\r\n})\r\nexport const dGro = groupId => async dispatch=>{\r\n    const result = await dGroup(groupId)\r\n    dispatch(dGroupsAction(result.msg,result.status))\r\n}\r\n\r\n//获取用户\r\nconst rUserAction = data =>({\r\n    type:GET_USER,\r\n    data\r\n})\r\nexport const rUs = user => async dispatch => {\r\n    const result = await rUsers(user)\r\n    if(result.status === 1){\r\n        const data = result.data\r\n        dispatch(rUserAction(data))\r\n    }\r\n  }\r\n\r\n//新增修改用户\r\nconst couUsersAction = (msg,status) =>({\r\n    type:COU_USER,\r\n    msg,\r\n    status\r\n})\r\nexport const couUs = user => async dispatch=>{\r\n    const result=await couUser(user)\r\n    dispatch(couUsersAction(result.msg,result.status))\r\n}\r\n\r\n//删除用户\r\nconst dUsersAction = (msg,status) =>({\r\n    type:DEL_USER,\r\n    msg,\r\n    status\r\n})\r\nexport const dUs = userId => async dispatch=>{\r\n    const result = await dUser(userId)\r\n    dispatch(dUsersAction(result.msg,result.status))\r\n}\r\n\r\n//重置密码\r\nconst recPwdAction=(msg,status)=>({\r\n    type:REC_PWD,\r\n    msg,\r\n    status\r\n})\r\nexport const recPwd=user=>async dispatch=>{\r\n    const result=await cReset(user)\r\n    dispatch(recPwdAction(result.msg,result.status))\r\n}","import React,{Component} from 'react';\r\nimport { Form, Icon, Input, Button,message } from 'antd';\r\nimport {Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/actions/account-action'\r\nimport {SITENAME} from '../../utils/constants'\r\n\r\nimport './index.less'\r\n\r\nclass Login extends Component {\r\n\r\n    handleSubmit=e=> {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async(err, values) => {\r\n            if (!err) {\r\n                const{username,password}=values\r\n                //调用分发异步actions函数\r\n                this.props.login(username,password)\r\n                //this.props.history.replace('/')\r\n            }else{\r\n                message.error('校验失败!')\r\n                //\r\n            }\r\n            this.props.history.replace('/')\r\n        });\r\n    }\r\n\r\n    validatePwd=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback('密码不能为空！')\r\n        }else if(value.length<6){\r\n            callback('密码不能小于6位！')\r\n        }else if(value.length>20){\r\n            callback('密码不能大于20位！')\r\n        }/*else if(/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback('密码必须为英文数字下划线组成！')\r\n        }*/else{\r\n            callback()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const user=this.props.user\r\n        if(user && user._id){\r\n            return <Redirect to='/'/>\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n            <div className=\"login\">\r\n                <section className=\"login-content\">\r\n                    <h2>{SITENAME}</h2>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: '用户名不能为空!' },\r\n                            { min: 3, message: '用户名不少于3位!' },\r\n                            { max: 20, message: '用户名不大于20位!' }],initialValue:'U095'\r\n                        })(\r\n                            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"用户名\" />\r\n                        )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                        rules: [{ validator:this.validatePwd }],\r\n                        })(\r\n                            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\"\r\n                            placeholder=\"密码\" />\r\n                        )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WarpLogin=Form.create({ name: 'login'})(Login)\r\n\r\nWarpLogin.propTypes={\r\n    user:PropTypes.object.isRequired,\r\n    login:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user:state.user}\r\n}\r\nconst mapDispatchToProps =  {login}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(WarpLogin)\r\n","const menuList=[\r\n{\r\n    title:'仪表盘',\r\n    key:'/dashboard',\r\n    icon:'dashboard',\r\n    isPublic:true\r\n},\r\n{\r\n    title:'帐户管理',\r\n    key:'/account',\r\n    icon:'contacts',\r\n    children:[\r\n    {\r\n        title:'组管理',\r\n        key:'/group',\r\n        icon:'team'\r\n    },\r\n    {\r\n        title:'部门管理',\r\n        key:'/department',\r\n        icon:'apartment'\r\n    },\r\n    {\r\n        title:'用户管理',\r\n        key:'/user',\r\n        icon:'user'\r\n    },\r\n    ]\r\n},\r\n{\r\n    title:'时间轴',\r\n    key:'/timeline',\r\n    icon:'history',\r\n},\r\n{\r\n    title:'信息设备',\r\n    key:'/informationdevice',\r\n    icon:'laptop',\r\n    children:[\r\n    {\r\n        title:'设备类别',\r\n        key:'/devicecategory',\r\n        icon:'unordered-list'\r\n    },\r\n    {\r\n        title:'设备型号',\r\n        key:'/devicemodel',\r\n        icon:'barcode'\r\n    },\r\n    {\r\n        title:'安装位置',\r\n        key:'/installlocation',\r\n        icon:'environment'\r\n    },\r\n    {\r\n        title:'设备列表',\r\n        key:'/deviceinfo',\r\n        icon:'menu'\r\n    },\r\n    {\r\n        title:'设备拓扑',\r\n        key:'/devicetopo',\r\n        icon:'apartment'\r\n    },\r\n    ]\r\n},\r\n{\r\n    title:'运维记录',\r\n    key:'/oapm',\r\n    icon:'ordered-list',\r\n    children:[\r\n    {\r\n        title:'信息化模块',\r\n        key:'/applicationsoftWare',\r\n        icon:'appstore'\r\n    },{\r\n        title:'问题类别',\r\n        key:'/problemcategory',\r\n        icon:'block'\r\n    },\r\n    {\r\n        title:'处理记录',\r\n        key:'/processedrecord',\r\n        icon:'unordered-list'\r\n    },{\r\n        title:'设备维修',\r\n        key:'/printerrepair',\r\n        icon:'tool'\r\n    },{\r\n        title:'硒鼓加粉',\r\n        key:'/cartriday',\r\n        icon:'download'\r\n    }\r\n    ]\r\n},\r\n{\r\n    title:'辅助工具',\r\n    key:'/tools',\r\n    icon:'tool',\r\n    children:[\r\n    {\r\n        title:'查看表空间',\r\n        key:'/tablespace',\r\n        icon:'percentage'\r\n    },{\r\n        title:'查看锁表情况',\r\n        key:'/locktables',\r\n        icon:'lock'\r\n    }]\r\n},\r\n{\r\n    title:'数据分析',\r\n    key:'/analysis',\r\n    icon:'line-chart',\r\n    children:[\r\n    {\r\n        title:'住院医师治疗情况',\r\n        key:'/zlqk',\r\n        icon:'radar-chart'\r\n    },{\r\n        title:'门诊医师治疗情况',\r\n        key:'/zdqk',\r\n        icon:'bar-chart'\r\n    }]\r\n},\r\n{\r\n    title:'图书管理',\r\n    key:'/bms',\r\n    icon:'snippets',\r\n    children:[\r\n    {\r\n        title:'图书类别',\r\n        key:'/bookcategory',\r\n        icon:'block'\r\n    },{\r\n        title:'图书目录',\r\n        key:'/book',\r\n        icon:'unordered-list'\r\n    },{\r\n        title:'图书入库',\r\n        key:'/bookstock',\r\n        icon:'book'\r\n    },{\r\n        title:'图书借阅',\r\n        key:'/borrowrecord',\r\n        icon:'form'\r\n    }]\r\n},\r\n{\r\n    title:'系统设置',\r\n    key:'/setting',\r\n    icon:'setting',\r\n},\r\n]\r\nexport default  menuList\r\n","import React,{Component} from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { Menu, Icon} from 'antd'\r\n\r\nimport './index.less'\r\n\r\nimport menuList from '../../config/menuConfig'\r\nimport {setBreadCrum} from '../../redux/actions/account-action'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nclass SiderBar extends Component{\r\n\r\n    hasAuth = item =>{\r\n        const {key,isPublic}=item\r\n        const menus=this.props.user.menus\r\n        const username=this.props.user.username\r\n        if(username==='admin' ||isPublic||menus.indexOf(key)!==-1){\r\n            return true\r\n        }else if(item.children){\r\n            return !!!item.children.find(child=>menus.indexOf(child.key!==-1))\r\n        }\r\n        return false\r\n    }\r\n    \r\n    /*mapMenuNodes=menuList=>{\r\n        const path=this.props.location.pathname\r\n        return menuList.map(item=>{\r\n            if(this.hasAuth(item)){\r\n                if(!item.children){\r\n                    //判断item是否当前对于的item，更新redux中BreadCrum状态\r\n                    if(item.key===path||path.indexOf(item.key)===0){\r\n                        this.props.setBreadCrum(item.title)\r\n                    }\r\n                    return (\r\n                        <Menu.Item key={item.key} >\r\n                            <Link to={item.key} onClick={()=>this.props.setBreadCrum(item.title)}>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                }else{\r\n                    //const cItem=item.children.find(cItem=>cItem.key===path)\r\n                    //产品路径有子类,将路径改为父类,菜单自动展开\r\n                    //const cItem=item.children.find(cItem=>path.indexOf(cItem.key===0))\r\n                    //if(cItem){\r\n                    //    this.openKey=item.key\r\n                    //}\r\n                    return(\r\n                        <SubMenu key={item.key} title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }>\r\n                        {this.mapMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    }*/\r\n\r\n    reduceMenuNodes=menuList=>{\r\n        const path=this.props.location.pathname\r\n        return menuList.reduce((pre,item)=>{\r\n            if(this.hasAuth(item)){\r\n                //pre添加<Menu.Item>\r\n                if(!item.children){\r\n                    if(item.key===path||path.indexOf(item.key)===0){\r\n                        this.props.setBreadCrum(item.title)\r\n                    }\r\n                    pre.push((\r\n                        <Menu.Item key={item.key} >\r\n                            <Link to={item.key} onClick={()=>this.props.setBreadCrum(item.title)}>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    ))\r\n                }else{\r\n                    //pre添加<SubMenu>\r\n                    pre.push((\r\n                        <SubMenu key={item.key} title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }>\r\n                        {this.reduceMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    ))\r\n                }\r\n            }\r\n            return pre\r\n        },[])\r\n    }\r\n\r\n    componentWillMount(){\r\n        //this.menuNodes=this.mapMenuNodes(menuList)\r\n        this.menuNodes=this.reduceMenuNodes(menuList)\r\n    }\r\n    render(){\r\n        let path=this.props.location.pathname\r\n        //产品路径有子类,将路径改为父类,菜单自动选中\r\n        if(path.indexOf('/processedrecord')===0){\r\n            path='/processedrecord'\r\n        }\r\n        if(path.indexOf('/deviceinfo')===0){\r\n            path='/deviceinfo'\r\n        }\r\n        const openKey=this.openKey\r\n        return(\r\n            <div className=\"siderbar\" >\r\n                <Menu \r\n                mode='vertical' \r\n                style={{ width: '100%'}} \r\n                selectedKeys={[path]}\r\n                defaultOpenKeys={[openKey]}\r\n                >\r\n                    {this.menuNodes}                    \r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {setBreadCrum}\r\n)(withRouter(SiderBar))","import React from 'react'\r\n\r\nimport './index.less'\r\n\r\nexport default function LinkBtn(props){\r\n    return(\r\n        <button {...props} className=\"linkbtn\" ></button>\r\n    )\r\n}","export function formateDate(time){\r\n    if(!time) return ''\r\n    let date=new Date(time)\r\n    return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()\r\n    +' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds() \r\n}\r\n\r\nexport function shortDate(time){\r\n    if(!time) return ''\r\n    let date=new Date(time)\r\n    return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()\r\n}\r\n\r\nexport function formateYear(time){\r\n    if(!time) return ''\r\n    let date=new Date(time)\r\n    return date.getFullYear()\r\n}\r\n\r\n//获取当月号数\r\nexport function mGetDate(){\r\n     let date = new Date()\r\n     let year = date.getFullYear()\r\n     let month = date.getMonth()+1\r\n     let d = new Date(year, month, 0)\r\n     return d.getDate()\r\n}\r\n\r\nexport function get30Days(){\r\n    function addDate(dd,dadd){\r\n        let a = new Date(dd)\r\n        a = a.valueOf()\r\n        a = a + dadd * 24 * 60 * 60 * 1000\r\n        a = new Date(a)\r\n        return a\r\n    }\r\n    let now = new Date();\r\n    let dataTitle = [];//保存获取到的日期\r\n    for(let i=0;i<30;i++){\r\n        let year=now.getFullYear()\r\n        let month = (now.getMonth()+1)<10?'0'+(now.getMonth()+1).toString():(now.getMonth()+1)\r\n        dataTitle[i]=(year+\"-\"+month+\"-\"+now.getDate())\r\n        now = addDate(month+\"/\"+now.getDate()+\"/\"+now.getFullYear(),-1)\r\n    }\r\n    return dataTitle.reverse()\r\n}\r\n\r\n//根据某年某月计算出具体日期\r\nexport function getDaysInMonth(year, month) {\r\n  const daysOfMonth = []\r\n  month = parseInt(month, 10)\r\n  const lastDayOfMonth = new Date(year, month, 0).getDate()\r\n  for (let i = 1; i <= lastDayOfMonth; i++) {\r\n    if (i < 10) {\r\n      daysOfMonth.push(\"0\" + i) //判断是部否小于10，如果小于加0，，例如“01”\r\n    } else {\r\n      daysOfMonth.push(i+\"\")\r\n    }\r\n  }\r\n  return daysOfMonth\r\n}\r\n\r\n//根据某年某月计算出具体日期\r\nexport function getDateInMonth(year, month) {\r\n  const daysOfMonth = []\r\n  month = parseInt(month, 10)\r\n  const lastDayOfMonth = new Date(year, month, 0).getDate()\r\n  for (let i = 1; i <= lastDayOfMonth; i++) {\r\n    if (i < 10) {\r\n      daysOfMonth.push(year+\"-\"+month+\"-\"+\"0\" + i)\r\n    } else {\r\n      daysOfMonth.push(year+\"-\"+month+\"-\"+i)\r\n    }\r\n  }\r\n  return daysOfMonth\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Modal,Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkBtn from '../../components/linkbtn'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {SITENAME} from '../../utils/constants'\r\nimport {logout} from '../../redux/actions/account-action'\r\n\r\nimport './index.less'\r\n\r\n\r\nclass HeaderBar extends Component{\r\n    state={\r\n        currentTime:formateDate(Date.now())\r\n    }\r\n    getTime=()=>{\r\n        this.intervalId=setInterval(()=>{\r\n            const currentTime=formateDate(Date.now())\r\n            this.setState({currentTime:currentTime})\r\n        },1000)\r\n    }\r\n    \r\n    logout=()=>{\r\n        Modal.confirm({\r\n            content:'确定退出吗?',\r\n            onOk:()=>{\r\n                this.props.logout()\r\n            }\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getTime()\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalId)\r\n    }\r\n    render(){\r\n        const {currentTime} =this.state\r\n        const username=this.props.user.username\r\n        return(\r\n            <div className=\"header\">\r\n                    \r\n                    <div className=\"header-left\">\r\n                        <Link to='/'>\r\n                            <span>&reg;{SITENAME}</span>\r\n                        </Link>\r\n                    </div>\r\n                <div className=\"header-right\">\r\n                    <span>{currentTime}&nbsp;&nbsp;欢迎,</span>\r\n                    <span>{username}</span>\r\n                    <LinkBtn onClick={this.logout}><Icon type=\"logout\" style={{color:'#479761'}}/></LinkBtn>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {logout}\r\n)(HeaderBar)","import React,{Component} from 'react';\r\nimport {withRouter,Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {Icon} from 'antd'\r\n\r\nimport './index.less'\r\n\r\nclass BreadCrumBar extends Component{\r\n    \r\n    render(){\r\n        const title=this.props.breadCrum\r\n        return(\r\n            <div className=\"breadcrum\">\r\n                <span>后台管理/{title}</span>\r\n                <Link to='/setting'>\r\n                <Icon \r\n                type=\"setting\" \r\n                style={{float:'right',fontSize:'20px',lineHeight:'40px',marginRight:'10px'}}\r\n                />\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({breadCrum:state.breadCrum}),\r\n    {}\r\n)(withRouter(BreadCrumBar))","import React,{Component} from 'react'\r\n\r\nimport {SITENAME} from '../../utils/constants'\r\n\r\nimport './index.less'\r\nexport default class FooterBar extends Component{\r\n    constructor() {\r\n        super()\r\n        let thisdate=new Date(),date=thisdate.getFullYear()\r\n        this.state={\r\n            date:date\r\n        }\r\n    }\r\n    render(){\r\n        let devdate='2020',copyrightdate=''\r\n        if(this.state.date.toString() === devdate){\r\n            copyrightdate=this.state.date\r\n        }else{\r\n            copyrightdate=devdate+' - '+this.state.date\r\n        }\r\n        return(\r\n            <div className=\"footerbar\">\r\n                <span>&copy; {SITENAME} &trade; {copyrightdate}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport {chart_processedrecord_day} from '../../../api'\r\n\r\n\r\nexport default class ChartPRD extends Component{\r\n    state={\r\n        legenddata:[],\r\n        xdate:[],\r\n        seriesdata:[]\r\n    }\r\n    \r\n    getOption=(legenddata,xdate,seriesdata)=>{\r\n        return{\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: '#6a7985'\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                data:legenddata\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    name:'时间',\r\n                    boundaryGap: false,\r\n                    data: xdate\r\n                }\r\n            ],\r\n            yAxis: {\r\n                type: 'value',\r\n                name:'数量',\r\n                minorTick: {\r\n                    show: true\r\n                },\r\n                minorSplitLine: {\r\n                    show: true\r\n                }\r\n            },\r\n            series: seriesdata\r\n        }\r\n    }\r\n    initData=async()=>{\r\n        //console.time('计时器')\r\n        const temp=await chart_processedrecord_day()\r\n        this.setState({\r\n            xdate:temp.xdate,\r\n            legenddata:temp.legenddata,\r\n            seriesdata:temp.seriesdata\r\n        })\r\n        //console.timeEnd('计时器')\r\n    }\r\n    componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        \r\n        const{legenddata,xdate,seriesdata}=this.state\r\n        const bartitle='近期每日各类问题量'\r\n        return(\r\n            <Card title={bartitle}>\r\n                <ReactEcharts option={this.getOption(legenddata,xdate,seriesdata)}/>\r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    GET_TIMELINE,\r\n    COU_TIMELINE,\r\n    DEL_TIMELINE,\r\n} from '../actiontypes'\r\n\r\nimport {\r\n    rTimeLines,\r\n    couTimeLine,\r\n    dTimeLine,\r\n} from '../../api'\r\n\r\n\r\n//获取时间轴\r\nconst rTimeLinesAction = data =>({\r\n    type:GET_TIMELINE,\r\n    data\r\n})\r\nexport const rTls = timeline => async dispatch => {\r\n    const result = await rTimeLines(timeline)\r\n    if(result.status === 1){\r\n        dispatch(rTimeLinesAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改时间轴\r\nconst couTimeLineAction = (msg,status) =>({\r\n    type:COU_TIMELINE,\r\n    msg,\r\n    status\r\n})\r\nexport const couTl = timeline => async dispatch=>{\r\n    const result=await couTimeLine(timeline)\r\n    dispatch(couTimeLineAction(result.msg,result.status))\r\n}\r\n\r\n//删除时间轴\r\nconst dTimeLineAction = (msg,status) =>({\r\n    type:DEL_TIMELINE,\r\n    msg,\r\n    status\r\n})\r\nexport const dTl = timelineId => async dispatch=>{\r\n    const result = await dTimeLine(timelineId)\r\n    dispatch(dTimeLineAction(result.msg,result.status))\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Button,Timeline,Select,Icon,Typography,Modal} from 'antd'\r\n\r\nimport {rTls} from '../../../redux/actions/timeline-action'\r\nimport {shortDate,formateYear} from '../../../utils/dateUtils'\r\n\r\nconst Option=Select.Option\r\nconst { Text } = Typography\r\n\r\nclass DTimeLine extends Component{\r\n    state={\r\n        isShow:false,\r\n        reverse: true,\r\n        years:[],\r\n        tls:[],\r\n        ytls:[]\r\n    }\r\n    \r\n    handleClick = () => {\r\n        this.setState({ reverse: !this.state.reverse });\r\n    }\r\n    \r\n    selectYear=value=>{\r\n        const ytls=[]\r\n        if(value!=='all'){\r\n            this.state.tls.forEach(tl=>{\r\n                if(tl.create_time.substring(0, 4)===value.toString()){\r\n                    ytls.push(tl)\r\n                }\r\n            })\r\n            this.setState({ytls})\r\n        }else{\r\n            this.setState({ytls:this.state.tls})\r\n        }\r\n    }\r\n    \r\n    initTimelines=async()=>{\r\n        await this.props.rTls()\r\n        const result=this.props.timelineReducer\r\n        const date=new Date()\r\n        const thisyear=date.getFullYear()\r\n        const tls=result.data\r\n        const ytls=[]\r\n        const arr=['all']\r\n        tls.forEach(tl=>{\r\n            arr.push(formateYear(tl.create_time))\r\n        })\r\n        const years=Array.from(new Set(arr))\r\n        tls.forEach(tl=>{\r\n            if(tl.create_time.substring(0, 4)===thisyear.toString()){\r\n                ytls.push(tl)\r\n            }\r\n        })\r\n        this.setState({\r\n            tls,years,ytls:ytls\r\n        })\r\n    }\r\n    \r\n    showDetails=tlid=>{\r\n        this.state.tls.forEach(tl=>{\r\n            if(tl._id===tlid){\r\n                this.details=tl.details\r\n            }\r\n        })\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initTimelines()\r\n    }\r\n    \r\n    render(){\r\n        const{years,reverse,ytls,isShow}=this.state\r\n        const date=new Date()\r\n        const thisyear=date.getFullYear()\r\n        const title='时间轴'\r\n        return(\r\n            <Card title={title}>\r\n                <div>\r\n                    <div style={{ marginBottom: 16 }}>\r\n                        <Button type=\"primary\"  onClick={this.handleClick}>\r\n                             排序\r\n                        </Button>\r\n                        <Select defaultValue={thisyear} className=\"searchbar-select\" onChange={this.selectYear} style={{float:'right'}}>\r\n                            {years.map(year=><Option key={year} value={year}>{year}</Option>)}\r\n                        </Select>\r\n                    </div>\r\n                    <Timeline pending=\"读取...\" reverse={reverse} >\r\n                        {\r\n                            ytls.map(tl=>\r\n                                <Timeline.Item key={tl._id}> \r\n                                {tl.name+' '+shortDate(tl.create_time)}\r\n                                {tl.details?  <span>&nbsp;<Icon onClick={()=>{this.showDetails(tl._id)}} type=\"profile\" theme=\"twoTone\" /></span>:<span></span>}\r\n                                </Timeline.Item>\r\n                            )\r\n                        }\r\n                    </Timeline>\r\n                    \r\n                </div>\r\n                <Modal\r\n                  title={\"详情\"}\r\n                  visible={isShow}\r\n                  onOk={()=>{\r\n                      this.setState({isShow:false}) \r\n                  }}\r\n                  onCancel={()=>{\r\n                      this.setState({isShow:false}) \r\n                  }}\r\n                >\r\n                    <Text>{this.details}</Text>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nDTimeLine.propTypes={\r\n    timelineReducer:PropTypes.object.isRequired,\r\n    rTls:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {timelineReducer:state.timelineReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {rTls}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DTimeLine)","import React,{Component} from 'react';\r\nimport {Card,Badge} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport {chart_device} from '../../../api'\r\n\r\n\r\nexport default class ChartDevice extends Component{\r\n    state={\r\n        data:[]\r\n    }\r\n\r\n    \r\n    getOption=(arr)=>{\r\n        return{\r\n            backgroundColor: '#2c343c',\r\n\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '设备结构',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '50%'],\r\n                    data: arr.sort(function (a, b) { return a.value - b.value; }),\r\n                    roseType: 'radius',\r\n                    label: {\r\n                        color: 'rgba(255, 255, 255, 0.3)'\r\n                    },\r\n                    labelLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(255, 255, 255, 0.3)'\r\n                        },\r\n                        smooth: 0.2,\r\n                        length: 10,\r\n                        length2: 20\r\n                    },\r\n                    itemStyle: {\r\n                        color: '#c23531',\r\n                        shadowBlur: 200,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    },\r\n\r\n                    animationType: 'scale',\r\n                    animationEasing: 'elasticOut',\r\n                    animationDelay: function (idx) {\r\n                        return Math.random() * 200;\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    initData=async()=>{\r\n        const temp=await chart_device()\r\n        this.setState({data:temp.data,sum:temp.sum})\r\n    }\r\n     componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        \r\n        const{data}=this.state\r\n        const extra=<span>设备总计:&nbsp;&nbsp;<Badge count={this.state.sum} overflowCount={10000} style={{ backgroundColor: '#52c41a' }} /></span>\r\n        return(\r\n            <Card title='设备结构' extra={extra}>\r\n                <ReactEcharts option={this.getOption(data)}/>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Card,Badge} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport {chart_processedrecord} from '../../../api'\r\n\r\nexport default class ChartPR extends Component{\r\n    state={\r\n        legenddata:[],\r\n        seriesdata: [],\r\n        sum:0\r\n    }\r\n\r\n    \r\n    getOption=(legenddata,seriesdata)=>{\r\n        return{\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                //orient: 'horizontal',\r\n                left: 1,\r\n                data:legenddata\r\n            },\r\n            series: [\r\n                {\r\n                    name: '运维记录分析',\r\n                    type: 'pie',\r\n                    radius: ['50%', '70%'],\r\n                    avoidLabelOverlap: false,\r\n                    label: {\r\n                        show: false,\r\n                        position: 'center'\r\n                    },\r\n                    emphasis: {\r\n                        label: {\r\n                            show: true,\r\n                            fontSize: '30',\r\n                            fontWeight: 'bold'\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        show: false\r\n                    },\r\n                    data: seriesdata\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    initData=async()=>{\r\n        const temp=await chart_processedrecord()\r\n        this.setState({\r\n            legenddata:temp.legenddata,\r\n            seriesdata:temp.seriesdata,\r\n            sum:temp.sum\r\n        })\r\n    }\r\n     componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        \r\n        const{legenddata,seriesdata,sum}=this.state\r\n        const title='各类问题比例'\r\n        const extra=<span>问题数总计:&nbsp;&nbsp;<Badge count={sum} overflowCount={1000000}/></span>\r\n        return(\r\n            <Card title={title} extra={extra}>\r\n                <ReactEcharts option={this.getOption(legenddata,seriesdata)}/>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Col,Row} from 'antd'\r\n\r\nimport ChartPRD from './chart-processedrecord-day'\r\nimport DTimeLine from './timeline'\r\nimport ChartDevice from './chart-device'\r\nimport ChartPR from './chart-processedrecord'\r\n\r\n\r\nexport default class Dashboard extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={16}>\r\n                        <Row>\r\n                            <ChartPRD />\r\n                        </Row>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <ChartDevice />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <ChartPR />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <DTimeLine/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Icon} from 'antd'\r\n\r\nimport {BASE_GREEN} from '../../utils/colors'\r\nimport './index.less'\r\n\r\nexport default function EditBtn(props){\r\n    return(\r\n        <button {...props} className=\"linkbtn\" ><Icon type='edit' theme=\"filled\" style={{color:BASE_GREEN}}/></button>\r\n    )\r\n}","export const BASE_BLUE='#1890ff'\r\nexport const BASE_GREY='#CCCCCC'\r\nexport const BASE_RED='#fc4d3c'\r\nexport const EyeProtectionGreen='#CCE8CF'\r\nexport const BASE_BLACK='#19181A'\r\nexport const BASE_GREEN='#479761'\r\nexport const BASE_YELLOW='#CEBC81'\r\nexport const BASE_VIOLET='#B19F9e'\r\nexport const BASE_PINK='#f8a4c6'\r\nexport const BASE_DYELLOW='#ff8626'","import React from 'react'\r\nimport {Icon} from 'antd'\r\n\r\nimport {BASE_RED} from '../../utils/colors'\r\nimport './index.less'\r\n\r\nexport default function DeleteBtn(props){\r\n    return(\r\n        <button {...props} className=\"linkbtn\" ><Icon type='delete' theme=\"filled\" style={{color:BASE_RED}}/></button>\r\n    )\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends Component{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        group:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {group}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='组名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:group.name,\r\n                        rules:[\r\n                        {required:true,message:'组名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入组名称!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Tree} from 'antd'\r\n\r\nimport menuList from '../../../../config/menuConfig'\r\n\r\nconst {TreeNode} =Tree\r\n\r\nexport default class AuthMenuForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        //根据组权限初始化菜单\r\n        const {menu}=this.props.group\r\n        this.state={\r\n            checkedKeys:menu?menu.split(','):menu,\r\n        }\r\n    }\r\n    static propTypes={\r\n        group:PropTypes.object\r\n    }\r\n\r\n    //为父组件提供最新选中菜单\r\n    getMenus=()=>this.state.checkedKeys\r\n    \r\n    //返回所有菜单用于显示界面\r\n    getTreeNodes=list=>{\r\n        return list.reduce((pre,item)=>{\r\n            pre.push(\r\n                <TreeNode title={item.title} key={item.key}>\r\n                    {item.children ? this.getTreeNodes(item.children):null}\r\n                </TreeNode>\r\n            )\r\n            return pre\r\n        },[])\r\n    }\r\n    \r\n    //选中nodes时回调设置选中状态\r\n    onCheck=(checkedKeys)=>{\r\n        this.setState({\r\n            checkedKeys\r\n        })\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.treeNodes=this.getTreeNodes(menuList)\r\n    }\r\n    \r\n    //组建收到新属性时调用\r\n    componentWillReceiveProps(nextProps){//根据新传入group更新选中菜单\r\n        const menus=nextProps.group.menu\r\n        this.setState({\r\n            checkedKeys:menus?menus.split(','):menus\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {group}=this.props\r\n        const {checkedKeys}=this.state\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <div>\r\n                <Form.Item label='组名称' {...formItemLayout}>\r\n                    <Input value={group.name} disabled/>\r\n                </Form.Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                    {this.treeNodes}\r\n                </Tree>\r\n            </div>\r\n        )\r\n    }\r\n}","const operList=[\r\n{\r\n    name:'帐户管理',\r\n    method:'account',\r\n    children:[\r\n    {\r\n        key:'cReset',\r\n        name:'重置密码',\r\n        method:'cReset'\r\n    },{\r\n        key:'rGroups',\r\n        name:'读取组',\r\n        method:'rGroups'\r\n    },{\r\n        key:'couGroup',\r\n        name:'增加或更新组',\r\n        method:'couGroup'\r\n    },{\r\n        key:'dGroup',\r\n        name:'删除组',\r\n        method:'dGroup'\r\n    },{\r\n        key:'rDepartments',\r\n        name:'读取部门',\r\n        method:'rDepartments'\r\n    },{\r\n        key:'couDepartment',\r\n        name:'增加或更新部门',\r\n        method:'couDepartment'\r\n    },{\r\n        key:'dDepartment',\r\n        name:'删除部门',\r\n        method:'dDepartment'\r\n    },{\r\n        key:'rUsers',\r\n        name:'读取用户',\r\n        method:'rUsers'\r\n    },{\r\n        key:'couUser',\r\n        name:'增加或更新用户',\r\n        method:'couUser'\r\n    },{\r\n        key:'dUser',\r\n        name:'删除用户',\r\n        method:'dUser'\r\n    }\r\n    ]\r\n},{\r\n    name:'信息设备',\r\n    method:'informationdevice',\r\n    children:[\r\n    {\r\n        key:'rDeviceCategorys',\r\n        name:'读取设备类别',\r\n        method:'rDeviceCategorys'\r\n    },{\r\n        key:'couDeviceCategory',\r\n        name:'增加或更新设备类别',\r\n        method:'couDeviceCategory'\r\n    },{\r\n        key:'dDeviceCategory',\r\n        name:'删除设备类别',\r\n        method:'dDeviceCategory'\r\n    },{\r\n        key:'rDeviceModels',\r\n        name:'读取设备型号',\r\n        method:'rDeviceModels'\r\n    },{\r\n        key:'couDeviceModel',\r\n        name:'增加或更新设备型号',\r\n        method:'couDeviceModel'\r\n    },{\r\n        key:'dDeviceModel',\r\n        name:'删除设备型号',\r\n        method:'dDeviceModel'\r\n    },{\r\n        key:'rInstallLocations',\r\n        name:'读取安装位置',\r\n        method:'rInstallLocations'\r\n    },{\r\n        key:'couInstallLocation',\r\n        name:'增加或更新安装位置',\r\n        method:'couInstallLocation'\r\n    },{\r\n        key:'dInstallLocation',\r\n        name:'删除安装位置',\r\n        method:'dInstallLocation'\r\n    },{\r\n        key:'rDeviceInfos',\r\n        name:'读取设备信息',\r\n        method:'rDeviceInfos'\r\n    },{\r\n        key:'couDeviceInfo',\r\n        name:'增加或更新设备信息',\r\n        method:'couDeviceInfo'\r\n    },{\r\n        key:'dDeviceInfo',\r\n        name:'删除设备信息',\r\n        method:'dDeviceInfo'\r\n    },{\r\n        key:'rDeviceTopos',\r\n        name:'读取设备拓扑',\r\n        method:'rDeviceTopos'\r\n    },{\r\n        key:'couDeviceTopo',\r\n        name:'增加或更新设备拓扑',\r\n        method:'couDeviceTopo'\r\n    },{\r\n        key:'dDeviceTopo',\r\n        name:'删除设备拓扑',\r\n        method:'dDeviceTopo'\r\n    }\r\n    ]\r\n},{\r\n    name:'运维记录',\r\n    method:'oapm',\r\n    children:[\r\n    {\r\n        key:'rProblemCategorys',\r\n        name:'读取问题类别',\r\n        method:'rProblemCategorys'\r\n    },{\r\n        key:'couProblemCategory',\r\n        name:'增加或更新问题类别',\r\n        method:'couProblemCategory'\r\n    },{\r\n        key:'dProblemCategory',\r\n        name:'删除问题类别',\r\n        method:'dProblemCategory'\r\n    },{\r\n        key:'rProcessedRecords',\r\n        name:'读取运维记录',\r\n        method:'rProcessedRecords'\r\n    },{\r\n        key:'couProcessedRecord',\r\n        name:'增加或更新运维记录',\r\n        method:'couProcessedRecord'\r\n    },{\r\n        key:'dProcessedRecord',\r\n        name:'删除运维记录',\r\n        method:'dProcessedRecord'\r\n    },{\r\n        key:'cImg',\r\n        name:'上传图片',\r\n        method:'cImg'\r\n    },{\r\n        key:'rPrinterRepairs',\r\n        name:'读取打印机维修',\r\n        method:'rPrinterRepairs'\r\n    },{\r\n        key:'couPrinterRepair',\r\n        name:'增加或更新打印机维修',\r\n        method:'couPrinterRepair'\r\n    },{\r\n        key:'dPrinterRepair',\r\n        name:'删除打印机维修',\r\n        method:'dPrinterRepair'\r\n    },{\r\n        key:'rePrinterRepair',\r\n        name:'审核打印机维修',\r\n        method:'rePrinterRepair'\r\n    },{\r\n        key:'rCartridays',\r\n        name:'读取硒鼓加粉',\r\n        method:'rCartridays'\r\n    },{\r\n        key:'couCartriday',\r\n        name:'增加或更新硒鼓加粉',\r\n        method:'couCartriday'\r\n    },{\r\n        key:'dCartriday',\r\n        name:'删除硒鼓加粉',\r\n        method:'dCartriday'\r\n    },{\r\n        key:'reCartriday',\r\n        name:'审核硒鼓加粉',\r\n        method:'reCartriday'\r\n    },{\r\n        key:'rApplicationSoftwares',\r\n        name:'读取应用软件',\r\n        method:'rApplicationSoftwares'\r\n    },{\r\n        key:'couApplicationSoftware',\r\n        name:'增加或更新应用软件',\r\n        method:'couApplicationSoftware'\r\n    },{\r\n        key:'dApplicationSoftware',\r\n        name:'删除应用软件',\r\n        method:'dApplicationSoftware'\r\n    }\r\n    ]\r\n},{\r\n    name:'时间线',\r\n    method:'timeline',\r\n    children:[\r\n    {\r\n        key:'rTimeLines',\r\n        name:'读取时间轴',\r\n        method:'rTimeLines'\r\n    },{\r\n        key:'couTimeLine',\r\n        name:'增加或更新时间轴',\r\n        method:'couTimeLine'\r\n    },{\r\n        key:'dTimeLine',\r\n        name:'删除时间轴',\r\n        method:'dTimeLine'\r\n    }\r\n    ]\r\n}\r\n]\r\n\r\nexport default operList","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Tree} from 'antd'\r\n\r\nimport operList from '../../../../config/operationConfig'\r\n\r\nconst {TreeNode} =Tree\r\n\r\nexport default class AuthOperationForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        //根据组权限初始化操作\r\n        const {operation}=this.props.group\r\n        this.state={\r\n            checkedKeys:operation?operation.split(','):operation\r\n        }\r\n    }\r\n    static propTypes={\r\n        group:PropTypes.object\r\n    }\r\n    \r\n    //为父组件提供最新选中操作\r\n    getOperations=()=>this.state.checkedKeys \r\n    \r\n    getTreeNodes=(list)=>{\r\n        return list.reduce((pre,item)=>{\r\n            pre.push(\r\n                <TreeNode title={item.name} key={item.method}>\r\n                    {item.children ? this.getTreeNodes(item.children):null}\r\n                </TreeNode>\r\n            )\r\n            return pre\r\n        },[])\r\n    }\r\n    onCheck=checkedKeys=>{\r\n        this.setState({checkedKeys})\r\n    }\r\n    componentWillMount(){\r\n        this.treeNodes=this.getTreeNodes(operList)\r\n    }\r\n    \r\n    //组建收到新属性时调用\r\n    componentWillReceiveProps(nextProps){//根据新传入group更新选中菜单\r\n        const opers=nextProps.group.operation\r\n        this.setState({\r\n            checkedKeys:opers?opers.split(','):opers\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {group}=this.props\r\n        const {checkedKeys}=this.state\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <div>\r\n                <Form.Item label='组名称' {...formItemLayout}>\r\n                    <Input value={group.name} disabled/>\r\n                </Form.Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                    {this.treeNodes}\r\n                </Tree>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rGro,couGro,dGro} from '../../../../redux/actions/account-action'\r\nimport AddForm from './addform'\r\nimport AuthMenuForm from './authmenuform'\r\nimport AuthOperationForm from './authoperationform'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\n\r\n\r\nclass Group extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.auth=React.createRef()\r\n        this.state={\r\n            isShowAdd:false,\r\n            isShowGM:false,\r\n            isShowGO:false,\r\n            loading:false,\r\n            groups:[],  //所有组,用于显示table数据\r\n            selectedGroup:{},    //选中组,用于选中授权\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(group)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(group)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteGroup(group)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    initGroups=async ()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rGro()\r\n        const result=this.props.groupReducer\r\n        this.setState({loading:false})\r\n        this.setState({groups:result.data})\r\n    }\r\n    \r\n    //设置选中\r\n    onRow=(group)=>{\r\n        return{\r\n            onClick:event=>{\r\n                this.setState({\r\n                    selectedGroup:group\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.group=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateGroup=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const group=values\r\n                this.form.resetFields()\r\n                if(this.group){\r\n                    group._id=this.group._id\r\n                }\r\n                await this.props.couGro(group)\r\n                const result=this.props.groupReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initGroups()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(group)=>{\r\n        this.group=group\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteGroup=(group)=>{\r\n        Modal.confirm({\r\n            title:'确认删除 '+group.name+' 吗？',\r\n            onOk:async()=>{\r\n                await this.props.dGro(group._id)\r\n                const result=this.props.groupReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initGroups()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    } \r\n    showMenuAuth=()=>{\r\n        this.setState({\r\n            isShowGM:true\r\n        })\r\n    }\r\n    showOperationAuth=()=>{\r\n        this.setState({\r\n            isShowGO:true\r\n        })\r\n    }\r\n\r\n    GroupMenuAuth=async()=>{\r\n        this.setState({\r\n            isShowGM:false\r\n        })\r\n        const group=this.state.selectedGroup\r\n        const menus=this.auth.current.getMenus()\r\n        group.menu=menus?menus.join(','):menus\r\n        await this.props.couGro(group)\r\n        const result=this.props.groupReducer\r\n        if(result.status===1){\r\n            message.success(result.msg)\r\n            this.initGroups()\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    \r\n    GroupOperationAuth=async()=>{\r\n        this.setState({\r\n            isShowGO:false\r\n        })\r\n        const group=this.state.selectedGroup\r\n        const operations=this.auth.current.getOperations()\r\n        group.operation=operations?operations.join(','):operations\r\n        \r\n        await this.props.couGro(group)\r\n        const result=this.props.groupReducer\r\n        if(result.status===1){\r\n            //给自己角色授权，强制退出\r\n            /*if(group._id===memUtils.user.group_id){\r\n                memUtils.user={}\r\n                storeUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n                message.success('当前用户组权限更改，需重新登录！')\r\n            }else{\r\n                message.success('授权成功！')\r\n                this.setState({\r\n                    groups:[...this.state.groups]\r\n                })\r\n            }*/\r\n            message.success(result.msg)\r\n            this.initGroups()\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initGroups()\r\n    }\r\n    render(){\r\n        const {groups,loading,selectedGroup,isShowAdd,isShowGM,isShowGO}=this.state\r\n        const group=this.group||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"usergroup-add\" />新增</Button>&nbsp;&nbsp;\r\n                 <Button type='primary' onClick={this.showMenuAuth} disabled={!selectedGroup._id}><Icon type='menu'/>菜单权限</Button>&nbsp;&nbsp;\r\n                 <Button type='primary' onClick={this.showOperationAuth} disabled={!selectedGroup._id}><Icon type='tool'/>操作权限</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={groups}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                rowSelection={{\r\n                    type:'radio',\r\n                    selectedRowKeys:[selectedGroup._id],\r\n                    onSelect:(group)=>{\r\n                        this.setState({\r\n                            selectedGroup:group\r\n                        })\r\n                    }\r\n                    }}\r\n                onRow={this.onRow}\r\n                />\r\n                <Modal\r\n                  title={group._id ? \"编辑组\" : '新增组'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateGroup}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} group={group}/>\r\n                </Modal>\r\n                <Modal\r\n                  title=\"菜单权限\"\r\n                  visible={isShowGM}\r\n                  onOk={this.GroupMenuAuth}\r\n                  onCancel={()=>{\r\n                      this.setState({isShowGM:false})\r\n                  }}\r\n                >\r\n                    <AuthMenuForm \r\n                    ref={this.auth} \r\n                    group={selectedGroup}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                  title=\"操作权限\"\r\n                  visible={isShowGO}\r\n                  onOk={this.GroupOperationAuth}\r\n                  onCancel={()=>{\r\n                      this.setState({isShowGO:false})\r\n                  }}\r\n                >\r\n                <AuthOperationForm ref={this.auth} group={selectedGroup}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nGroup.propTypes={\r\n    groupReducer:PropTypes.object.isRequired,\r\n    rGro:PropTypes.func.isRequired,\r\n    couGro:PropTypes.func.isRequired,\r\n    dGro:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        groupReducer:state.groupReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rGro,couGro,dGro}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Group)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,TreeSelect,Switch} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends PureComponent{\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        departments:PropTypes.array.isRequired,\r\n        department:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {department}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='部门名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:department.name,\r\n                        rules:[\r\n                        {required:true,message:'部门名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入部门名称名!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='简码' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('code',{\r\n                        initialValue:department.code,\r\n                        rules:[\r\n                        {required:true,message:'简码不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入简码!'/>\r\n                    )\r\n                    }\r\n                </Item>\r\n                <Item label='上级部门' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('_parent',{\r\n                        initialValue:department._parent\r\n                    })(\r\n                        <TreeSelect\r\n                        style={{ width: '100%' }}\r\n                        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                        treeData={this.props.departments}\r\n                        placeholder=\"上级部门\"\r\n                        treeDefaultExpandAll\r\n                        onChange={this.onChange}\r\n                        />\r\n                    )}\r\n                </Item>\r\n                <Item label='启用' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('status', { \r\n                        valuePropName: 'checked',\r\n                        initialValue:department.status\r\n                    })(\r\n                        <Switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" />\r\n                    )}\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","export function ptoc(data){\r\n        let resData = data.slice()\r\n        let tree = []\r\n\r\n        for (let i = 0; i < resData.length; i++) {\r\n            if (resData[i]._parent === null) {\r\n                let obj = {\r\n                    _id: resData[i]._id,\r\n                    value: resData[i]._id,\r\n                    key: resData[i]._id,\r\n                    name: resData[i].name,\r\n                    title: resData[i].name,\r\n                    code: resData[i].code,\r\n                    create_time: resData[i].create_time,\r\n                    status: resData[i].status,\r\n                    _parent: resData[i]._parent,\r\n                    children: []\r\n                }\r\n                tree.push(obj)\r\n                resData.splice(i, 1)\r\n                i--\r\n            }\r\n        }\r\n        \r\n        run(tree)\r\n        function run(chiArr){\r\n            if (resData.length !== 0) {\r\n                for (let i = 0; i < chiArr.length; i++) {\r\n                    for (let j = 0; j < resData.length; j++) {\r\n                        if (chiArr[i]._id === resData[j]._parent) {\r\n                            let obj = {\r\n                                _id: resData[j]._id,\r\n                                key: resData[j]._id,\r\n                                value: resData[j]._id,\r\n                                title: resData[j].name,\r\n                                name: resData[j].name,\r\n                                code: resData[j].code,\r\n                                create_time: resData[j].create_time,\r\n                                status: resData[j].status,\r\n                                _parent: resData[j]._parent,\r\n                                children: []\r\n                            }\r\n                            chiArr[i].children.push(obj)\r\n                            resData.splice(j, 1)\r\n                            j--\r\n                        }\r\n                    }\r\n                    run(chiArr[i].children)\r\n                }\r\n            }\r\n        }\r\n        return tree;\r\n    }\r\n","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal,Tag,Input} from 'antd'\r\nimport {BASE_GREEN,BASE_YELLOW} from '../../../../utils/colors'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {rDeps,couDep,dDep} from '../../../../redux/actions/account-action'\r\nimport AddForm from './addform'\r\nimport Highlighter from 'react-highlight-words'\r\nimport {ptoc} from '../../../../utils/departmentUtils'\r\n\r\nclass Department extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loading:false,\r\n            isShow:false,\r\n            searchText: '',\r\n            searchedColumn: '',\r\n        }\r\n    }\r\n    \r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                  ref={node => {\r\n                    this.searchInput = node;\r\n                  }}\r\n                  placeholder={`Search ${dataIndex}`}\r\n                  value={selectedKeys[0]}\r\n                  onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                  onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                  style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                  icon=\"search\"\r\n                  size=\"small\"\r\n                  style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                  Search\r\n                </Button>\r\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                  Reset\r\n                </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => this.searchInput.select());\r\n                }\r\n            },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                  highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                  searchWords={[this.state.searchText]}\r\n                  autoEscape\r\n                  textToHighlight={text.toString()}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    })\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm()\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        })\r\n    }\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters()\r\n        this.setState({ searchText: '' })\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'名称',\r\n            dataIndex:'name',\r\n            ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n            title:'简码',\r\n            dataIndex:'code',\r\n            ...this.getColumnSearchProps('code'),\r\n        },\r\n        {\r\n            title:'状态',\r\n            dataIndex:'status',\r\n            render:(status)=>{\r\n                if(status){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>启用</Tag>\r\n                        </span>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_YELLOW}>停用</Tag>\r\n                        </span>\r\n                    )\r\n                }  \r\n            }\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(department)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(department)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteDepartment(department)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n   \r\n    initDepartments = async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rDeps()\r\n        const data=this.props.departmentReducer.data\r\n        const departments = ptoc(data)\r\n        this.setState({loading:false})\r\n        this.setState({departments})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.department=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(department)=>{\r\n        this.department=department\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    addOrUpdateDepartment=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const department=values\r\n                this.form.resetFields()\r\n                if(this.department){\r\n                    department._id=this.department._id\r\n                }\r\n                if(department.status)\r\n                    department.status=true\r\n                else\r\n                    department.status=false\r\n                await this.props.couDep(department)\r\n                const result=this.props.departmentReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDepartments()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    deleteDepartment=(department)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+department.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dDep(department._id)\r\n                const result=this.props.departmentReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDepartments()\r\n                }else{\r\n                    message.error(result.msg)\r\n                } \r\n            }\r\n        })\r\n    }\r\n   \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initDepartments()\r\n    }\r\n    render(){\r\n        const {loading,isShow}=this.state\r\n        const department=this.department||{}\r\n        const title=<Button type='primary' onClick={this.showAdd}><Icon type=\"apartment\" />新增</Button>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={this.props.departmentReducer.data}\r\n                columns={this.columns}\r\n                pagination={false}\r\n                scroll={{ y: 480 }}\r\n                />\r\n                \r\n                <Modal\r\n                  title={department._id ? \"编辑部门\" : '新增部门'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateDepartment}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    department={department}\r\n                    departments={this.props.departmentReducer.data}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nDepartment.propTypes={\r\n    departmentReducer:PropTypes.object.isRequired,\r\n    rDeps:PropTypes.func.isRequired,\r\n    couDep:PropTypes.func.isRequired,\r\n    dDep:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        departmentReducer:state.departmentReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rDeps,couDep,dDep}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Department)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Select,Switch} from 'antd'\r\n\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\n\r\nclass AddForm extends PureComponent{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        groups:PropTypes.array.isRequired,\r\n        user:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {groups,user}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='用户名' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('username',{\r\n                        initialValue:user.username,\r\n                        rules:[\r\n                        {required:true,message:'用户名不能为空!'}\r\n                        ]\r\n                    })(\r\n                        user.username==='admin'?<Input disabled/>:<Input placeholder='请输入用户名!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n                {user._id ? null:(\r\n                    <Item label='密码' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('password',{\r\n                        initialValue:user.password,\r\n                        rules:[\r\n                        {required:true,message:'密码不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入密码!' type=\"password\"/>\r\n                    )\r\n                    }\r\n                </Item>\r\n                )}\r\n                <Item label='姓名' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:user.name,\r\n                        rules:[\r\n                        {required:true,message:'姓名不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入姓名!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='用户组' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('group',{\r\n                        initialValue:user.group,\r\n                        rules:[\r\n                        {required:true,message:'请选择用户组!'}\r\n                        ]\r\n                    })(\r\n                        <Select mode='multiple'>\r\n                        {\r\n                            groups.map(group=><Option key={group._id} value={group._id}>{group.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='超级用户' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('issuper', { \r\n                        valuePropName: 'checked',\r\n                        initialValue:user.isSuper?user.isSuper:false\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Tree} from 'antd'\r\n\r\nconst {TreeNode} =Tree\r\n\r\nexport default class DepartmentForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        const {department}=this.props.user\r\n        let keys=[]\r\n        for(let key in department){\r\n            keys.push(department[key]._id)\r\n        }\r\n        this.state={\r\n            checkedKeys:keys\r\n        }\r\n    }\r\n    static propTypes={\r\n        user:PropTypes.object,\r\n        initDepartment:PropTypes.array\r\n    }\r\n\r\n    //为父组件提供选中节点\r\n    getDepartments=()=>this.state.checkedKeys\r\n    \r\n    getTreeNodes=list=>{\r\n        return list?list.reduce((pre,item)=>{\r\n            pre.push(\r\n                <TreeNode title={item.name} key={item._id}>\r\n                    {item.children ? this.getTreeNodes(item.children):null}\r\n                </TreeNode>\r\n            )\r\n            return pre\r\n        },[]):{}\r\n    }\r\n    onCheck=checkedKeys=>{\r\n        this.setState({checkedKeys})\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.treeNodes=this.getTreeNodes(this.props.initDepartment)\r\n    }\r\n    \r\n    //组建收到新属性时调用\r\n    componentWillReceiveProps(nextProps){\r\n        const departments=nextProps.user.department\r\n        let keys=[]\r\n        for(let key in departments){\r\n            if(typeof(departments[key])==='number'||typeof(departments[key])==='string')\r\n                keys.push(Number(departments[key]))\r\n            else\r\n                keys.push(Number(departments[key]._id))\r\n        }\r\n        \r\n        this.setState({\r\n            checkedKeys:keys\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {user}=this.props\r\n        const {checkedKeys}=this.state\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <div>\r\n                <Form.Item label='用户名' {...formItemLayout}>\r\n                    <Input value={user.username} disabled/>\r\n                </Form.Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                    {this.treeNodes}\r\n                </Tree>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Card,Table,Button,Icon,message,Modal,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {ptoc} from '../../../../utils/departmentUtils'\r\nimport {rUs,couUs,dUs,rGro,rDeps,recPwd} from '../../../../redux/actions/account-action'\r\nimport AddForm from './addform'\r\nimport DepartmentForm from './departmentform'\r\nimport Highlighter from 'react-highlight-words'\r\n\r\nclass User extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.auth=React.createRef()\r\n        this.state={\r\n            isShow:false,\r\n            udShow:false,\r\n            loading:false,\r\n            users:[],  //所有用户\r\n            groups:[],   //用户组\r\n            selectedUser:{},    //选中用户\r\n            initDepartment:[]   //传给子组件初始化tree\r\n        }\r\n    }\r\n    \r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                  ref={node => {\r\n                    this.searchInput = node;\r\n                  }}\r\n                  placeholder={`Search ${dataIndex}`}\r\n                  value={selectedKeys[0]}\r\n                  onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                  onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                  style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                  icon=\"search\"\r\n                  size=\"small\"\r\n                  style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                  Search\r\n                </Button>\r\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                  Reset\r\n                </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => this.searchInput.select());\r\n                }\r\n            },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                  highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                  searchWords={[this.state.searchText]}\r\n                  autoEscape\r\n                  textToHighlight={text.toString()}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    })\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm()\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        })\r\n    }\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters()\r\n        this.setState({ searchText: '' })\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'用户名',\r\n            dataIndex:'username',\r\n            ...this.getColumnSearchProps('username'),\r\n        },\r\n        {\r\n            title:'密码',\r\n            dataIndex:'password',\r\n        },\r\n        {\r\n            title:'姓名',\r\n            dataIndex:'name',\r\n            ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n            title:'所在组',\r\n            dataIndex:'group',\r\n            render:(group)=>{\r\n                let result=[]\r\n                for(let i=0;i<group.length;i++){\r\n                    for(let key in this.groupNames){\r\n                        if(key.toString()===group[i].toString()){\r\n                            result.push(this.groupNames[key]+' ')\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(user)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(user)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteUser(user)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    initGroupNames=(groups)=>{\r\n        const groupNames=groups? groups.reduce((pre,group)=>{\r\n            pre[group._id]=group.name\r\n            return pre\r\n        },{}):[]\r\n        this.groupNames=groupNames\r\n    }\r\n    \r\n    initUsers=async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rUs()\r\n        const result=this.props.userReducer.data\r\n        this.setState({loading:false})\r\n        this.setState({users:result})\r\n\r\n        await this.props.rGro()\r\n        const groups=this.props.groupReducer.data\r\n        this.initGroupNames(groups)\r\n        this.setState({groups:groups})\r\n    }\r\n    \r\n    onRow=(user)=>{\r\n        return{\r\n            onClick:event=>{\r\n                this.setState({\r\n                    selectedUser:user,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    addOrUpdateUser=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                //const user=this.form.getFieldsValue()\r\n                const user=values\r\n                this.form.resetFields()\r\n                if(this.user){\r\n                    user._id=this.user._id\r\n                }\r\n                await this.props.couUs(user)\r\n                const result=this.props.userReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initUsers()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    showAdd=()=>{\r\n        this.user=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(user)=>{\r\n        this.user=user\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    deleteUser=(user)=>{\r\n        if(user.username==='admin'){\r\n            message.error('不允许删除管理员！')\r\n        }else{\r\n            Modal.confirm({\r\n                title:'确认删除 '+user.username+' 吗？',\r\n                onOk:async()=>{\r\n                    await this.props.dUs(user._id)\r\n                    const result=this.props.userReducer\r\n                    if(result.status===1){\r\n                        message.success(result.msg)\r\n                        this.initUsers()\r\n                    }else{\r\n                        message.error(result.msg)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    showDepartment=async()=>{\r\n        await this.props.rDeps()\r\n        const result=this.props.departmentReducer\r\n        this.setState({\r\n            udShow:true,\r\n            initDepartment:result?ptoc(result.data):[]\r\n        })\r\n    }\r\n    \r\n    UserDepartment=async()=>{\r\n        this.setState({\r\n            udShow:false\r\n        })\r\n        const user=this.state.selectedUser\r\n        const departments=this.auth.current.getDepartments()\r\n        user.department=departments\r\n\r\n        await this.props.couUs(user)\r\n        const result=this.props.userReducer\r\n        if(result.status===1){\r\n            message.success(result.msg)\r\n            this.initUsers()\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    resetPwd=()=>{\r\n        const username=this.state.selectedUser.username\r\n        if(username==='admin'){\r\n            message.error('不允许重置管理员！')\r\n        }else{\r\n            Modal.confirm({\r\n                title:'确认重置 '+username+' 吗？',\r\n                onOk:async()=>{\r\n                    await this.props.recPwd(username)\r\n                    const result=this.props.userReducer\r\n                    if(result.status===1){\r\n                        message.success(result.msg)\r\n                        this.initUsers()\r\n                    }else{\r\n                        message.error(result.msg)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.initUsers()\r\n    }\r\n    render(){\r\n        const {users,groups,selectedUser,initDepartment,loading,isShow,udShow}=this.state\r\n        const user=this.user||{}\r\n        const title=(\r\n            <span>\r\n                <Button type='primary' onClick={this.showAdd}><Icon type=\"user-add\" />新增</Button>&nbsp;&nbsp;\r\n                <Button type='primary' onClick={this.showDepartment} disabled={!selectedUser._id}><Icon type='apartment'/>部门选择</Button>&nbsp;&nbsp;\r\n                <Button type='primary' onClick={this.resetPwd} disabled={!selectedUser._id}><Icon type='redo'/>重置密码</Button>\r\n            </span>)\r\n        \r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={users}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                    rowSelection={{\r\n                    type:'radio',\r\n                    selectedRowKeys:[selectedUser._id],\r\n                    onSelect:(user)=>{\r\n                        this.setState({\r\n                            selectedUser:user,\r\n                        })\r\n                    }\r\n                    }}\r\n                onRow={this.onRow}\r\n                />\r\n                <Modal\r\n                  title={user._id ? \"编辑用户\" : '新增用户'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateUser}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    groups={groups} \r\n                    setForm={(form)=>{this.form=form}} \r\n                    user={user}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                  title=\"部门选择\"\r\n                  visible={udShow}\r\n                  onOk={this.UserDepartment}\r\n                  onCancel={()=>{\r\n                      this.setState({udShow:false,initDepartment:[]})\r\n                  }}\r\n                >\r\n                    <DepartmentForm ref={this.auth} initDepartment={initDepartment} user={selectedUser}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nUser.propTypes={\r\n    userReducer:PropTypes.object.isRequired,\r\n    groupReducer:PropTypes.object.isRequired,\r\n    departmentReducer:PropTypes.object.isRequired,\r\n    rUs:PropTypes.func.isRequired,\r\n    couUs:PropTypes.func.isRequired,\r\n    dUs:PropTypes.func.isRequired,\r\n    rGro:PropTypes.func.isRequired,\r\n    rDeps:PropTypes.func.isRequired,\r\n    recPwd:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userReducer:state.userReducer,\r\n        groupReducer:state.groupReducer,\r\n        departmentReducer:state.departmentReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    rUs,\r\n    couUs,\r\n    dUs,\r\n    rGro,\r\n    rDeps,\r\n    recPwd\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(User)","import React,{Component} from 'react'\r\n\r\nimport {Card,Calendar,Badge } from 'antd'\r\n\r\n//import {getDaysInMonth} from '../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\n\r\nexport default class Developing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        const date=new Date()\r\n        this.state={\r\n            selectyear:date.getFullYear(),\r\n            selectmonth:date.getMonth()+1,\r\n            selectday:date.getDate(),\r\n            dayshifts:['长白班1','长白班2','长白班3'], //白班人员\r\n            changeshifts:[{'key':0,'name':'倒班1','next':1},{'key':1,'name':'倒班2','next':2},{'key':2,'name':'倒班3','next':0}],//倒班人员\r\n        }\r\n        this.count=0\r\n    }\r\n    getDuty=(thisdate,dutys,nums)=>{\r\n        //thisdate:****-**-** 当前月\r\n        /*dutys:[{\r\n            'key':1,\r\n            'type':'dayshifts',\r\n            'users':[{\r\n                'key':1,\r\n                'name':,'',\r\n                'next':2\r\n            },{\r\n                'key':2,\r\n                'name':,'',\r\n                'next':1\r\n            }]},{\r\n            'key':2,\r\n            'type':'eveningshifts',\r\n            'users':[{\r\n                'key':1,\r\n                'name':,'',\r\n                'next':2\r\n            },{\r\n                'key':2,\r\n                'name':,'',\r\n                'next':1\r\n            }]},{\r\n            'key':3,\r\n            'type':'nightshifts',\r\n            'users':[{\r\n                'key':1,\r\n                'name':,'',\r\n                'next':2\r\n            },{\r\n                'key':2,\r\n                'name':,'',\r\n                'next':1\r\n            }]}]*/\r\n    }\r\n    getListData=(value)=>{\r\n        //输入调休日\r\n        const num=value._d.getDay()\r\n        const listData=[]\r\n        const thisdate=new Date()\r\n        const thismonth=thisdate.getMonth()\r\n        const thisyear=thisdate.getFullYear()\r\n        if(value.month()===thismonth&&value.year()===thisyear){\r\n            if(num!==6&&num!==0){\r\n                let ds=''\r\n                for(let j=0;j<this.state.dayshifts.length;j++){\r\n                    ds+=this.state.dayshifts[j]+','\r\n                }\r\n                listData.push({ type: 'success', content: ds.substring(0,ds.length-1) })\r\n                listData.push({ type: 'warning', content: this.state.changeshifts[this.count].name })\r\n            }else{\r\n                listData.push({ type: 'warning', content: this.state.changeshifts[this.count].name })\r\n            }\r\n        }\r\n        this.count=this.state.changeshifts[this.count].next\r\n        return listData || []\r\n    }\r\n\r\n    dateCellRender=(value)=>{\r\n      const listData = this.getListData(value);\r\n      return (\r\n        <ul className=\"events\">\r\n          {listData.map(item => (\r\n            <li key={item.content}>\r\n              <Badge status={item.type} text={item.content} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )\r\n    }\r\n    onPanelChange=(value)=>{\r\n        console.log(value)\r\n        this.setState({\r\n            selectyear:value.year(),\r\n            selectmonth:value.month()+1,\r\n            selectday:value.date()\r\n        })\r\n    }\r\n    initData=()=>{\r\n        \r\n        //console.log(getDaysInMonth(this.state.selectyear,this.state.selectday))\r\n    }\r\n    \r\n    onSelect=(value)=>{\r\n        console.log(value)\r\n        console.log(value.year())\r\n        //console.log(value.month()+1)\r\n        //console.log(value.date())\r\n    }\r\n    componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        const {selectyear,selectmonth,selectday}=this.state\r\n        const title=selectyear+'-'+selectmonth+'-'+selectday\r\n        return(\r\n            <Card title={title}>\r\n                <Calendar\r\n                dateCellRender={this.dateCellRender} \r\n                onPanelChange={this.onPanelChange} \r\n                onSelect={this.onSelect} />\r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    GET_APPWARE,\r\n    COU_APPWARE,\r\n    DEL_APPWAREE,\r\n    GET_PROBLEMCATEGORY,\r\n    COU_PROBLEMCATEGORY,\r\n    DEL_PROBLEMCATEGORY,\r\n    GET_PROCESSEDRECORD,\r\n    COU_PROCESSEDRECORD,\r\n    DEL_PROCESSEDRECORD,\r\n    EXPORT_PROCESSEDRECORD_EXCEL,\r\n    UPLOAD_IMG,\r\n    GET_PRINTERREPAIR,\r\n    COU_PRINTERREPAIR,\r\n    DEL_PRINTERREPAIR,\r\n    REVIEWED_PRINTERREPAIR,\r\n    GET_CARTRIDAY,\r\n    COU_CARTRIDAY,\r\n    DEL_CARTRIDAY,\r\n    REVIEWED_CARTRIDAY,\r\n} from '../actiontypes'\r\n\r\nimport {\r\n    rProblemCategorys,\r\n    couProblemCategory,\r\n    dProblemCategory,\r\n    rProcessedRecords,\r\n    couProcessedRecord,\r\n    dProcessedRecord,\r\n    cImg,\r\n    eProcessedRecord,\r\n    rPrinterRepairs,\r\n    couPrinterRepair,\r\n    dPrinterRepair,\r\n    rePrinterRepair,\r\n    rCartridays,\r\n    couCartriday,\r\n    dCartriday,\r\n    reCartriday,\r\n    rApplicationSoftwares,\r\n    couApplicationSoftware,\r\n    dApplicationSoftware,\r\n} from '../../api'\r\n\r\n\r\n//获取信息模块\r\nconst rApplicationSoftwaresAction = data =>({\r\n    type:GET_APPWARE,\r\n    data\r\n})\r\nexport const rAppss = applicationsoftware => async dispatch => {\r\n    const result = await rApplicationSoftwares(applicationsoftware)\r\n    if(result.status === 1){\r\n        dispatch(rApplicationSoftwaresAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改信息模块\r\nconst couApplicationSoftwareAction = (msg,status) =>({\r\n    type:COU_APPWARE,\r\n    msg,\r\n    status\r\n})\r\nexport const couApps = applicationsoftware => async dispatch=>{\r\n    const result=await couApplicationSoftware(applicationsoftware)\r\n    dispatch(couApplicationSoftwareAction(result.msg,result.status))\r\n}\r\n//删除信息模块\r\nconst dApplicationSoftwareAction = (msg,status) =>({\r\n    type:DEL_APPWAREE,\r\n    msg,\r\n    status\r\n})\r\nexport const dApps = applicationsoftwareId => async dispatch=>{\r\n    const result = await dApplicationSoftware(applicationsoftwareId)\r\n    dispatch(dApplicationSoftwareAction(result.msg,result.status))\r\n}\r\n//获取问题类别\r\nconst rProblemCategorysAction = data =>({\r\n    type:GET_PROBLEMCATEGORY,\r\n    data\r\n})\r\nexport const rPcs = problemcategory => async dispatch => {\r\n    const result = await rProblemCategorys(problemcategory)\r\n    if(result.status === 1){\r\n        dispatch(rProblemCategorysAction(result.data))\r\n    }\r\n  }\r\n//新增修改问题类别\r\nconst couProblemCategoryAction = (msg,status) =>({\r\n    type:COU_PROBLEMCATEGORY,\r\n    msg,\r\n    status\r\n})\r\nexport const couPc = problemcategory => async dispatch=>{\r\n    const result=await couProblemCategory(problemcategory)\r\n    dispatch(couProblemCategoryAction(result.msg,result.status))\r\n}\r\n//删除问题类别\r\nconst dProblemCategoryAction = (msg,status) =>({\r\n    type:DEL_PROBLEMCATEGORY,\r\n    msg,\r\n    status\r\n})\r\nexport const dPc =problemcategoryId => async dispatch=>{\r\n    const result = await dProblemCategory(problemcategoryId)\r\n    dispatch(dProblemCategoryAction(result.msg,result.status))\r\n}\r\n//获取处理记录\r\nconst rProcessedRecordsAction = data =>({\r\n    type:GET_PROCESSEDRECORD,\r\n    data\r\n})\r\nexport const rPrs = processedrecord => async dispatch => {\r\n    const result = await rProcessedRecords(processedrecord)\r\n    if(result.status === 1){\r\n        dispatch(rProcessedRecordsAction(result.data))\r\n    }\r\n  }\r\n//新增修改处理记录\r\nconst couProcessedRecordAction = (msg,status) =>({\r\n    type:COU_PROCESSEDRECORD,\r\n    msg,\r\n    status\r\n})\r\nexport const couPr = processedrecord => async dispatch=>{\r\n    const result=await couProcessedRecord(processedrecord)\r\n    dispatch(couProcessedRecordAction(result.msg,result.status))\r\n}\r\n//删除处理记录\r\nconst dProcessedRecordAction = (msg,status) =>({\r\n    type:DEL_PROCESSEDRECORD,\r\n    msg,\r\n    status\r\n})\r\nexport const dPr = processedrecordId => async dispatch=>{\r\n    const result = await dProcessedRecord(processedrecordId)\r\n    dispatch(dProcessedRecordAction(result.msg,result.status))\r\n}\r\n//导出处理记录excel\r\nconst eProcessedRecordAction = data =>({\r\n    type:EXPORT_PROCESSEDRECORD_EXCEL,\r\n    data\r\n})\r\nexport const ePr = () => async dispatch => {\r\n    const result = await eProcessedRecord()\r\n    if(result.status === 1){\r\n        dispatch(eProcessedRecordAction(result.data))\r\n    }\r\n}\r\n//上传图片\r\nconst uploadImgAction = (msg,status) =>({\r\n    type:UPLOAD_IMG,\r\n    msg,\r\n    status\r\n})\r\nexport const uImg = name => async dispatch=>{\r\n    const result=await cImg(name)\r\n    dispatch(uploadImgAction(result.msg,result.status))\r\n}\r\n//获取设备维修\r\nconst rPrinterRepairsAction = data =>({\r\n    type:GET_PRINTERREPAIR,\r\n    data\r\n})\r\nexport const rPrps = printerrepair => async dispatch => {\r\n    const result = await rPrinterRepairs(printerrepair)\r\n    if(result.status === 1){\r\n        dispatch(rPrinterRepairsAction(result.data))\r\n    }\r\n  }\r\n//新增修改设备维修\r\nconst couPrinterRepairAction = (msg,status) =>({\r\n    type:COU_PRINTERREPAIR,\r\n    msg,\r\n    status\r\n})\r\nexport const couPrp = printerrepair => async dispatch=>{\r\n    const result=await couPrinterRepair(printerrepair)\r\n    dispatch(couPrinterRepairAction(result.msg,result.status))\r\n}\r\n//删除设备维修\r\nconst dPrinterRepairAction = (msg,status) =>({\r\n    type:DEL_PRINTERREPAIR,\r\n    msg,\r\n    status\r\n})\r\nexport const dPrp = printerrepairId => async dispatch=>{\r\n    const result = await dPrinterRepair(printerrepairId)\r\n    dispatch(dPrinterRepairAction(result.msg,result.status))\r\n}\r\n//审核设备维修\r\nconst rePrinterRepairAction = (msg,status) =>({\r\n    type:REVIEWED_PRINTERREPAIR,\r\n    msg,\r\n    status\r\n})\r\nexport const rePrp = handlerId => async dispatch=>{\r\n    const result = await rePrinterRepair(handlerId)\r\n    dispatch(rePrinterRepairAction(result.msg,result.status))\r\n}\r\n//获取硒鼓加粉\r\nconst rCartridaysAction = data =>({\r\n    type:GET_CARTRIDAY,\r\n    data\r\n})\r\nexport const rCds = cartridday => async dispatch => {\r\n    const result = await rCartridays(cartridday)\r\n    if(result.status === 1){\r\n        dispatch(rCartridaysAction(result.data))\r\n    }\r\n  }\r\n//新增修改硒鼓加粉\r\nconst couCartridayAction = (msg,status) =>({\r\n    type:COU_CARTRIDAY,\r\n    msg,\r\n    status\r\n})\r\nexport const couCd = cartridday => async dispatch=>{\r\n    const result=await couCartriday(cartridday)\r\n    dispatch(couCartridayAction(result.msg,result.status))\r\n}\r\n//删除硒鼓加粉\r\nconst dCartridayAction = (msg,status) =>({\r\n    type:DEL_CARTRIDAY,\r\n    msg,\r\n    status\r\n})\r\nexport const dCd = cartriddayId => async dispatch=>{\r\n    const result = await dCartriday(cartriddayId)\r\n    dispatch(dCartridayAction(result.msg,result.status))\r\n}\r\n//审核硒鼓加粉\r\nconst reCartridayAction = (msg,status) =>({\r\n    type:REVIEWED_CARTRIDAY,\r\n    msg,\r\n    status\r\n})\r\nexport const reCd = handlerId => async dispatch=>{\r\n    const result = await reCartriday(handlerId)\r\n    dispatch(reCartridayAction(result.msg,result.status))\r\n}","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends PureComponent{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        problemcategory:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {problemcategory}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='类别名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:problemcategory.name,\r\n                        rules:[\r\n                        {required:true,message:'类别名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入类别名称名!'/>\r\n                    )\r\n                }\r\n                </Item>                \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rPcs,couPc,dPc} from '../../../../redux/actions/oapm-action'\r\nimport AddForm from './addform'\r\n\r\nclass ProblemCategory extends Component{\r\n    state={\r\n        problemcategorys:[],\r\n        loading:false,\r\n        isShow:false,\r\n    }\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'id',\r\n            dataIndex:'_id',\r\n        },{\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(problemcategory)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(problemcategory)} />&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteProblemCategory(problemcategory)} />\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    initProblemCategorys= async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rPcs()\r\n        this.setState({loading:false})\r\n        this.setState({problemcategorys:this.props.problemCategoryReducer.data})\r\n\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.problemcategory=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(problemcategory)=>{\r\n        this.problemcategory=problemcategory\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    addOrUpdateProblemCategory=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const problemcategory=values\r\n                this.form.resetFields()\r\n                if(this.problemcategory){\r\n                    problemcategory._id=this.problemcategory._id\r\n                }\r\n                await this.props.couPc(problemcategory)\r\n                const result=this.props.problemCategoryReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initProblemCategorys()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    deleteProblemCategory=(problemcategory)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+problemcategory.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dPc(problemcategory._id)\r\n                const result=this.props.problemCategoryReducer\r\n                if(result.status===1){\r\n                    message.success('删除成功！')\r\n                    this.initProblemCategorys()\r\n                }\r\n            }\r\n        })\r\n    }\r\n   \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initProblemCategorys()\r\n    }\r\n    render(){\r\n        const {problemcategorys,loading,isShow}=this.state\r\n        const problemcategory=this.problemcategory||{}\r\n        const title=<Button type='primary' onClick={this.showAdd}><Icon type='block'/>新增</Button>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={problemcategorys}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE,ShowQuickJumper:true}}\r\n                />\r\n                \r\n                <Modal\r\n                  title={problemcategory._id ? \"编辑类别\" : '新增类别'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateProblemCategory}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    problemcategory={problemcategory}\r\n                    problemcategorys={problemcategorys}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nProblemCategory.propTypes={\r\n    problemCategoryReducer:PropTypes.object.isRequired,\r\n    rPcs:PropTypes.func.isRequired,\r\n    couPc:PropTypes.func.isRequired,\r\n    dPc:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        problemCategoryReducer:state.problemCategoryReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rPcs,couPc,dPc}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProblemCategory)","import React from 'react'\r\nimport {Icon} from 'antd'\r\n\r\nimport {BASE_BLUE} from '../../utils/colors'\r\nimport './index.less'\r\n\r\nexport default function PreviewBtn(props){\r\n    return(\r\n        <button {...props} className=\"linkbtn\" ><Icon type='eye' theme=\"filled\" style={{color:BASE_BLUE}}/></button>\r\n    )\r\n}","export const problemState=[\r\n{\r\n    label:'待处理',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'已处理',\r\n    value:'2',\r\n},\r\n{\r\n    label:'需跟进',\r\n    value:'3',\r\n}\r\n]\r\n\r\nexport const processingMode=[\r\n{\r\n    label:'远程处理',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'现场处理',\r\n    value:'2',\r\n},\r\n{\r\n    label:'内部处理',\r\n    value:'3',\r\n},\r\n{\r\n    label:'第三方处理',\r\n    value:'4',\r\n},\r\n{\r\n    label:'其他',\r\n    value:'5',\r\n}\r\n]\r\n\r\nexport const deviceRunSystem=[\r\n{\r\n    label:'Windows XP',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'Windows 7X86',\r\n    value:'2',\r\n},\r\n{\r\n    label:'Windows 7X64',\r\n    value:'3',\r\n},\r\n{\r\n    label:'Windows 10X86',\r\n    value:'4',\r\n},\r\n{\r\n    label:'Windows 10X64',\r\n    value:'5',\r\n},\r\n{\r\n    label:'Windows Server 2003',\r\n    value:'6',\r\n},\r\n{\r\n    label:'Windows Server 2008',\r\n    value:'7',\r\n},\r\n{\r\n    label:'Windows Server 2008 R2',\r\n    value:'8',\r\n},\r\n{\r\n    label:'Windows Server 2012',\r\n    value:'9',\r\n},\r\n{\r\n    label:'Windows Server 2012 R2',\r\n    value:'10',\r\n},\r\n{\r\n    label:'Windows Server 2016',\r\n    value:'11',\r\n},\r\n{\r\n    label:'Windows Server 2019',\r\n    value:'12',\r\n},\r\n{\r\n    label:'Linux',\r\n    value:'13',\r\n},\r\n{\r\n    label:'Unix',\r\n    value:'14',\r\n},\r\n{\r\n    label:'MacOS',\r\n    value:'15',\r\n},\r\n{\r\n    label:'其他',\r\n    value:'16',\r\n}\r\n]\r\n\r\nexport const deviceStatus=[\r\n{\r\n    label:'正常',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'维修',\r\n    value:'2',\r\n},\r\n{\r\n    label:'停用',\r\n    value:'3',\r\n}\r\n]\r\n\r\nexport const appFrameWork=[\r\n{\r\n    label:'B/S',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'C/S',\r\n    value:'2',\r\n},\r\n{\r\n    label:'Other',\r\n    value:'3',\r\n}\r\n]\r\n\r\nexport const dataBase=[\r\n{\r\n    label:'Oracle',\r\n    value:'1',   \r\n},\r\n{\r\n    label:'SQL Server',\r\n    value:'2',\r\n},\r\n{\r\n    label:'MySQL',\r\n    value:'3',\r\n},\r\n{\r\n    label:'PostgreSQL',\r\n    value:'4',\r\n},\r\n{\r\n    label:'MongoDB',\r\n    value:'5',\r\n},\r\n{\r\n    label:'IBM Db2',\r\n    value:'6',\r\n},\r\n{\r\n    label:'Redis',\r\n    value:'7',\r\n},\r\n{\r\n    label:'Microsoft Access',\r\n    value:'8',\r\n},\r\n{\r\n    label:'SQLite',\r\n    value:'9',\r\n},\r\n{\r\n    label:'Other',\r\n    value:'10',\r\n}\r\n]","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Select,Input,Button,Modal,Icon,Table,message,Tooltip,Tag} from 'antd'\r\n\r\nimport {BASE_GREEN,BASE_RED,BASE_BLUE} from '../../../../utils/colors'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport PreviewBtn from '../../../../components/previewbtn'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {processingMode} from '../../../../config/selectConfig'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rPrs,couPr,dPr,ePr} from '../../../../redux/actions/oapm-action'\r\nimport htmlToDraft from 'html-to-draftjs'\r\n\r\nconst Option=Select.Option\r\nconst { Search } = Input\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.rev=React.createRef()\r\n        this.state={\r\n            processedrecords:[],\r\n            total:0,\r\n            loading:false,\r\n            isShow:false,\r\n            searchName:'',  //搜素关键字\r\n            searchType:''    //搜素类型\r\n        }\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'记录时间',\r\n            dataIndex:'create_time',\r\n            width: 180,\r\n            render:(create_time)=>shortDate(create_time)\r\n        },\r\n        {\r\n            title:'问题情况',\r\n            dataIndex:'situation',\r\n            width: 250,\r\n            onCell: () => {\r\n                return {\r\n                    style: {\r\n                        maxWidth: 250,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        cursor:'pointer'\r\n                    }\r\n                }\r\n            },\r\n            render: (text) => <Tooltip placement=\"topLeft\" title={text}>{text}</Tooltip>\r\n        },\r\n        {\r\n            title:'解决办法',\r\n            dataIndex:'solution',\r\n            width: 250,\r\n            onCell: () => {\r\n                return {\r\n                    style: {\r\n                        maxWidth: 250,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        cursor:'pointer'\r\n                    }\r\n                }\r\n            },\r\n            render: (text) => {\r\n                const contentBlock=htmlToDraft(text)\r\n                if(contentBlock){\r\n                    let temp=''\r\n                    contentBlock.contentBlocks.forEach(t=>{\r\n                        temp+=t.text\r\n                    })\r\n                    return <Tooltip placement=\"topLeft\" title={temp}>{temp}</Tooltip>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title:'处理方式',\r\n            dataIndex:'processing_mode',\r\n            width: 150,\r\n            render:(processing_mode)=>{\r\n                let display=''\r\n                processingMode.forEach(pm=>{\r\n                    if(pm.value===processing_mode.toString()){\r\n                        display= pm.label\r\n                    }\r\n                })\r\n                return display\r\n            }\r\n        },\r\n        {\r\n            title:'问题状态',\r\n            width: 100,\r\n            dataIndex:'problem_state',\r\n            render:(problem_state)=>{\r\n                if(problem_state===1){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_RED}>待处理</Tag>\r\n                        </span>\r\n                    )\r\n                }else if(problem_state===2){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>已处理</Tag>\r\n                        </span>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_BLUE}>需跟进</Tag>\r\n                        </span>\r\n                    )\r\n                }\r\n                \r\n                \r\n            }\r\n        },\r\n        {\r\n            title:'发生部门',\r\n            dataIndex:'department',\r\n            width: 200,\r\n            render:(department)=>{\r\n                let result=''\r\n                for(let i=0;i<department.length;i++){\r\n                    result+=department[i].name+'/'\r\n                }\r\n                return result.substring(0,result.length-1)\r\n            }\r\n        },\r\n        {\r\n            title:'发现人',\r\n            dataIndex:'discoverer',\r\n            width: 80,\r\n            render:(discoverer)=>{\r\n                if(discoverer)\r\n                    return discoverer.name\r\n            }\r\n        },\r\n        {\r\n            title:'问题类别',\r\n            dataIndex:'problem_category',\r\n            width: 200,\r\n            render:(problem_category)=>{\r\n                return problem_category.name\r\n            }\r\n        },        \r\n        {\r\n            title:'处理人',\r\n            width: 80,\r\n            dataIndex:'handler',\r\n            render:(handler)=>{\r\n                return handler.name\r\n            }\r\n        },          \r\n        {\r\n            title:'操作',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render:(processedrecord)=>(\r\n            <span>\r\n                <PreviewBtn onClick={()=>this.props.history.push('/processedrecord/detail',{processedrecord})}/>&nbsp;&nbsp;&nbsp;\r\n                <EditBtn onClick={()=>this.props.history.push('/processedrecord/addorupdate',processedrecord)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteProcessedRecord(processedrecord)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    initProcessedRecords= async(pageNum)=>{\r\n        this.pageNum=pageNum\r\n        const isPage=true\r\n        this.setState({loading:true})\r\n        const{searchName,searchType}=this.state\r\n        if(searchName){\r\n            await this.props.rPrs({\r\n                isPage,\r\n                pageNum,\r\n                pageSize:PAGE_SIZE,\r\n                searchName,\r\n                searchType\r\n                })\r\n        }else{\r\n            await this.props.rPrs({isPage,pageNum,pageSize:PAGE_SIZE})\r\n        }\r\n        this.setState({loading:false})\r\n        const {total,list}=this.props.processedRecordReducer.data\r\n        this.setState({processedrecords:list,total})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.processedrecord=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(processedrecord)=>{\r\n        this.processedrecord=processedrecord\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    deleteProcessedRecord=(processedrecord)=>{\r\n        Modal.confirm({\r\n            title:'确认删除？',\r\n            onOk:async()=>{\r\n                await this.props.dPr(processedrecord._id)\r\n                const result=this.props.deleteProcessedRecord\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initProcessedRecords(1)\r\n                }\r\n            }\r\n        })\r\n    }\r\n   \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initProcessedRecords(1)\r\n    }\r\n    \r\n    render(){\r\n        const {processedrecords,total,loading,searchName,searchType}=this.state\r\n        const title=(<span>\r\n            <Button type='primary' onClick={()=>this.props.history.push('/processedrecord/addorupdate')}><Icon type='unordered-list'/>新增</Button>&nbsp;&nbsp;\r\n            <Button type='primary' onClick={async ()=>{await this.props.ePr()}}><Icon type=\"export\" />导出excel</Button>\r\n            </span>)\r\n        \r\n        const extra=(\r\n        <span className=\"searchbar\">\r\n            <Select \r\n            value={searchType} \r\n            className=\"searchbar-select\" \r\n            onChange={value=>this.setState({searchType:value})}\r\n            >\r\n                <Option value='situation'>问题情况</Option>\r\n                <Option value='solution'>解决办法</Option>\r\n            </Select>\r\n            <Search \r\n            className=\"searchbar-search\" \r\n            placeholder=\"搜索关键字\" \r\n            value={searchName} \r\n            onChange={event => this.setState({searchName:event.target.value})} \r\n            onSearch={()=>this.initProcessedRecords(1)}\r\n            enterButton />\r\n        </span>\r\n        )\r\n        return(\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={processedrecords}\r\n                columns={this.columns}\r\n                scroll={{ x: 1000 }}\r\n                pagination={{\r\n                    current:this.pageNum,\r\n                    defaultPageSize:PAGE_SIZE,\r\n                    ShowQuickJumper:true,\r\n                    total,\r\n                    onChange:this.initProcessedRecords\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes={\r\n    processedRecordReducer:PropTypes.object.isRequired,\r\n    rPrs:PropTypes.func.isRequired,\r\n    couPr:PropTypes.func.isRequired,\r\n    dPr:PropTypes.func.isRequired,\r\n    ePr:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        processedRecordReducer:state.processedRecordReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rPrs,couPr,dPr,ePr}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React from 'react'\r\nimport {Icon} from 'antd'\r\n\r\nimport {BASE_BLUE} from '../../utils/colors'\r\nimport './index.less'\r\n\r\nexport default function BackBtn(props){\r\n    return(\r\n        <button {...props} className=\"linkbtn\" ><Icon type='left' style={{color:BASE_BLUE}}/></button>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Upload,Icon,Modal,message} from 'antd'\r\n\r\nimport {BASE_IMG_URL,FILELIST_LENGTH} from '../../../../utils/constants'\r\n\r\nexport default class PicsWall extends Component{\r\n    \r\n    static proTypes={\r\n        imgs:PropTypes.array\r\n    }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        let fileList=[]\r\n        const {imgs}=this.props\r\n        if(imgs&&imgs.length>0){\r\n            let imgarr=imgs.split(',')\r\n            fileList=imgarr.map((ia,index)=>({\r\n                    uid:-index,\r\n                    name:ia,\r\n                    statur:'done',\r\n                    url:BASE_IMG_URL+ia\r\n                }\r\n            ))\r\n        }\r\n        this.state={\r\n            previewVisble:false,//显示大图\r\n            previewImage:'', //大图\r\n            fileList\r\n        }\r\n    }\r\n    //已上传图片数组\r\n    getImgs=()=>{\r\n        //return this.state.fileList.map(file=>file.name)\r\n        let obj=''\r\n        this.state.fileList.map(file=>\r\n            obj+=file.name+','\r\n        )\r\n        return obj.substring(0,obj.length-1)\r\n    }\r\n    \r\n    handleCancel=()=>this.setState({previewVisble:false})\r\n    \r\n    //预览\r\n    handlePreview=file=>{\r\n        this.setState({\r\n            previewImage:file.url||file.thumbUrl,\r\n            previewVisble:true,\r\n        })\r\n    }\r\n    handleChange=({file,fileList})=>{\r\n        if(file.status==='done'){\r\n            const result=file.response\r\n            if(result.status===1){\r\n                message.success('上传成功!')\r\n                const {data}=result\r\n                file=fileList[fileList.length-1]\r\n                file.name=data[0]\r\n                file.url=data[2]\r\n            }else{\r\n                message.error('上传失败!')\r\n            }\r\n            \r\n        }else if(file.status==='remove'){\r\n            /*const result=await reqDeleteImg(file.name)\r\n            if(result.status===0){\r\n                message.success('删除成功!')\r\n            }else{\r\n                message.error('删除失败!')\r\n            }*/\r\n        }\r\n        this.setState({fileList})\r\n        }\r\n    \r\n    render(){\r\n        const {previewImage,previewVisble,fileList}=this.state\r\n        const uploadButton=(\r\n            <div>\r\n                <Icon type=\"plus\"/>\r\n                <div>上传</div>\r\n            </div>\r\n        )\r\n        return(\r\n            <div>\r\n                <Upload\r\n                 action='/api/oapm/img/'\r\n                 accept='image/*'\r\n                 name='image'\r\n                 listType='picture-card'\r\n                 fileList={fileList}\r\n                 onPreview={this.handlePreview}\r\n                 onChange={this.handleChange}\r\n                >\r\n                {fileList.length>=FILELIST_LENGTH?null:uploadButton}\r\n                </Upload>\r\n                <Modal width='80%' visible={previewVisble} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt='' style={{width:'auto'}} src={previewImage}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState,convertToRaw,ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport default class RichTextEditor extends Component{\r\n    static propTypes={\r\n        solution:PropTypes.string\r\n    }\r\n    state={\r\n        editorState:EditorState.createEmpty()\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        const html=this.props.solution\r\n        if(html){\r\n            const contentBlock=htmlToDraft(html)\r\n            if(contentBlock){\r\n                const contentState=ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n                const editorState=EditorState.createWithContent(contentState)\r\n                this.state={\r\n                    editorState\r\n                }\r\n            }\r\n        }else{\r\n            this.state={\r\n                editorState:EditorState.createEmpty()\r\n            }\r\n            const html='<p>医保管理-医保项目管理-对码</p>'\r\n            const contentBlock=htmlToDraft(html)\r\n            if(contentBlock){\r\n                const contentState=ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n                const editorState=EditorState.createWithContent(contentState)\r\n                this.state={\r\n                     editorState\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    onEditorStateChange=(editorState)=>{\r\n        this.setState({\r\n            editorState\r\n        })\r\n    }\r\n    \r\n    getSolution=()=>{\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    }\r\n    \r\n    upLoadImageCallBack=(file)=>{\r\n        return new Promise(\r\n            (resolve,reject)=>{\r\n                const xhr=new XMLHttpRequest()\r\n                xhr.open('POST','/oapm/img/upload')\r\n                const data=new FormData()\r\n                data.append('image',file)\r\n                xhr.send(data)\r\n                xhr.addEventListener('load',()=>{\r\n                    const response=JSON.parse(xhr.reponseText)\r\n                    const url=response.data.url\r\n                    resolve({data:{link:url}})\r\n                })\r\n                xhr.addEventListener('error',()=>{\r\n                    const error=JSON.parse(xhr.responseText)\r\n                    reject(error)\r\n                })\r\n            }\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        const {editorState}=this.state\r\n        return(\r\n            <div>\r\n            <Editor \r\n            editorState={editorState}\r\n            editorStyle={{border:'1px solid #CCCCCC',minHeight:200,paddingLeft:10}}\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            toolbar={{\r\n                image:{uploadCallback:this.upLoadImageCallBack,alt:{present:true,mandatory:true}}\r\n            }}/>\r\n            {/*<textarea disabled\r\n            value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n            />*/}\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Card,Form,Input,Select,Button,Icon,DatePicker,message} from 'antd'\r\nimport BackBtn from '../../../../components/backbtn'\r\nimport PicsWall from './picswall'\r\nimport RichTextEditor from './richtexteditor'\r\n\r\nimport {rPrs,couPr,rPcs} from '../../../../redux/actions/oapm-action'\r\nimport {rDeps,rUs} from '../../../../redux/actions/account-action'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {problemState,processingMode} from '../../../../config/selectConfig'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Form.Item\r\nconst {Option}=Select\r\nconst {TextArea}=Input\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddOrUpdate extends Component{\r\n    state={\r\n        departments:[],\r\n        users:[],\r\n        problemcategorys:[],\r\n    }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.pw=React.createRef()\r\n        this.editor=React.createRef()\r\n    }\r\n    \r\n    initProblemCategorys=async ()=>{\r\n        await this.props.rPcs()\r\n        const result=this.props.problemCategoryReducer\r\n        const problemcategorys=result.data\r\n        this.setState({problemcategorys}) \r\n    }\r\n    \r\n    handleSearchDepartments=async value =>{\r\n        if(value){\r\n            await this.props.rDeps({'code':value})\r\n            await this.props.rDeps({'name':value})\r\n            const result=this.props.departmentReducer\r\n            const departments=result.data\r\n            this.setState({departments})            \r\n        }else{\r\n            this.setState({departments:[]})\r\n        }\r\n        \r\n    }\r\n    \r\n    handleSearchUsers=async value =>{\r\n        if(value){\r\n            await this.props.rUs({'username':value})\r\n            await this.props.rUs({'name':value})\r\n            const result=this.props.userReducer\r\n            const users=result.data\r\n            this.setState({users})            \r\n        }else{\r\n            this.setState({users:[]})\r\n        }\r\n    }\r\n    \r\n    displayRender=(label)=> {\r\n        return label[label.length - 1]\r\n    }\r\n\r\n    submit=()=>{\r\n        this.props.form.validateFields(async(error,values)=>{\r\n            if(!error){\r\n                const {\r\n                    create_time,\r\n                    problem_state,\r\n                    department,\r\n                    discoverer,\r\n                    problem_category,\r\n                    processing_mode,\r\n                    handler,\r\n                    situation\r\n                }=values\r\n                const imgs=this.pw.current.getImgs()\r\n                const solution=this.editor.current.getSolution()\r\n                const seldep=[]\r\n                seldep.push(department)\r\n                const processedrecord={\r\n                    create_time,\r\n                    problem_state,\r\n                    department:seldep,\r\n                    discoverer,\r\n                    problem_category,\r\n                    processing_mode,\r\n                    handler,\r\n                    situation,\r\n                    solution,\r\n                    imgs\r\n                }\r\n                if(this.isUpdate){\r\n                    processedrecord._id=this.processedrecord._id\r\n                }\r\n                await this.props.couPr(processedrecord)\r\n                const result=this.props.processedRecordReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.props.history.goBack()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initProblemCategorys()\r\n        \r\n        const processedrecord=this.props.location.state\r\n        this.isUpdate=!!processedrecord\r\n        //{}空对象 避免undifine\r\n        this.processedrecord=processedrecord ||{}\r\n    }\r\n    render(){\r\n        const {users,departments,problemcategorys}=this.state\r\n        const departmentoptions = departments.map(d => <Option key={d._id} >{d.name}</Option>)\r\n        const useroptions = users.map(d => <Option key={d._id} >{d.username}-{d.name}</Option>)\r\n        const {isUpdate,processedrecord}=this\r\n        const {\r\n            create_time,\r\n            problem_state,\r\n            department,\r\n            discoverer,\r\n            problem_category,\r\n            processing_mode,\r\n            handler,\r\n            situation,\r\n            solution,\r\n            imgs\r\n        }=processedrecord\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:4},\r\n            wrapperCol:{span:8}\r\n        }\r\n\r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>{isUpdate ? '更新记录':'新增记录'}</span>\r\n            </span>\r\n        )\r\n        return(\r\n            <Card title={title}>\r\n                <Form {...formItemLayout}>\r\n                    <Item label=\"记录时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue:isUpdate ? moment(create_time,'YYYY-MM-DD') : moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'记录时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"问题状态\">\r\n                    {getFieldDecorator('problem_state',{\r\n                        initialValue:isUpdate ? problem_state.toString() :'2',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'问题状态不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            problemState.map(ps=><Option key={ps.value} value={ps.value}>{ps.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"发生部门\">\r\n                    {getFieldDecorator('department',{\r\n                        initialValue:department? department[department.length-1]._id :2,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'发生部门不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"选择部门\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchDepartments}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {departmentoptions}\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"发现人\">\r\n                    {getFieldDecorator('discoverer',{\r\n                        initialValue:discoverer ? discoverer._id : 1,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'发现人不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"选择发现人\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchUsers}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {useroptions}\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"问题类别\">\r\n                    {getFieldDecorator('problem_category',{\r\n                        initialValue:isUpdate ? problem_category._id : 2,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'问题类别不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            problemcategorys.map(pc=><Option key={pc._id} value={pc._id}>{pc.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"处理方式\">\r\n                    {getFieldDecorator('processing_mode',{\r\n                        initialValue:isUpdate ? processing_mode.toString() : '3',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'处理方式不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            processingMode.map(pm=><Option key={pm.value} value={pm.value}>{pm.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"处理人\">\r\n                    {getFieldDecorator('handler',{\r\n                        initialValue:isUpdate ? handler._id : 1,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'处理人不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"选择处理人\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchUsers}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {useroptions}\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"问题情况\">\r\n                    {getFieldDecorator('situation',{\r\n                        initialValue:isUpdate ? situation : '病人预结或结账提示有项目未对码',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'问题情况不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <TextArea placeholder='' autoSize={{minRows:2,maxRows:6}}/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"解决办法\" labelCol={{span:4}} wrapperCol={{span:20}}>\r\n                    {getFieldDecorator('solution',{\r\n                        initialValue:isUpdate ? solution : '医保管理-医保项目管理-对码',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'解决办法不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <RichTextEditor ref={this.editor} solution={solution}/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"相关图片\">\r\n                        <PicsWall ref={this.pw} imgs={imgs}/>\r\n                    </Item>\r\n                    <Item>\r\n                        <Button type='primary' onClick={this.submit}><Icon type=\"save\"/>提交</Button>&nbsp;&nbsp;\r\n                        <Button type='danger'><Icon type=\"close\" />取消</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        processedRecordReducer:state.processedRecordReducer,\r\n        departmentReducer:state.departmentReducer,\r\n        userReducer:state.userReducer,\r\n        problemCategoryReducer:state.problemCategoryReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rPrs,couPr,rPcs,rDeps,rUs}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Form.create()(AddOrUpdate))","import React,{Component} from 'react';\r\n\r\nimport {Card,Icon,Descriptions, Badge,Empty,Modal} from 'antd'\r\nimport {BASE_GREEN,BASE_RED,BASE_BLUE} from '../../../../utils/colors'\r\nimport {BASE_IMG_URL} from '../../../../utils/constants'\r\nimport BackBtn from '../../../../components/backbtn'\r\nimport {processingMode} from '../../../../config/selectConfig'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Descriptions.Item\r\n\r\nexport default class ProcessedRecordDetail extends Component{\r\n    state={\r\n        previewVisble:false,//显示大图\r\n        previewImage:'', //大图\r\n        stateDisplay:'',\r\n        processing_modeDisplay:''\r\n    }\r\n    \r\n    getstateDisplay=()=>{\r\n        const {problem_state}=this.props.location.state.processedrecord\r\n        const stateDisplay=problem_state===1 ? (\r\n            <Badge color={BASE_RED} text=\"待处理\" />\r\n        ) :(problem_state===2 ? (\r\n            <Badge color={BASE_GREEN} text=\"已处理\" />\r\n        ):(\r\n            <Badge color={BASE_BLUE} text=\"需跟进\" />\r\n        ))\r\n        this.setState({stateDisplay})\r\n    }\r\n    \r\n    getprocessingModeDisplay=()=>{\r\n        const {processing_mode}=this.props.location.state.processedrecord\r\n        processingMode.forEach(pm=>{\r\n            if(processing_mode.toString()===pm.value){\r\n                this.setState({processing_modeDisplay:pm.label})\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleCancel=()=>this.setState({previewVisble:false})\r\n    \r\n    //预览\r\n    handlePreview=img=>{\r\n        this.setState({\r\n            previewImage:BASE_IMG_URL+img,\r\n            previewVisble:true,\r\n        })\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getstateDisplay()\r\n        this.getprocessingModeDisplay()\r\n    }\r\n    /*\r\n    HashRouter\r\n    卸载之前清除保存数据\r\n    componentDidUnMount(){\r\n        memUtils.processedrecord={}\r\n    }\r\n    */\r\n    render(){\r\n        const {\r\n            create_time,\r\n            situation,\r\n            solution,\r\n            department,\r\n            discoverer,\r\n            problem_category,\r\n            handler,\r\n            imgs\r\n        }=this.props.location.state.processedrecord\r\n        /*\r\n        HashRouter\r\n        const {create_time,\r\n        situation,\r\n        solution,\r\n        processing_mode,\r\n        departmentId,\r\n        discoverer,\r\n        problem_category,\r\n        handler,\r\n        pics\r\n        }=memUtils.processedrecord\r\n        */\r\n        let departmentNames=''\r\n        department.forEach(dep=>{\r\n            departmentNames+=dep.name+'/'\r\n        })\r\n        const {previewImage,previewVisble,stateDisplay,processing_modeDisplay}=this.state\r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>记录详情</span>\r\n            </span>\r\n        )\r\n        const icreate_time=(<span><Icon type=\"clock-circle\"/>&nbsp;记录时间</span>)\r\n        const istateDisplay=(<span><Icon type=\"sync\" />&nbsp;问题状态</span>)\r\n        const idepartmentId=(<span><Icon type=\"apartment\"/>&nbsp;发生部门</span>)\r\n        const idiscoverer=(<span><Icon type=\"user\"/>&nbsp;发现人</span>)\r\n        const iproblem_category=(<span><Icon type=\"cluster\" />&nbsp;问题类别</span>)\r\n        const iprocessing_mode=(<span><Icon type=\"share-alt\" />&nbsp;处理方式</span>)\r\n        const ihandler=(<span><Icon type=\"user\"/>&nbsp;处理人</span>)\r\n        const isituation=(<span><Icon type=\"solution\" />&nbsp;问题情况</span>)\r\n        const isolution=(<span><Icon type=\"check-square\" />&nbsp;解决办法</span>)\r\n        const ipic=(<span><Icon type=\"file-image\"/>&nbsp;相关图片</span>)\r\n        return(\r\n            <Card title={title}>\r\n              <Descriptions bordered>\r\n                <Item label={icreate_time} span={2}>{formateDate(create_time)}</Item>\r\n                <Item label={istateDisplay}>{stateDisplay}</Item>\r\n                <Item label={idepartmentId} span={2}>{departmentNames.substring(0,departmentNames.length-1)}</Item>\r\n                <Item label={idiscoverer}>{discoverer?discoverer.name:''}</Item>\r\n                <Item label={iproblem_category}>{problem_category.name}</Item>\r\n                <Item label={iprocessing_mode}>{processing_modeDisplay}</Item>\r\n                <Item label={ihandler}>{handler.name}</Item>\r\n                <Item label={isituation} span={3}>{situation}</Item>\r\n                <Item label={isolution} span={3}><span dangerouslySetInnerHTML={{__html:solution}}></span></Item>\r\n                <Item label={ipic} span={3}>\r\n                {\r\n                    imgs ? imgs.split(',').map(img=>(\r\n                            <a key={img} onClick={()=>{this.handlePreview(img)}}>\r\n                            <img\r\n                            key={img}\r\n                            className=\"processedrecord-img\"\r\n                            src={BASE_IMG_URL+img}\r\n                            alt=\"img\"/>\r\n                            </a>\r\n                        )\r\n                    ):<Empty />\r\n                }\r\n                </Item>\r\n              </Descriptions>\r\n              <Modal width='80%' visible={previewVisble} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt='' style={{width:'auto'}} src={previewImage}/>\r\n                </Modal>\r\n            </Card>  \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport './index.less'\r\n\r\nimport Home from './home'\r\nimport AddOrUpdate from './addorupdate'\r\nimport Detail from './detail'\r\n\r\nexport default class ProcessedRecord extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path='/processedrecord' component={Home} exact/>\r\n                <Route path='/processedrecord/addorupdate' component={AddOrUpdate}/>\r\n                <Route path='/processedrecord/detail' component={Detail}/>\r\n                <Redirect to='/processedrecord' />\r\n            </Switch>\r\n        )\r\n    }\r\n}","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    GET_DEVICECATEGORY,\r\n    COU_DEVICECATEGORY,\r\n    DEL_DEVICECATEGORY,\r\n    GET_DEVICEMODEL,\r\n    COU_DEVICEMODEL,\r\n    DEL_DEVICEMODEL,\r\n    GET_INSTALLLOCATION,\r\n    COU_INSTALLLOCATION,\r\n    DEL_INSTALLLOCATION,\r\n    GET_DEVICEINFO,\r\n    COU_DEVICEINFO,\r\n    DEL_DEVICEINFO\r\n} from '../actiontypes'\r\n\r\nimport {\r\n    rDeviceCategorys,\r\n    couDeviceCategory,\r\n    dDeviceCategory,\r\n    rDeviceModels,\r\n    couDeviceModel,\r\n    dDeviceModel,\r\n    rInstallLocations,\r\n    couInstallLocation,\r\n    dInstallLocation,\r\n    rDeviceInfos,\r\n    couDeviceInfo,\r\n    dDeviceInfo\r\n} from '../../api'\r\n\r\n\r\n//获取设备类别\r\nconst rDeviceCategorysAction = data =>({\r\n    type:GET_DEVICECATEGORY,\r\n    data\r\n})\r\nexport const rDcs = devicecategory => async dispatch => {\r\n    const result = await rDeviceCategorys(devicecategory)\r\n    if(result.status === 1){\r\n        dispatch(rDeviceCategorysAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改设备类别\r\nconst couDeviceCategoryAction = (msg,status) =>({\r\n    type:COU_DEVICECATEGORY,\r\n    msg,\r\n    status\r\n})\r\nexport const couDc = devicecategory => async dispatch=>{\r\n    const result=await couDeviceCategory(devicecategory)\r\n    dispatch(couDeviceCategoryAction(result.msg,result.status))\r\n}\r\n\r\n//删除设备类别\r\nconst dDeviceCategoryAction = (msg,status) =>({\r\n    type:DEL_DEVICECATEGORY,\r\n    msg,\r\n    status\r\n})\r\nexport const dDc = devicecategoryId => async dispatch=>{\r\n    const result = await dDeviceCategory(devicecategoryId)\r\n    dispatch(dDeviceCategoryAction(result.msg,result.status))\r\n}\r\n\r\n//获取设备型号\r\nconst rDeviceModelsAction = data =>({\r\n    type:GET_DEVICEMODEL,\r\n    data\r\n})\r\nexport const rDms = devicemodel => async dispatch => {\r\n    const result = await rDeviceModels(devicemodel)\r\n    if(result.status === 1){\r\n        dispatch(rDeviceModelsAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改设备型号\r\nconst couDeviceModelAction = (msg,status) =>({\r\n    type:COU_DEVICEMODEL,\r\n    msg,\r\n    status\r\n})\r\nexport const couDm = devicemodel => async dispatch=>{\r\n    const result=await couDeviceModel(devicemodel)\r\n    dispatch(couDeviceModelAction(result.msg,result.status))\r\n}\r\n\r\n//删除设备型号\r\nconst dDeviceModelAction = (msg,status) =>({\r\n    type:DEL_DEVICEMODEL,\r\n    msg,\r\n    status\r\n})\r\nexport const dDm = devicemodelId => async dispatch=>{\r\n    const result = await dDeviceModel(devicemodelId)\r\n    dispatch(dDeviceModelAction(result.msg,result.status))\r\n}\r\n\r\n//获取安装地点\r\nconst rInstallLocationsAction = data =>({\r\n    type:GET_INSTALLLOCATION,\r\n    data\r\n})\r\nexport const rIls = installlocation => async dispatch => {\r\n    const result = await rInstallLocations(installlocation)\r\n    if(result.status === 1){\r\n        dispatch(rInstallLocationsAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改安装地点\r\nconst couInstallLocationAction = (msg,status) =>({\r\n    type:COU_INSTALLLOCATION,\r\n    msg,\r\n    status\r\n})\r\nexport const couIl = installlocation => async dispatch=>{\r\n    const result=await couInstallLocation(installlocation)\r\n    dispatch(couInstallLocationAction(result.msg,result.status))\r\n}\r\n\r\n//删除安装地点\r\nconst dInstallLocationAction = (msg,status) =>({\r\n    type:DEL_INSTALLLOCATION,\r\n    msg,\r\n    status\r\n})\r\nexport const dIl = installlocationId => async dispatch=>{\r\n    const result = await dInstallLocation(installlocationId)\r\n    dispatch(dInstallLocationAction(result.msg,result.status))\r\n}\r\n\r\n//获取设备信息\r\nconst rDeviceInfoAction = data =>({\r\n    type:GET_DEVICEINFO,\r\n    data\r\n})\r\nexport const rDis = deviceinfo => async dispatch => {\r\n    const result = await rDeviceInfos(deviceinfo)\r\n    if(result.status === 1){\r\n        dispatch(rDeviceInfoAction(result.data))\r\n    }\r\n  }\r\n\r\n//新增修改设备信息\r\nconst couDeviceInfoAction = (msg,status) =>({\r\n    type:COU_DEVICEINFO,\r\n    msg,\r\n    status\r\n})\r\nexport const couDi = deviceinfo => async dispatch=>{\r\n    const result=await couDeviceInfo(deviceinfo)\r\n    dispatch(couDeviceInfoAction(result.msg,result.status))\r\n}\r\n\r\n//删除设备信息\r\nconst dDeviceInfoAction = (msg,status) =>({\r\n    type:DEL_DEVICEINFO,\r\n    msg,\r\n    status\r\n})\r\nexport const dDi = deviceinfoId => async dispatch=>{\r\n    const result = await dDeviceInfo(deviceinfoId)\r\n    dispatch(dDeviceInfoAction(result.msg,result.status))\r\n}","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Select} from 'antd'\r\nimport {appFrameWork,dataBase} from '../../../../config/selectConfig'\r\n\r\nconst Item=Form.Item\r\nconst {TextArea}=Input\r\nconst Option=Select.Option\r\n\r\nclass AddForm extends PureComponent{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        applicationsoftware:PropTypes.object\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {applicationsoftware,deviceinfos}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='应用名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:applicationsoftware.name,\r\n                        rules:[\r\n                        {required:true,message:'应用名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入应用名称名!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='架构' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('framework',{\r\n                        initialValue:applicationsoftware.framework,\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            appFrameWork.map(item=><Option key={item.value} value={item.value}>{item.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='数据库' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('database',{\r\n                        initialValue:applicationsoftware.database,\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            dataBase.map(item=><Option key={item.value} value={item.value}>{item.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='安装设备' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('device',{\r\n                        initialValue:applicationsoftware.device,\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            deviceinfos.map(item=><Option key={item._id} value={item._id}>{'名称:'+item.name+' ip:'+item.ip}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='部署方法' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('deployment',{\r\n                        initialValue:applicationsoftware.deployment,\r\n                    })(\r\n                        <TextArea placeholder='' autoSize={{minRows:2,maxRows:6}}/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal,Tooltip} from 'antd'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {appFrameWork,dataBase} from '../../../../config/selectConfig'\r\nimport {rAppss,couApps,dApps} from '../../../../redux/actions/oapm-action'\r\nimport {rDis} from '../../../../redux/actions/informationdevice-action'\r\nimport AddForm from './addform'\r\n\r\nclass ApplicationSoftWare extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            applicationsoftwares:[],\r\n            deviceinfos:[],\r\n            loading:false,\r\n            isShow:false,\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },{\r\n            title:'架构',\r\n            dataIndex:'framework',\r\n            render:(framework)=>this.getFramework(framework),\r\n        },{\r\n            title:'数据库',\r\n            dataIndex:'database',\r\n            render:(database)=>this.getDatabase(database),\r\n        },{\r\n            title:'安装设备',\r\n            dataIndex:'device',\r\n            render:(device)=>{\r\n                for(let key in this.DeviceinfoNames){\r\n                    if(device.toString()===key){\r\n                        return this.DeviceinfoNames[key]\r\n                    }\r\n                }\r\n            }\r\n        },{\r\n            title:'部署',\r\n            dataIndex:'deployment',\r\n            onCell: () => {\r\n                return {\r\n                    style: {\r\n                        maxWidth: 250,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        cursor:'pointer'\r\n                    }\r\n                }\r\n            },\r\n            render: (text) => <Tooltip placement=\"topLeft\" title={text}>{text}</Tooltip>\r\n        },{\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },{\r\n            title:'操作',\r\n            width:300,\r\n            render:(applicationsoftware)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(applicationsoftware)} />&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteApplicationSoftWare(applicationsoftware)} />\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    getFramework=framework=>{\r\n        let display=''\r\n        appFrameWork.forEach((item)=>{\r\n            if(item.value===String(framework)){\r\n                display= item.label\r\n            }\r\n        })\r\n        return display\r\n    }\r\n    getDatabase=database=>{\r\n        let display=''\r\n        dataBase.forEach((item)=>{\r\n            if(item.value===String(database)){\r\n                display= item.label\r\n            }\r\n        })\r\n        return display\r\n    }\r\n    initDeviceinfoNames=async deviceinfos =>{\r\n        const DeviceinfoNames=deviceinfos? deviceinfos.reduce((pre,deviceinfo)=>{\r\n            pre[deviceinfo._id]=deviceinfo.name\r\n            return pre\r\n        },{}):[]\r\n        this.DeviceinfoNames=DeviceinfoNames\r\n    }\r\n    \r\n    initApplicationSoftWares= async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rAppss()\r\n        this.setState({loading:false})\r\n        this.setState({applicationsoftwares:this.props.applicationSoftwareReducer.data})\r\n        await this.props.rDis({'isPage':false})\r\n        const dis=this.props.deviceinfoReducer.data.list\r\n        this.initDeviceinfoNames(dis)\r\n        this.setState({deviceinfos:dis})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.applicationsoftware=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(applicationsoftware)=>{\r\n        this.applicationsoftware=applicationsoftware\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    addOrUpdateApplicationSoftWare=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const applicationsoftware=values\r\n                this.form.resetFields()\r\n                if(this.applicationsoftware){\r\n                    applicationsoftware._id=this.applicationsoftware._id\r\n                }\r\n                await this.props.couApps(applicationsoftware)\r\n                const result=this.props.applicationSoftwareReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initApplicationSoftWares()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    deleteApplicationSoftWare=(applicationsoftware)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+applicationsoftware.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dApps(applicationsoftware._id)\r\n                const result=this.props.applicationSoftwareReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initApplicationSoftWares()\r\n                }\r\n            }\r\n        })\r\n    }\r\n   \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initApplicationSoftWares()\r\n    }\r\n    render(){\r\n        const {applicationsoftwares,loading,isShow,deviceinfos}=this.state\r\n        const applicationsoftware=this.applicationsoftware||{}\r\n        const title=<Button type='primary' onClick={this.showAdd}><Icon type='block'/>新增</Button>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={applicationsoftwares}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE,ShowQuickJumper:true}}\r\n                />\r\n                \r\n                <Modal\r\n                  title={applicationsoftware._id ? \"编辑应用\" : '新增应用'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateApplicationSoftWare}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    applicationsoftware={applicationsoftware}\r\n                    deviceinfos={deviceinfos}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nApplicationSoftWare.propTypes={\r\n    applicationSoftwareReducer:PropTypes.object.isRequired,\r\n    deviceinfoReducer:PropTypes.object.isRequired,\r\n    rAppss:PropTypes.func.isRequired,\r\n    couApps:PropTypes.func.isRequired,\r\n    dApps:PropTypes.func.isRequired,\r\n    rDis:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationSoftwareReducer:state.applicationSoftwareReducer,\r\n        deviceinfoReducer:state.deviceinfoReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rAppss,couApps,dApps,rDis}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationSoftWare)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Select,DatePicker} from 'antd'\r\nimport {rDeviceModels,rDeviceCategorys,rDeviceInfos} from '../../../../api'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddForm extends PureComponent{\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        printerrepair:PropTypes.object\r\n    }\r\n    \r\n    state={\r\n        devicecategorys:[],\r\n        devicemodels:[],\r\n        deviceinfos:[]\r\n    }\r\n    //初始化设备类别\r\n    initDeviceCategorys=async()=>{\r\n        this.setState({devicecategorys:[]})\r\n        const result=await rDeviceCategorys()\r\n        if(result.status===1){\r\n            this.setState({devicecategorys:result.data})\r\n        }\r\n    }\r\n    //根据类别初始化select型号\r\n    getDM=async value =>{\r\n        this.setState({devicemodels:[]})\r\n        const result=await rDeviceModels({'devicecategory':value})\r\n        if(result.status===1){\r\n            this.setState({devicemodels:result.data})\r\n        }  \r\n    }\r\n    //根据型号id初始化select设备\r\n    getDeviceInfos=async value =>{\r\n        this.setState({deviceinfos:[]})\r\n        const result=await rDeviceInfos({'isPage':false,'devicemodel':value})\r\n        if(result.status===1){\r\n            this.setState({deviceinfos:result.data.list})\r\n        }  \r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initDeviceCategorys()\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {devicecategorys,devicemodels,deviceinfos}=this.state\r\n        const {printerrepair,users}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"类别\">\r\n                {\r\n                getFieldDecorator('devicecategory')\r\n                (\r\n                    <Select onChange={this.getDM}>\r\n                        {\r\n                            devicecategorys.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label=\"型号\">\r\n                {\r\n                getFieldDecorator('devicemodel')\r\n                (\r\n                    <Select onChange={this.getDeviceInfos}>\r\n                        {\r\n                            devicemodels.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='设备' >\r\n                {\r\n                    getFieldDecorator('printer',{\r\n                        initialValue:printerrepair.printer,\r\n                        rules:[\r\n                        {required:true,message:'设备不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            deviceinfos.map(item=><Option key={item._id} value={item._id}>{item.sn}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label=\"处理时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue:printerrepair.create_time ? moment(printerrepair.create_time,'YYYY-MM-DD') : moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'处理时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                </Item>\r\n                <Item label=\"处理人员\">\r\n                    {getFieldDecorator('handler',{\r\n                        initialValue:printerrepair.handler,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'处理人员不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            users.map(ru=><Option key={ru._id} value={ru._id}>{ru.username}{ru.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\n\r\nimport {Form,Input,Select} from 'antd'\r\nimport {rPrinterRepairs} from '../../../../api'\r\n\r\nconst Option=Select.Option\r\n\r\nexport default class ReviewForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            nums:0,\r\n            user:1\r\n        }\r\n    }\r\n    \r\n    gethandler=()=>this.state.user\r\n    \r\n    getHanelerNums=async(value)=>{\r\n        this.setState({nums:0})\r\n        const result=await rPrinterRepairs({'handler':value,'status':false})\r\n        if(result.status===1){\r\n            let nums=0\r\n            for(let i=0;i<result.data.length;i++){\r\n                nums+=1\r\n            }\r\n            this.setState({nums,user:value})\r\n        }\r\n    }    \r\n    \r\n    render(){\r\n        const {users}=this.props\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        \r\n        return(\r\n            <Form>\r\n                <Form.Item label='处理人员' {...formItemLayout}>\r\n                    <Select onChange={value=>this.getHanelerNums(value)}>\r\n                        {\r\n                            users.map(item=><Option key={item._id} value={item._id}>{item.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                <Input value={this.state.nums} disabled/>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal,Tag} from 'antd'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate,shortDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {BASE_GREEN,BASE_YELLOW} from '../../../../utils/colors'\r\nimport {rPrps,couPrp,dPrp,rePrp} from '../../../../redux/actions/oapm-action'\r\nimport {rUs,rGro} from '../../../../redux/actions/account-action'\r\nimport {rDis} from '../../../../redux/actions/informationdevice-action'\r\nimport AddForm from './addform'\r\nimport ReviewForm from './reviewform'\r\n\r\nclass PrinterRepair extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.rev=React.createRef()\r\n        this.state={\r\n            printerrepairs:[],\r\n            loading:false,\r\n            isShow:false,\r\n            reviewShow:false,\r\n            users:[],\r\n            deviceinfos:[]\r\n        }\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'日期',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },{\r\n            title:'类别/型号/编号',\r\n            dataIndex:'printer',\r\n            render:(printer)=>{\r\n                let display=''\r\n                this.state.deviceinfos.forEach(di=>{\r\n                    if(printer===di.id){\r\n                        display=di.text\r\n                    }\r\n                })\r\n                return display\r\n            }\r\n        },{\r\n            title:'处理人员',\r\n            dataIndex:'handler',\r\n            render:(_handler)=>{\r\n                let display=''\r\n                this.state.users.forEach(user=>{\r\n                    if(_handler===user._id){\r\n                        display=user.name\r\n                    }\r\n                })\r\n                return display\r\n            }\r\n        },{\r\n            title:'状态',\r\n            dataIndex:'status',\r\n            render:(status)=>{\r\n                if(status){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>已审核</Tag>\r\n                        </span>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_YELLOW}>未审核</Tag>\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },{\r\n            title:'操作',\r\n            width:300,\r\n            render:(printerrepair)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(printerrepair)} />&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deletePrinterRepair(printerrepair)} />\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    //初始化table设备类别/型号/sn列显示\r\n    initDeviceinfos=async()=>{\r\n        this.setState({deviceinfos:[]})\r\n        await this.props.rDis({'isPage':false})\r\n        const result=this.props.deviceinfoReducer\r\n        const list=[]\r\n        const obj=result.data.list\r\n        for(let i=0;i<obj.length;i++){\r\n            list.push({'id':obj[i]._id,'text':obj[i].devicemodel.devicecategory.name+'/'+obj[i].devicemodel.name+'/'+obj[i].sn})\r\n        }\r\n        this.setState({deviceinfos:list})\r\n    }\r\n    //初始化用户用于传子控件\r\n    initUsers=async()=>{\r\n        await this.props.rGro({'name':'信息科'})\r\n        const gs=this.props.groupReducer\r\n        const g=gs.data[0]._id\r\n        await this.props.rUs({'group':g})\r\n        const result=this.props.userReducer\r\n        const users=result.data\r\n        this.setState({users})            \r\n    }\r\n    \r\n    initPrinterRepairs= async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rPrps()\r\n        this.setState({loading:false})\r\n        this.setState({printerrepairs:this.props.printerRepairReducer.data})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.printerrepair=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(printerrepair)=>{\r\n        this.printerrepair=printerrepair\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showReview=()=>{\r\n        this.setState({reviewShow:true})\r\n    }\r\n    \r\n    addOrUpdatePrinterRepair=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const printerrepair=values\r\n                printerrepair.create_time=shortDate(values['create_time'])\r\n                this.form.resetFields()\r\n                if(this.printerrepair){\r\n                    printerrepair._id=this.printerrepair._id\r\n                }\r\n                await this.props.couPrp(printerrepair)\r\n                const result=this.props.rePrinterRepair\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initPrinterRepairs()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }   \r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    deletePrinterRepair=(printerrepair)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+printerrepair.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dPrp(printerrepair._id)\r\n                const result=this.props.printerRepairReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initPrinterRepairs()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    reviewPrinterRepair=async()=>{\r\n        this.setState({reviewShow:false})\r\n        const handler=this.rev.current.gethandler()\r\n        await this.props.rePrp(handler)\r\n        const result=this.props.printerRepairReducer\r\n        if(result.status===1){\r\n            message.success(result.msg)\r\n            this.initPrinterRepairs()\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initDeviceinfos()\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initPrinterRepairs()\r\n        this.initUsers()\r\n    }\r\n    render(){\r\n        const {printerrepairs,loading,isShow,reviewShow,users}=this.state\r\n        const printerrepair=this.printerrepair||{}\r\n        const title=<span>\r\n            <Button type='primary' onClick={this.showAdd}><Icon type='tool'/>新增</Button>&nbsp;&nbsp;\r\n            <Button type='primary' onClick={this.showReview}><Icon type='file-done'/>审核</Button>\r\n        </span>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={printerrepairs}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE,ShowQuickJumper:true}}\r\n                />\r\n                \r\n                <Modal\r\n                  title={printerrepair._id ? \"编辑\" : '新增'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdatePrinterRepair}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    users={users}\r\n                    printerrepair={printerrepair}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                  title={\"审核\" }\r\n                  visible={reviewShow}\r\n                  onOk={this.reviewPrinterRepair}\r\n                  onCancel={()=>{\r\n                      this.setState({reviewShow:false})\r\n                  }}\r\n                >\r\n                    <ReviewForm\r\n                    users={users}\r\n                    ref={this.rev} \r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nPrinterRepair.propTypes={\r\n    userReducer:PropTypes.object.isRequired,\r\n    groupReducer:PropTypes.object.isRequired,\r\n    printerRepairReducer:PropTypes.object.isRequired,\r\n    rPrps:PropTypes.func.isRequired,\r\n    couPrp:PropTypes.func.isRequired,\r\n    dPrp:PropTypes.func.isRequired,\r\n    rDis:PropTypes.func.isRequired,\r\n    rUs:PropTypes.func.isRequired,\r\n    rGro:PropTypes.func.isRequired,\r\n    rePrp:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userReducer:state.userReducer,\r\n        groupReducer:state.groupReducer,\r\n        printerRepairReducer:state.printerRepairReducer,\r\n        deviceinfoReducer:state.deviceinfoReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rPrps,couPrp,dPrp,rDis,rUs,rGro,rePrp}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PrinterRepair)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Select,DatePicker} from 'antd'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddForm extends PureComponent{\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        cartriday:PropTypes.object,\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {cartriday,users}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"记录时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue:cartriday.create_time ? moment(cartriday.create_time,'YYYY-MM-DD') : moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'记录时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                    </Item>\r\n                <Item label='处理人员' >\r\n                {\r\n                    getFieldDecorator('_handler',{\r\n                        initialValue:cartriday._handler,\r\n                        rules:[\r\n                        {required:true,message:'处理人员不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            users.map(item=><Option key={item._id} value={item._id}>{item.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='数量' >\r\n                {\r\n                    getFieldDecorator('nums',{\r\n                        initialValue:cartriday.nums?cartriday.nums:0,\r\n                        rules:[\r\n                        {required:true,message:'数量不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input />\r\n                    )\r\n                }\r\n                </Item>   \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\n\r\nimport {Form,Input,Select} from 'antd'\r\nimport {rCartridays} from '../../../../api'\r\n\r\nconst Option=Select.Option\r\n\r\n\r\nexport default class ReviewForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            nums:0,\r\n            user:1\r\n        }\r\n    }\r\n    gethandler=()=>this.state.user\r\n    \r\n    getHanelerNums=async(value)=>{\r\n        this.setState({nums:0})\r\n        const result=await rCartridays({'_handler':value,'status':false})\r\n        if(result.status===1){\r\n            let nums=0\r\n            for(let i=0;i<result.data.length;i++){\r\n                nums+=result.data[i].nums\r\n            }\r\n            this.setState({nums,user:value})\r\n        }\r\n    }    \r\n    \r\n    render(){\r\n        const {users}=this.props\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n\r\n        return(\r\n            <Form>\r\n                <Form.Item label='处理人员' {...formItemLayout}>\r\n                    <Select onChange={value=>this.getHanelerNums(value)}>\r\n                        {\r\n                            users.map(item=><Option key={item._id} value={item._id}>{item.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                <Input value={this.state.nums} disabled/>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal,Tag} from 'antd'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate,shortDate} from '../../../../utils/dateUtils'\r\nimport {BASE_GREEN,BASE_YELLOW} from '../../../../utils/colors'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rCds,couCd,dCd,reCd} from '../../../../redux/actions/oapm-action'\r\nimport {rUs,rGro} from '../../../../redux/actions/account-action'\r\n\r\nimport AddForm from './addform'\r\nimport ReviewForm from './reviewform'\r\n\r\nclass Cartriday extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.rev=React.createRef()\r\n        this.state={\r\n            cartridays:[],\r\n            loading:false,\r\n            isShow:false,\r\n            reviewShow:false,\r\n            users:[]\r\n        }\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'日期',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },{\r\n            title:'处理人员',\r\n            dataIndex:'_handler',\r\n            render:(_handler)=>{\r\n                let display=''\r\n                this.state.users.forEach(user=>{\r\n                    if(_handler===user._id){\r\n                        display=user.name\r\n                    }\r\n                })\r\n                return display\r\n            }\r\n        },{\r\n            title:'数量',\r\n            dataIndex:'nums',\r\n        },{\r\n            title:'状态',\r\n            dataIndex:'status',\r\n            render:(status)=>{\r\n                if(status){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>已审核</Tag>\r\n                        </span>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_YELLOW}>未审核</Tag>\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(cartriday)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(cartriday)} />&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteCartriday(cartriday)} />\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    initUsers=async()=>{\r\n        await this.props.rGro({'name':'信息科'})\r\n        const gs=this.props.groupReducer\r\n        const g=gs.data[0]._id\r\n        await this.props.rUs({'group':g})\r\n        const result=this.props.userReducer\r\n        const users=result.data\r\n        this.setState({users})            \r\n    }\r\n    \r\n    initCartridays= async()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rCds()\r\n        this.setState({loading:false})\r\n        this.setState({cartridays:this.props.cartridayReducer.data})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.cartriday=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(cartriday)=>{\r\n        this.cartriday=cartriday\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showReview=()=>{\r\n        this.setState({reviewShow:true})\r\n    }\r\n    \r\n    addOrUpdateCartriday=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const cartriday=values\r\n                cartriday.create_time=shortDate(values['create_time'])\r\n                this.form.resetFields()\r\n                if(this.cartriday){\r\n                    cartriday._id=this.cartriday._id\r\n                }\r\n                await this.props.couCd(cartriday)\r\n                const result=this.props.cartridayReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initCartridays()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    deleteCartriday=(cartriday)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+cartriday.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dCd(cartriday._id)\r\n                const result=this.props.cartridayReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initCartridays()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    reviewCartriday=async()=>{\r\n        this.setState({reviewShow:false})\r\n        const _handler=this.rev.current.gethandler()\r\n        await this.props.reCd(_handler)\r\n        const result=this.props.cartridayReducer\r\n        if(result.status===1){\r\n            message.success(result.msg)\r\n            this.initCartridays()\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initCartridays()\r\n        this.initUsers()\r\n    }\r\n    render(){\r\n        const {cartridays,loading,isShow,reviewShow,users}=this.state\r\n        const cartriday=this.cartriday||{}\r\n        const title=<span>\r\n            <Button type='primary' onClick={this.showAdd}><Icon type='download'/>新增</Button>&nbsp;&nbsp;\r\n            <Button type='primary' onClick={this.showReview}><Icon type='file-done'/>审核</Button>\r\n        </span>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={cartridays}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE,ShowQuickJumper:true}}\r\n                />\r\n                \r\n                <Modal\r\n                  title={cartriday._id ? \"编辑\" : '新增'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateCartriday}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    users={users}\r\n                    cartriday={cartriday}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                  title={\"审核\" }\r\n                  visible={reviewShow}\r\n                  onOk={this.reviewCartriday}\r\n                  onCancel={()=>{\r\n                      this.setState({reviewShow:false})\r\n                  }}\r\n                >\r\n                    <ReviewForm\r\n                    ref={this.rev}\r\n                    users={users}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nCartriday.propTypes={\r\n    userReducer:PropTypes.object.isRequired,\r\n    groupReducer:PropTypes.object.isRequired,\r\n    cartridayReducer:PropTypes.object.isRequired,\r\n    rCds:PropTypes.func.isRequired,\r\n    couCd:PropTypes.func.isRequired,\r\n    dCd:PropTypes.func.isRequired,\r\n    reCd:PropTypes.func.isRequired,\r\n    rUs:PropTypes.func.isRequired,\r\n    rGro:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userReducer:state.userReducer,\r\n        groupReducer:state.groupReducer,\r\n        cartridayReducer:state.cartridayReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rCds,couCd,dCd,reCd,rUs,rGro}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cartriday)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,DatePicker} from 'antd'\r\nimport {shortDate} from '../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\nconst Item=Form.Item\r\nconst {TextArea}=Input\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddForm extends Component{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        timeline:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {timeline}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:16}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue: timeline.create_time?moment(timeline.create_time,'YYYY-MM-DD'):moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                </Item>\r\n                <Item label='时间轴内容' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:timeline.name,\r\n                        rules:[\r\n                        {required:true,message:'时间轴内容不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <TextArea placeholder='' autoSize={{minRows:2,maxRows:6}}/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='时间轴详情' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('details',{\r\n                        initialValue:timeline.details,\r\n                        rules:[\r\n                        {required:false}\r\n                        ]\r\n                    })(\r\n                        <TextArea placeholder='' autoSize={{minRows:2,maxRows:6}}/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport EditBtn from '../../../components/editbtn'\r\nimport DeleteBtn from '../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../utils/constants'\r\nimport {rTls,couTl,dTl} from '../../../redux/actions/timeline-action'\r\nimport AddForm from './addform'\r\nimport {formateDate,shortDate} from '../../../utils/dateUtils'\r\n\r\nclass TimeLine extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isShowAdd:false,\r\n            loading:false,\r\n            timelines:[],  //所有时间轴,用于显示table数据\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'事件',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'详情',\r\n            dataIndex:'details',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(timeline)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(timeline)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteTimeLine(timeline)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    getTimeLines=async ()=>{\r\n        await this.props.rTls()\r\n        const result=this.props.timelineReducer\r\n        this.setState({ timelines:result.data })\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.timeline=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateTimeLine=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const timeline=values\r\n                timeline.create_time=shortDate(values['create_time'])\r\n                this.form.resetFields()\r\n                if(this.timeline){\r\n                    timeline._id=this.timeline._id\r\n                }\r\n                await this.props.couTl(timeline)\r\n                const result=this.props.timelineReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.getTimeLines()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(timeline)=>{\r\n        this.timeline=timeline\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteTimeLine=(timeline)=>{\r\n        Modal.confirm({\r\n            title:'确认删除 '+timeline.name+' 吗？',\r\n            onOk:async()=>{\r\n                await this.props.dTl(timeline._id)\r\n                const result=this.props.timelineReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.getTimeLines()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    } \r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.getTimeLines()\r\n    }\r\n    render(){\r\n        const {timelines,loading,isShowAdd}=this.state\r\n        const timeline=this.timeline||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"history\" />新增</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={timelines}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                />\r\n                <Modal\r\n                  title={timeline._id ? \"编辑时间轴\" : '新增时间轴'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateTimeLine}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} timeline={timeline}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nTimeLine.propTypes={\r\n    timelineReducer:PropTypes.object.isRequired,\r\n    rTls:PropTypes.func.isRequired,\r\n    couTl:PropTypes.func.isRequired,\r\n    dTl:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {timelineReducer:state.timelineReducer}\r\n}\r\n\r\nconst mapDispatchToProps =  {rTls,couTl,dTl}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TimeLine)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends Component{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        devicecategory:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {devicecategory}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='类别名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:devicecategory.name,\r\n                        rules:[\r\n                        {required:true,message:'类别名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入类别名称!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rDcs,couDc,dDc} from '../../../../redux/actions/informationdevice-action'\r\nimport AddForm from './addform'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\n\r\nclass DeviceCategory extends Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isShowAdd:false,\r\n            loading:false,\r\n            devicecategorys:[],  //所有类别,用于显示table数据\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'编号',\r\n            dataIndex:'_id',\r\n        },{\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(devicecategory)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(devicecategory)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteDeviceCategory(devicecategory)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    initDeviceCategorys=async ()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rDcs()\r\n        this.setState({loading:false})\r\n        this.setState({devicecategorys:this.props.devicecategoryReducer.data})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.devicecategory=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateDeviceCategory=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const devicecategory=values\r\n                this.form.resetFields()\r\n                if(this.devicecategory){\r\n                    devicecategory._id=this.devicecategory._id\r\n                }\r\n                await this.props.couDc(devicecategory)\r\n                const result=this.props.devicecategoryReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDeviceCategorys()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(devicecategory)=>{\r\n        this.devicecategory=devicecategory\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteDeviceCategory=(devicecategory)=>{\r\n        Modal.confirm({\r\n            title:'确认删除 '+devicecategory.name+' 吗？',\r\n            onOk:async()=>{\r\n                await this.props.dDc(devicecategory._id)\r\n                const result=this.props.devicecategoryReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDeviceCategorys()\r\n                }\r\n            }\r\n        })\r\n    } \r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initDeviceCategorys()\r\n    }\r\n    render(){\r\n        const {loading,isShowAdd}=this.state\r\n        const devicecategory=this.devicecategory||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"unordered-list\" />新增</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={this.props.devicecategoryReducer.data}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                />\r\n                <Modal\r\n                  title={devicecategory._id ? \"编辑类别\" : '新增类别'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateDeviceCategory}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} devicecategory={devicecategory}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nDeviceCategory.propTypes={\r\n    devicecategoryReducer:PropTypes.object.isRequired,\r\n    rDcs:PropTypes.func.isRequired,\r\n    couDc:PropTypes.func.isRequired,\r\n    dDc:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        devicecategoryReducer:state.devicecategoryReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rDcs,couDc,dDc}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DeviceCategory)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,Select} from 'antd'\r\n\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\n\r\nclass AddForm extends Component{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        devicemodel:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {devicemodel,devicecategorys}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='设备类别' {...formItemLayout}>\r\n                    {\r\n                    getFieldDecorator('devicecategory',{\r\n                        initialValue:devicemodel.devicecategory,\r\n                        rules:[\r\n                        {required:true,message:'类别不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            devicecategorys.map(devicecategory=><Option key={devicecategory._id} value={devicecategory._id}>{devicecategory.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                </Item>\r\n                <Item label='型号名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:devicemodel.name,\r\n                        rules:[\r\n                        {required:true,message:'型号名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入型号名称!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {Card,Table,Button,Icon,message,Modal,Select,Input} from 'antd'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rDms,couDm,dDm,rDcs} from '../../../../redux/actions/informationdevice-action'\r\nimport AddForm from './addform'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\n\r\nconst { Search } = Input\r\nconst Option=Select.Option\r\n\r\nclass DeviceModel extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isShowAdd:false,\r\n            loading:false,\r\n            devicemodels:[],  //所有型号,用于显示table数据\r\n            devicecategorys:[],\r\n            searchName:'',  //搜素关键字\r\n            searchType:''    //搜素类型\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'编号',\r\n            dataIndex:'_id',\r\n        },{\r\n            title:'型号名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'类别',\r\n            dataIndex:'devicecategory',\r\n            render:(devicecategory)=>{\r\n                for(let key in this.devicecategoryNames){\r\n                    if(Number(key)===devicecategory){\r\n                        return this.devicecategoryNames[key]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(devicemodel)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(devicemodel)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteDeviceModel(devicemodel)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    initDevicecategoryNames=(devicecategorys)=>{\r\n        const devicecategoryNames=devicecategorys? devicecategorys.reduce((pre,devicecategory)=>{\r\n            pre[devicecategory._id]=devicecategory.name\r\n            return pre\r\n        },{}):[]\r\n        this.devicecategoryNames=devicecategoryNames\r\n    }\r\n    \r\n    initDeviceModels=async ()=>{\r\n        const dm={}\r\n        dm.name=this.state.searchName\r\n        dm.devicecategory=this.state.searchType\r\n        this.setState({loading:true})\r\n        await this.props.rDms(dm)\r\n        this.setState({loading:false})\r\n        this.setState({devicemodels:this.props.devicemodelReducer.data})\r\n\r\n        await this.props.rDcs()\r\n        const devicecategorys=this.props.devicecategoryReducer.data\r\n        this.initDevicecategoryNames(devicecategorys)\r\n        this.setState({devicecategorys})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.devicemodel=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateDeviceModel=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const devicemodel=values\r\n                this.form.resetFields()\r\n                if(this.devicemodel){\r\n                    devicemodel._id=this.devicemodel._id\r\n                }\r\n                await this.props.couDm(devicemodel)\r\n                const result=this.props.devicemodelReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDeviceModels()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(devicemodel)=>{\r\n        this.devicemodel=devicemodel\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteDeviceModel=(devicemodel)=>{\r\n        Modal.confirm({\r\n            title:'确认删除 '+devicemodel.name+' 吗？',\r\n            onOk:async()=>{\r\n                await this.props.dDm(devicemodel._id)\r\n                const result=this.props.devicemodelReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDeviceModels()\r\n                }\r\n            }\r\n        })\r\n    } \r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initDeviceModels()\r\n    }\r\n    render(){\r\n        const {devicecategorys,loading,isShowAdd,searchName,searchType}=this.state\r\n        const devicemodel=this.devicemodel||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"barcode\" />新增</Button>\r\n             </span>)\r\n        const extra=(\r\n        <span className=\"searchbar\">\r\n            <Select \r\n            value={searchType} \r\n            className=\"searchbar-select\" \r\n            onChange={value=>this.setState({searchType:value})}\r\n            >\r\n                {\r\n                    devicecategorys.map((dc)=>(\r\n                        <Option key={dc._id} value={dc._id}>{dc.name}</Option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <Search \r\n            className=\"searchbar-search\" \r\n            placeholder=\"搜索关键字\" \r\n            value={searchName} \r\n            onChange={event => this.setState({searchName:event.target.value})} \r\n            onSearch={this.initDeviceModels}\r\n            enterButton />\r\n        </span>\r\n        )\r\n        return(\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={this.props.devicemodelReducer.data}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                />\r\n                <Modal\r\n                  title={devicemodel._id ? \"编辑型号\" : '新增型号'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateDeviceModel}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} devicemodel={devicemodel} devicecategorys={devicecategorys}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nDeviceModel.propTypes={\r\n    devicecategoryReducer:PropTypes.object.isRequired,\r\n    devicemodelReducer:PropTypes.object.isRequired,\r\n    rDcs:PropTypes.func.isRequired,\r\n    rDms:PropTypes.func.isRequired,\r\n    couDm:PropTypes.func.isRequired,\r\n    dDm:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        devicecategoryReducer:state.devicecategoryReducer,\r\n        devicemodelReducer:state.devicemodelReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rDcs,rDms,couDm,dDm}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DeviceModel)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends Component{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        installlocation:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {installlocation}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='地点名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:installlocation.name,\r\n                        rules:[\r\n                        {required:true,message:'地点名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入地点名称!'/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rIls,couIl,dIl} from '../../../../redux/actions/informationdevice-action'\r\nimport AddForm from './addform'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\n\r\nclass InstallLocation extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isShowAdd:false,\r\n            loading:false,\r\n            installlocations:[],  //所有安装地点,用于显示table数据\r\n        }\r\n    }\r\n\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(installlocation)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(installlocation)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteInstallLocation(installlocation)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    initInstallLocations=async ()=>{\r\n        this.setState({loading:true})\r\n        await this.props.rIls()\r\n        this.setState({loading:false})\r\n        this.setState({ installlocations:this.props.installlocationReducer.data })\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.installlocation=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateInstallLocation=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const installlocation=values\r\n                this.form.resetFields()\r\n                if(this.installlocation){\r\n                    installlocation._id=this.installlocation._id\r\n                }\r\n                await this.props.couIl(installlocation)\r\n                const result=this.props.installlocationReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initInstallLocations()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(installlocation)=>{\r\n        this.installlocation=installlocation\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteInstallLocation=(installlocation)=>{\r\n        Modal.confirm({\r\n            title:'确认删除 '+installlocation.name+' 吗？',\r\n            onOk:async()=>{\r\n                await this.props.dIl(installlocation._id)\r\n                const result=this.props.installlocationReducer\r\n                if(result.status===0){\r\n                    message.success(result.msg)\r\n                    this.initInstallLocations()\r\n                }\r\n            }\r\n        })\r\n    } \r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.initInstallLocations()\r\n    }\r\n    render(){\r\n        const {installlocations,loading,isShowAdd}=this.state\r\n        const installlocation=this.installlocation||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"environment\" />新增</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={installlocations}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE}}\r\n                />\r\n                <Modal\r\n                  title={installlocation._id ? \"编辑安装地点\" : '新增安装地点'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateInstallLocation}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} installlocation={installlocation}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nInstallLocation.propTypes={\r\n    installlocationReducer:PropTypes.object.isRequired,\r\n    rIls:PropTypes.func.isRequired,\r\n    couIl:PropTypes.func.isRequired,\r\n    dIl:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        installlocationReducer:state.installlocationReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rIls,couIl,dIl}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InstallLocation)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Form, \r\n    Row, \r\n    Col,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    } from 'antd'\r\n\r\nimport {deviceRunSystem,deviceStatus} from '../../../../config/selectConfig'\r\nimport {rDeviceCategorys,rDeviceModels,rInstallLocations} from '../../../../api'\r\n\r\nconst Option=Select.Option\r\nconst Item=Form.Item\r\n\r\nclass SearchForm extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            devicecategorys:[],\r\n            devicemodels:[],\r\n            installlocations:[]\r\n        }\r\n    }\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    onReset=()=>{\r\n        this.props.form.resetFields()\r\n    }\r\n    getFormItem=()=>{\r\n        this.props.form.validateFields((err,values)=>{\r\n            this.props.setSearchItem(values)\r\n        })\r\n        \r\n    }\r\n    \r\n    getDM=async value =>{\r\n        this.setState({devicemodels:[]})\r\n        const result=await rDeviceModels({'devicecategory':value})\r\n        if(result.status===1){\r\n            this.setState({devicemodels:result.data})\r\n        }  \r\n    }\r\n    \r\n    initSelect=async()=>{\r\n        const devicecategorys=await rDeviceCategorys()\r\n        if(devicecategorys.status===1){\r\n            this.setState({devicecategorys:devicecategorys.data})\r\n        }\r\n        const installlocations=await rInstallLocations()\r\n        if(installlocations.status===1){\r\n            this.setState({installlocations:installlocations.data})\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initSelect()\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {getFieldDecorator}=this.props.form\r\n        const {devicecategorys,devicemodels,installlocations} =this.state\r\n\r\n        return(\r\n            <Form className=\"ant-advanced-search-form\" >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Item label=\"类别\">\r\n                        {\r\n                        getFieldDecorator('devicecategory',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select onChange={this.getDM}>\r\n                                {\r\n                                    devicecategorys.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label=\"型号\">\r\n                        {\r\n                        getFieldDecorator('devicemodel',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select>\r\n                                {\r\n                                    devicemodels.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label=\"位置\">\r\n                        {\r\n                        getFieldDecorator('installlocation',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select>\r\n                                {\r\n                                    installlocations.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label=\"系统\">\r\n                        {\r\n                        getFieldDecorator('runos',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select>\r\n                                {\r\n                                    deviceRunSystem.map(ps=><Option key={ps.value} value={ps.value}>{ps.label}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='名称' >\r\n                        {\r\n                        getFieldDecorator('name',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label={'ip'} >\r\n                        {\r\n                        getFieldDecorator('ip',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Input/>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label={'mac'} >\r\n                        {\r\n                        getFieldDecorator('mac',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Input/>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label=\"状态\">\r\n                        {\r\n                        getFieldDecorator('status',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select>\r\n                                {\r\n                                    deviceStatus.map(ps=><Option key={ps.value} value={ps.value}>{ps.label}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item style={{float:'right'}}>\r\n                            <span>\r\n                                <Button style={{marginBottom:10}} type='primary' onClick={this.getFormItem}>搜索<Icon type='search'/></Button>\r\n                                <Button style={{ marginLeft: 8 }} type=\"button\" onClick={this.onReset}><Icon type='reload'/>重置</Button>\r\n                            </span>\r\n                        </Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(SearchForm)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Collapse,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Icon,\r\n    Table,\r\n    message,\r\n    Tag\r\n    } from 'antd'\r\n\r\nimport {BASE_GREEN,BASE_RED,BASE_BLUE} from '../../../../utils/colors'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport PreviewBtn from '../../../../components/previewbtn'\r\nimport SearchForm from './searchform'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rDis,couDi,dDi} from '../../../../redux/actions/informationdevice-action'\r\nimport {deviceRunSystem} from '../../../../config/selectConfig'\r\nconst { Panel } = Collapse\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            deviceinfos:[],\r\n            total:0,\r\n            loading:false,\r\n            isShow:false,\r\n            devicecategory:'',  //搜素关键字\r\n            devicemodel:'',\r\n            installlocation:'',\r\n            runos:'',\r\n            name:'',\r\n            ip:'',\r\n            mac:'',\r\n            status:'',\r\n        }\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'id',\r\n            dataIndex:'_id',\r\n            width: 80,\r\n        },{\r\n            title:'设备类别型号',\r\n            dataIndex:'devicemodel',\r\n            width: 250,\r\n            render:(devicemodel)=>{\r\n               return devicemodel.devicecategory.name+' | '+devicemodel.name\r\n            }\r\n        },{\r\n            title:'上级',\r\n            dataIndex:'parent',\r\n            width: 80,\r\n            render:(parent)=>{\r\n               return parent?parent.name:'无'\r\n            }\r\n        },{\r\n            title:'设备名称',\r\n            dataIndex:'name',\r\n            width: 150,\r\n        },{\r\n            title:'安装位置',\r\n            dataIndex:'installlocation',\r\n            width: 200,\r\n            render:(installlocation)=>{\r\n                return installlocation.name\r\n            }\r\n        },{\r\n            title:'序列号',\r\n            dataIndex:'sn',\r\n            width: 250,\r\n        },{\r\n            title:'系统',\r\n            dataIndex:'runos',\r\n            width: 250,\r\n            render:(runos)=>{\r\n                let runosdisplay=''\r\n                deviceRunSystem.forEach(item=>{\r\n                    if(item.value===String(runos)){\r\n                        runosdisplay= item.label\r\n                    }\r\n                })\r\n                return runosdisplay\r\n            }\r\n        },{\r\n            title:'ip',\r\n            dataIndex:'ip',\r\n            width: 250,\r\n        },{\r\n            title:'mac',\r\n            dataIndex:'mac',\r\n            width: 250,\r\n        },{\r\n            title:'状态',\r\n            width: 80,\r\n            dataIndex:'status',\r\n            render:(status)=>{\r\n                if(status===2){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_RED}>维修</Tag>\r\n                        </span>\r\n                    )\r\n                }else if(status===1){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>正常</Tag>\r\n                        </span>\r\n                    )\r\n                }else if(status===3){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_BLUE}>停用</Tag>\r\n                        </span>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <span></span>\r\n                    )\r\n                }  \r\n            }\r\n        },{\r\n            title:'安装时间',\r\n            dataIndex:'installdate',\r\n            width: 150,\r\n            render:(installdate)=>formateDate(installdate)\r\n        },{\r\n            title:'操作',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render:(deviceinfo)=>(\r\n            <span>\r\n                <PreviewBtn onClick={()=>this.props.history.push('/deviceinfo/detail',{deviceinfo})}/>&nbsp;&nbsp;&nbsp;\r\n                <EditBtn onClick={()=>this.props.history.push('/deviceinfo/addorupdate',{deviceinfo})}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteDeviceInfo(deviceinfo)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    initDeviceInfos= async(pageNum)=>{\r\n        this.pageNum=pageNum\r\n        const isPage=true\r\n        this.setState({loading:true})\r\n        const{\r\n            devicecategory, \r\n            devicemodel,\r\n            installlocation,\r\n            runos,\r\n            name,\r\n            ip,\r\n            mac,\r\n            status,\r\n            remarks\r\n        }=this.state\r\n        await this.props.rDis({\r\n            isPage,\r\n            pageNum,\r\n            pageSize:PAGE_SIZE,\r\n            devicecategory, \r\n            devicemodel,\r\n            installlocation,\r\n            runos,\r\n            name,\r\n            ip,\r\n            mac,\r\n            status,\r\n            remarks\r\n        })\r\n        this.setState({loading:false})\r\n        const {total,list}=this.props.deviceinfoReducer.data\r\n        this.setState({deviceinfos:list,total})\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.deviceinfo=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(deviceinfo)=>{\r\n        this.deviceinfo=deviceinfo\r\n        this.setState({isShow:true})\r\n    }\r\n\r\n    resetForm=()=>{\r\n        this.form.resetFields()\r\n    }\r\n    \r\n    deleteDeviceInfo=(deviceinfo)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+deviceinfo.name+'吗？',\r\n            onOk:async()=>{\r\n                await this.props.dDi(deviceinfo._id)\r\n                const result=this.props.deviceinfoReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.initDeviceInfos(this.pageNum)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    setSearchItem=(searchItem)=>{\r\n        this.setState({\r\n            devicecategory:searchItem.devicecategory,\r\n            devicemodel:searchItem.devicemodel,\r\n            installlocation:searchItem.installlocation,\r\n            runos:searchItem.runos,\r\n            name:searchItem.name,\r\n            ip:searchItem.ip,\r\n            mac:searchItem.mac,\r\n            status:searchItem.status\r\n        },()=>{  //解决setState延迟\r\n            this.initDeviceInfos(this.pageNum)\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.initDeviceInfos(1)\r\n    }\r\n\r\n    render(){\r\n        const {deviceinfos,total,loading}=this.state\r\n        const title=<Button type='primary' onClick={()=>this.props.history.push('/deviceinfo/addorupdate')}><Icon type='unordered-list'/>新增</Button>\r\n        return(\r\n            <Card title={title} >\r\n                <Collapse>\r\n                <Panel header=\"搜索\" >\r\n                <SearchForm setForm={(form)=>{this.form=form}} setSearchItem={this.setSearchItem}/>\r\n                </Panel>\r\n                </Collapse>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={deviceinfos}\r\n                columns={this.columns}\r\n                scroll={{ x: 1000 }}\r\n                pagination={{\r\n                    defaultPageSize:PAGE_SIZE,\r\n                    ShowQuickJumper:true,\r\n                    total,\r\n                    onChange:this.initDeviceInfos //(pageNum)=>{this.initDeviceInfos(pageNum)}\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes={\r\n    deviceinfoReducer:PropTypes.object.isRequired,\r\n    rDis:PropTypes.func.isRequired,\r\n    couDi:PropTypes.func.isRequired,\r\n    dDi:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        deviceinfoReducer:state.deviceinfoReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rDis,couDi,dDi}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Card,Form,Input,Select,Button,Icon,DatePicker,message} from 'antd'\r\nimport BackBtn from '../../../../components/backbtn'\r\n\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {deviceRunSystem,deviceStatus} from '../../../../config/selectConfig'\r\nimport {rDcs,rDms,rIls,rDis,couDi} from '../../../../redux/actions/informationdevice-action'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\nconst {TextArea}=Input\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddOrUpdate extends Component{\r\n\r\n    state={\r\n        devicecategorys:[],\r\n        devicemodels:[],\r\n        parents:[],\r\n        installlocations:[]\r\n    }\r\n\r\n    getDM=async value =>{\r\n        this.setState({devicemodels:[]})\r\n        await this.props.rDms({'devicecategory':value})\r\n        const result=this.props.devicemodelReducer\r\n        this.setState({devicemodels:result.data})\r\n    }\r\n    \r\n    initSelect=async()=>{\r\n        await this.props.rDcs()\r\n        const devicecategorys=this.props.devicecategoryReducer\r\n        this.setState({devicecategorys:devicecategorys.data})\r\n        \r\n        await this.props.rIls()\r\n        const installlocations=this.props.installlocationReducer\r\n        this.setState({installlocations:installlocations.data})\r\n        \r\n        await this.props.rDis({'isPage':false})\r\n        const deviceinfos=this.props.deviceinfoReducer\r\n        this.setState({parents:deviceinfos.data.list})            \r\n    }\r\n    \r\n\r\n    submit=()=>{\r\n        this.props.form.validateFields(async (error,values)=>{\r\n            if(!error){\r\n                const deviceinfo=values\r\n                if(this.deviceinfo.deviceinfo){\r\n                    deviceinfo._id=this.deviceinfo.deviceinfo._id\r\n                }\r\n                await this.props.couDi(deviceinfo)\r\n                const result=this.props.deviceinfoReducer\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.props.history.goBack()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.initSelect()\r\n    }\r\n    \r\n    componentWillMount(){\r\n        const deviceinfo=this.props.location.state\r\n        this.isUpdate=!!deviceinfo\r\n        //{}空对象 避免undifine\r\n        this.deviceinfo=deviceinfo ||{}\r\n    }\r\n    render(){\r\n        const {isUpdate,deviceinfo}=this\r\n        const {devicecategorys,devicemodels,installlocations,parents} =this.state\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:2},\r\n            wrapperCol:{span:8}\r\n        }\r\n\r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>{isUpdate ? '更新设备':'新增设备'}</span>\r\n            </span>\r\n        )\r\n        return(\r\n            <Card title={title}>\r\n                <Form {...formItemLayout}>\r\n                    <Item label=\"上级设备\">\r\n                    {getFieldDecorator('parent',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.parent :'',\r\n                    })(\r\n                        <Select>\r\n                            {\r\n                                parents.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}-{ps.sn}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备类别\">\r\n                    {getFieldDecorator('devicecategory',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.devicemodel.devicecategory._id :1,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'设备类别不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select onChange={this.getDM}>\r\n                            {\r\n                                devicecategorys.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备型号\">\r\n                    {getFieldDecorator('devicemodel',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.devicemodel._id :1,\r\n                    })(\r\n                        <Select>\r\n                            {\r\n                                devicemodels.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"序列号\">\r\n                    {getFieldDecorator('sn',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.sn : '',\r\n                    })(\r\n                        <Input placeholder='序列号' />\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备名称\">\r\n                    {getFieldDecorator('name',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.name : '',\r\n                    })(\r\n                        <Input placeholder='设备名称' />\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"运行系统\">\r\n                    {getFieldDecorator('runos',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.runos : '2',\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            deviceRunSystem.map(item=><Option key={item.value} value={item.value}>{item.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"安装地点\">\r\n                    {getFieldDecorator('installlocation',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.installlocation._id : 1,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'安装地点不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                            {\r\n                                installlocations.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备IP\">\r\n                    {getFieldDecorator('ip',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.ip : '',\r\n                    })(\r\n                        <Input placeholder='多个ip用/隔开' />\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备MAC\">\r\n                    {getFieldDecorator('mac',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.mac : '',\r\n                    })(\r\n                        <Input placeholder='多个mac用/隔开' />\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"安装时间\">\r\n                    {getFieldDecorator('installdate',{\r\n                        initialValue:isUpdate ? moment(deviceinfo.deviceinfo.installdate,'YYYY-MM-DD') : moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'安装时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"设备状态\">\r\n                    {getFieldDecorator('status',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.status : '1',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'设备状态不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            deviceStatus.map(item=><Option key={item.value} value={item.value}>{item.label}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"备注\">\r\n                    {getFieldDecorator('remarks',{\r\n                        initialValue:isUpdate ? deviceinfo.deviceinfo.remarks : ''\r\n                    })(\r\n                        <TextArea placeholder='' autoSize={{minRows:2}}/>\r\n                    )}\r\n                    </Item>\r\n                    <Item>\r\n                        <Button type='primary' onClick={this.submit}><Icon type=\"save\"/>提交</Button>&nbsp;&nbsp;\r\n                        <Button type='danger' onClick={()=>this.props.history.goBack()}><Icon type=\"close\" />取消</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        devicecategoryReducer:state.devicecategoryReducer,\r\n        departmentReducer:state.departmentReducer,\r\n        userReducer:state.userReducer,\r\n        problemCategoryReducer:state.problemCategoryReducer,\r\n        installlocationReducer:state.installlocationReducer,\r\n        deviceinfoReducer:state.deviceinfoReducer,\r\n        devicemodelReducer:state.devicemodelReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {rDcs,rDms,rIls,rDis,couDi}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Form.create()(AddOrUpdate))","import React,{Component} from 'react';\r\n\r\nimport {Card,Descriptions} from 'antd'\r\nimport BackBtn from '../../../../components/backbtn'\r\nimport {deviceRunSystem,deviceStatus} from '../../../../config/selectConfig'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\n\r\nconst Item=Descriptions.Item\r\n\r\nexport default class DeviceInfoDetail extends Component{\r\n    runosdisplay=para=>{\r\n        let display=''\r\n        deviceRunSystem.forEach(item=>{\r\n            if(item.value===String(para)){\r\n                display= item.label\r\n            }\r\n        })\r\n        return display\r\n    }\r\n    \r\n    statusdisplay=para=>{\r\n        let display=''\r\n        deviceStatus.forEach(item=>{\r\n            if(item.value===String(para)){\r\n                display= item.label\r\n            }\r\n        })\r\n        return display\r\n    }\r\n    \r\n    render(){\r\n        const {\r\n            devicemodel,\r\n            parent,\r\n            installlocation,\r\n            runos,\r\n            sn,\r\n            name,\r\n            ip,\r\n            mac,\r\n            status,\r\n            remarks,\r\n            installdate\r\n        }=this.props.location.state.deviceinfo\r\n        \r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>设备详情</span>\r\n            </span>\r\n        )\r\n        return(\r\n            <Card title={title}>\r\n              <Descriptions bordered>\r\n                <Item label='类别：' span={1}>{devicemodel.devicecategory.name}</Item>\r\n                <Item label='型号：' span={2}>{devicemodel.name}</Item>\r\n                <Item label='上级设备：' span={1}>{parent?parent.name:'无'}</Item>\r\n                <Item label='序列号：' span={2}>{sn}</Item>\r\n                <Item label='设备名称：' span={1}>{name}</Item>\r\n                <Item label='运行系统：' span={2}>{this.runosdisplay(runos)}</Item>\r\n                <Item label='安装地点：' span={3}>{installlocation.name}</Item>\r\n                <Item label='设备ip：' span={3}>{ip}</Item>\r\n                <Item label='设备mac：' span={3}>{mac}</Item>\r\n                <Item label='设备状态：' span={1}>{this.statusdisplay(status)}</Item>\r\n                <Item label='安装时间：' span={2}>{shortDate(installdate)}</Item>\r\n                <Item label='备注：' span={3}>{remarks}</Item>\r\n              </Descriptions>\r\n            </Card>  \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport './index.less'\r\n\r\nimport Home from './home'\r\nimport AddOrUpdate from './addorupdate'\r\nimport Detail from './detail'\r\n\r\nexport default class DeviceInfo extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path='/deviceinfo' component={Home} exact/>\r\n                <Route path='/deviceinfo/addorupdate' component={AddOrUpdate}/>\r\n                <Route path='/deviceinfo/detail' component={Detail}/>\r\n                <Redirect to='/deviceinfo' />\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class ChartZlqk extends Component{\r\n\r\n    static propTypes={\r\n        title:PropTypes.string.isRequired,\r\n        data:PropTypes.object,\r\n        extra:PropTypes.element\r\n    }\r\n\r\n    getOption=(indicator,data,legend)=>{\r\n        return{\r\n            tooltip: {\r\n                position: ['50%', '30%']\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                //orient: 'horizontal',\r\n                left: 1,\r\n                data: legend\r\n            },\r\n            radar: {\r\n                 shape: 'circle',\r\n                name: {\r\n                    textStyle: {\r\n                        color: '#fff',\r\n                        backgroundColor: '#999',\r\n                        borderRadius: 3,\r\n                        padding: [3, 5]\r\n                    }\r\n                },\r\n                indicator: indicator\r\n            },\r\n            series: [{\r\n                name: '',\r\n                type: 'radar',\r\n                // areaStyle: {normal: {}},\r\n                data: data\r\n            }]\r\n        }\r\n    }   \r\n    \r\n    render(){\r\n        const{indicator,data,legend,title,extra}=this.props\r\n        return(\r\n            <Card title={title} extra={extra}>\r\n                <ReactEcharts option={this.getOption(indicator,data,legend)}/>\r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    GET_ZYKS,\r\n    GET_MZKS,\r\n    CHART_PROCESSEDRECORD_DAY,\r\n    CHART_PROCESSEDRECORD,\r\n    CHART_DEVICE,\r\n    CHART_QYZLQK,\r\n    CHART_BMYSZLQK,\r\n    CHART_QYZDQK,\r\n    CHART_BMYSZDQK,\r\n} from '../actiontypes'\r\n\r\nimport {\r\n    getzyks,\r\n    getmzks,\r\n    chart_processedrecord_day,\r\n    chart_processedrecord,\r\n    chart_device,\r\n    chart_qyzlqk,\r\n    chart_bmyszlqk,\r\n    chart_qyzdqk,\r\n    chart_bmyszdqk,\r\n} from '../../api'\r\n\r\n\r\n//住院科室\r\nconst rZyksAction = data =>({\r\n    type:GET_ZYKS,\r\n    data\r\n})\r\nexport const rZyks = () => async dispatch => {\r\n    const res = await getzyks()\r\n    const departments=[]\r\n    for (let d in res){\r\n        departments.push({'_id':res[d][0],'name':res[d][1]})\r\n    }\r\n    dispatch(rZyksAction(departments))\r\n  }\r\n\r\n//门诊科室\r\nconst rMzksAction = data =>({\r\n    type:GET_MZKS,\r\n    data\r\n})\r\nexport const rMzks = () => async dispatch => {\r\n    const result = await getmzks()\r\n    const departments=[]\r\n    for (let d in result){\r\n        departments.push({'_id':result[d][0],'name':result[d][1]})\r\n    }\r\n    dispatch(rMzksAction(departments))\r\n  }\r\n\r\n//获取最近30天问题记录\r\nconst chartPrdAction = data =>({\r\n    type:CHART_PROCESSEDRECORD_DAY,\r\n    data\r\n})\r\nexport const chartPrd = () => async dispatch=>{\r\n    const result=await chart_processedrecord_day()\r\n    dispatch(chartPrdAction(result))\r\n}\r\n\r\n//获取问题类别比例\r\nconst chartPrAction = data =>({\r\n    type:CHART_PROCESSEDRECORD,\r\n    data\r\n})\r\nexport const chartPr = () => async dispatch=>{\r\n    const result=await chart_processedrecord()\r\n    dispatch(chartPrAction(result))\r\n}\r\n\r\n//获取设备类别比例\r\nconst chartDeviceAction = data =>({\r\n    type:CHART_DEVICE,\r\n    data\r\n})\r\nexport const chartDevice = () => async dispatch=>{\r\n    const result=await chart_device()\r\n    dispatch(chartDeviceAction(result))\r\n}\r\n\r\n//获取全院治疗情况\r\nconst chartQyzlqkAction = data =>({\r\n    type:CHART_QYZLQK,\r\n    data\r\n})\r\nexport const chartQyzlqk = (startdate,enddate) => async dispatch=>{\r\n    const result=await chart_qyzlqk(startdate,enddate)\r\n    dispatch(chartQyzlqkAction(result[0]))\r\n}\r\n\r\n//获取部门医师治疗情况\r\nconst chartBmyszlqkAction = data =>({\r\n    type:CHART_BMYSZLQK,\r\n    data\r\n})\r\nexport const chartBmyszlqk = (department,startdate,enddate) => async dispatch=>{\r\n    const result=await chart_bmyszlqk(department,startdate,enddate)\r\n    const data=[]\r\n    const legend=[]\r\n    for (let d in result){\r\n        data.push({\r\n            value:[result[d][1],result[d][2],result[d][3],result[d][4],result[d][5],\r\n            result[d][6],result[d][7],result[d][8],result[d][9],result[d][10],\r\n            result[d][11],result[d][12],result[d][13],result[d][14],result[d][15]],\r\n            name:result[d][0]\r\n            })\r\n        legend.push(result[d][0])\r\n    }\r\n    dispatch(chartBmyszlqkAction({data,legend}))\r\n}\r\n\r\n//获取全院诊断情况\r\nconst chartQyzdqkAction = data =>({\r\n    type:CHART_QYZDQK,\r\n    data\r\n})\r\nexport const chartQyzdqk = (startdate,enddate) => async dispatch=>{\r\n    const result=await chart_qyzdqk(startdate,enddate)\r\n    const data=[['标题', '收病人数', '药占比%', '材料占比%', '检查占比%', '治疗占比%', '其他费用占比%', '平均费用(元)']]\r\n    for (let d in result){\r\n            data.push(['诊疗情况',result[d][0],result[d][1],result[d][2],result[d][3],result[d][4],result[d][5],result[d][6]])\r\n    }\r\n    dispatch(chartQyzdqkAction(data))\r\n}\r\n\r\n//获取部门医师诊断情况\r\nconst chartBmyszdqkAction = data =>({\r\n    type:CHART_BMYSZDQK,\r\n    data\r\n})\r\nexport const chartBmyszdqk = (department,startdate,enddate) => async dispatch=>{\r\n    const result=await chart_bmyszdqk(department,startdate,enddate)\r\n    const data=[['医师', '收病人数', '药占比%', '材料占比%', '检查占比%', '治疗占比%', '其他费用占比%', '平均费用(元)']]\r\n    for (let d in result){\r\n            data.push([result[d][0],result[d][1],result[d][2],result[d][3],result[d][4],result[d][5],result[d][6],result[d][7]])\r\n    }\r\n    dispatch(chartBmyszdqkAction(data))\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Col,Row,Select,DatePicker } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ChartZlqk from './chart-zlqk'\r\nimport {chartQyzlqk,chartBmyszlqk,rZyks} from '../../../../redux/actions/analysis-action'\r\n\r\nconst Option=Select.Option\r\nconst { RangePicker } = DatePicker\r\n\r\nclass Zlqk extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            indicator:[\r\n                        { name: '收病人数'},\r\n                        { name: '患者平均住院天数'},\r\n                        { name: '治愈率%',max:100},\r\n                        { name: '好转率%',max:100},\r\n                        { name: '未愈率%',max:100},\r\n                        { name: '死亡率%',max:100},\r\n                        { name: '其他%',max:100},\r\n                        { name: '三日内确诊率%',max:100},\r\n                        { name: '入出院诊断符合率%',max:100},\r\n                        { name: '药占比%',max:100},\r\n                        { name: '材料占比%',max:100},\r\n                        { name: '检查占比%',max:100},\r\n                        { name: '治疗占比%',max:100},\r\n                        { name: '其他费用占比%',max:100},\r\n                        { name: '平均费用'}\r\n                    ],\r\n            data1:[],\r\n            data2:[],\r\n            legend1:[],\r\n            legend2:[],\r\n            departments:[],\r\n            seldep:264,\r\n            display:'none'\r\n        }\r\n    }\r\n    \r\n    initqyzlqk=async(startdate,enddate)=>{\r\n        await this.props.chartQyzlqk(startdate,enddate)\r\n        const qyzlqk=this.props.chartsmanage\r\n        this.setState({\r\n            data1:[{value: qyzlqk,name: '全院'}]\r\n        })\r\n    }\r\n    initbmzlqk=async(department,startdate,enddate)=>{\r\n        await this.props.chartBmyszlqk(department,startdate,enddate)\r\n        const res=this.props.chartsmanage\r\n        this.setState({\r\n            data2:res.data.data,\r\n            legend2:res.data.legend\r\n        })\r\n    }\r\n    initData=async()=>{\r\n        await this.props.rZyks()\r\n        const res=this.props.chartsmanage\r\n        this.setState({\r\n            departments:res.data\r\n        })\r\n    }\r\n    \r\n    daonChange=(date, dateString)=>{\r\n        const startdate=dateString[0]\r\n        const enddate=dateString[1]\r\n        this.initqyzlqk(startdate,enddate)\r\n    }\r\n    \r\n    dponChange=(date, dateString)=>{\r\n        const department=this.state.seldep\r\n        const startdate=dateString[0]\r\n        const enddate=dateString[1]\r\n        this.initbmzlqk(department,startdate,enddate)\r\n    }\r\n    selectDepartment=(value)=>{\r\n        this.setState({seldep:value,display:''})\r\n    }\r\n    componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        const{indicator,data1,data2,legend1,legend2,departments,display}=this.state\r\n        const departmentoptions = departments.map(d => <Option key={d._id} >{d.name}</Option>)\r\n        const title1='全院'\r\n        const extra1=<RangePicker onChange={this.daonChange} />\r\n        const title2='部门'\r\n        const extra2=<div>\r\n                    <RangePicker onChange={this.dponChange} style={{display:display}}/>\r\n                    <Select onChange={this.selectDepartment} style={{float:'right',width:'120px'}}>\r\n                     {departmentoptions}\r\n                    </Select>\r\n                    </div>                    \r\n        return(\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Row gutter={24}>\r\n                    <Col xs={24} sm={10} md={10} lg={10} xl={10}>\r\n                        <ChartZlqk indicator={indicator} data={data1} legend={legend1} title={title1} extra={extra1}/>\r\n                    </Col>\r\n                    <Col xs={24} sm={14} md={14} lg={14} xl={14}>\r\n                        <ChartZlqk indicator={indicator} data={data2} legend={legend2} title={title2} extra={extra2}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nZlqk.propTypes={\r\n    chartsReducer:PropTypes.object.isRequired,\r\n    chartQyzlqk:PropTypes.func.isRequired,\r\n    chartBmyszlqk:PropTypes.func.isRequired,\r\n    rZyks:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {chartsReducer:state.chartsReducer}\r\n}\r\n\r\nconst mapDispatchToProps =  {chartQyzlqk,chartBmyszlqk,rZyks}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Zlqk)","import React,{Component} from 'react';\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class ChartZdqk extends Component{\r\n\r\n    static propTypes={\r\n        title:PropTypes.string.isRequired,\r\n        data:PropTypes.object,\r\n        extra:PropTypes.element\r\n    }\r\n\r\n    getOption=(data)=>{\r\n        return{\r\n            legend: {},\r\n            tooltip: {\r\n                position: ['50%', '30%']\r\n            },\r\n            dataset: {\r\n                source: data\r\n            },\r\n            xAxis: {type: 'category'},\r\n            yAxis: {},\r\n            // Declare several bar series, each will be mapped\r\n            // to a column of dataset.source by default.\r\n            series: [\r\n                {type: 'bar'},\r\n                {type: 'bar'},\r\n                {type: 'bar'},\r\n                {type: 'bar'},\r\n                {type: 'bar'},\r\n                {type: 'bar'},\r\n                {type: 'bar'}\r\n            ]\r\n        }\r\n    }   \r\n    \r\n    render(){\r\n        const{data,title,extra}=this.props\r\n        return(\r\n            <Card title={title} extra={extra}>\r\n                <ReactEcharts option={this.getOption(data)}/>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Col,Row,Select,DatePicker } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ChartZdqk from './chart-zdqk'\r\nimport {chartQyzdqk,chartBmyszdqk,rMzks} from '../../../../redux/actions/analysis-action'\r\n\r\nconst Option=Select.Option\r\nconst { RangePicker } = DatePicker\r\n\r\nclass Zdqk extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data1:[],\r\n            data2:[],\r\n            departments:[],\r\n            seldep:264,\r\n            display:'none'\r\n        }\r\n    }\r\n\r\n    initqyzlqk=async(startdate,enddate)=>{\r\n        await this.props.chartQyzdqk(startdate,enddate)\r\n        const res=this.props.chartsReducer\r\n        this.setState({\r\n            data1:res.data\r\n        })\r\n    }\r\n    initbmzlqk=async(department,startdate,enddate)=>{\r\n        await this.props.chartBmyszdqk(department,startdate,enddate)\r\n        const res=this.props.chartsReducer\r\n        this.setState({\r\n            data2:res.data\r\n        })\r\n    }\r\n    initData=async()=>{\r\n        await this.props.rMzks()\r\n        const res=this.props.chartsReducer\r\n        this.setState({\r\n            departments:res.data\r\n        })\r\n    }\r\n    \r\n    daonChange=(date, dateString)=>{\r\n        const startdate=dateString[0]\r\n        const enddate=dateString[1]\r\n        this.initqyzlqk(startdate,enddate)\r\n    }\r\n    \r\n    dponChange=(date, dateString)=>{\r\n        const department=this.state.seldep\r\n        const startdate=dateString[0]\r\n        const enddate=dateString[1]\r\n        this.initbmzlqk(department,startdate,enddate)\r\n    }\r\n    selectDepartment=(value)=>{\r\n        this.setState({seldep:value,display:''})\r\n    }\r\n    componentWillMount(){\r\n        this.initData()\r\n    }\r\n    render(){\r\n        const{data1,data2,departments,display}=this.state\r\n        const departmentoptions = departments.map(d => <Option key={d._id} >{d.name}</Option>)\r\n        const title1='全院'\r\n        const extra1=<RangePicker onChange={this.daonChange} />\r\n        const title2='部门'\r\n        const extra2=<div>\r\n                    <RangePicker onChange={this.dponChange} style={{display:display}}/>\r\n                    <Select onChange={this.selectDepartment} style={{float:'right',width:'120px'}}>\r\n                     {departmentoptions}\r\n                    </Select>\r\n                    </div>                    \r\n        return(\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Row gutter={24}>\r\n                    <Col span={10}>\r\n                        <ChartZdqk data={data1} title={title1} extra={extra1}/>\r\n                    </Col>\r\n                    <Col span={14}>\r\n                        <ChartZdqk data={data2} title={title2} extra={extra2}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nZdqk.propTypes={\r\n    chartsReducer:PropTypes.object.isRequired,\r\n    chartQyzdqk:PropTypes.func.isRequired,\r\n    chartBmyszdqk:PropTypes.func.isRequired,\r\n    rMzks:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {chartsReducer:state.chartsReducer}\r\n}\r\n\r\nconst mapDispatchToProps =  {chartQyzdqk,chartBmyszdqk,rMzks}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Zdqk)","import React,{Component} from 'react';\r\nimport {Card,Progress,Modal,Table } from 'antd'\r\n\r\nimport {BASE_RED,BASE_BLUE,BASE_DYELLOW} from '../../../../utils/colors'\r\nimport {getzlhistssub,gettjxttssub} from '../../../../api'\r\n\r\nexport default class ChartTableSpace extends Component{\r\n    state={\r\n        localTsName:'',\r\n        localTsNames:[],\r\n        isShow:false\r\n    }\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'表空间名',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'文件路径',\r\n            dataIndex:'path',\r\n        },\r\n        {\r\n            title:'体积',\r\n            dataIndex:'size',\r\n        },\r\n        {\r\n            title:'使用率',\r\n            dataIndex:'percent'\r\n        }\r\n        ]\r\n    }\r\n    getTsName=async content=>{\r\n        const tsname=content.target.innerHTML\r\n        this.setState({isShow:true})\r\n        const localTsNames=[]\r\n        let res=[]\r\n        if(this.props.thisname==='histitle'){\r\n            res=await getzlhistssub(tsname)\r\n        }else{\r\n            res=await gettjxttssub(tsname)\r\n        }\r\n        for (let d in res){\r\n            localTsNames.push({\r\n                'name':res[d][0],\r\n                'path':res[d][1],\r\n                'size':res[d][2],\r\n                'percent':res[d][3]\r\n            })\r\n        }\r\n        this.state({localTsNames})\r\n    }\r\n    render(){\r\n        const{data,title}=this.props\r\n        const{localTsName,isShow}=this.state\r\n        return(\r\n            <Card title={title}>\r\n                {\r\n                    data.map(d=>\r\n                        <div key={d.name}>\r\n                            <span onClick={this.getTsName} style={{width:'120px'}}>{d.name}</span>\r\n                            <Progress \r\n                            style={{width:'70%',float:'right'}} \r\n                            percent={d.value}\r\n                            strokeColor={d.value>95?BASE_RED:(d.value>80?BASE_DYELLOW:BASE_BLUE)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                <Modal\r\n                    title={localTsName}\r\n                    visible={isShow}\r\n                    onCancel={()=>{\r\n                        this.setState({isShow:false})\r\n                    }}\r\n                >\r\n                    <Table\r\n                        bordered\r\n                        rowKey='_id'\r\n                        dataSource={data}\r\n                        columns={this.columns}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Row,Col } from 'antd'\r\n\r\nimport ChartTableSpace from './chart-tablespace'\r\nimport {getzlhists,gettjxtts} from '../../../../api'\r\n\r\n\r\nexport default class TableSpace extends Component{\r\n    state={\r\n        hisdata:[],\r\n        tjxtdata:[],\r\n    }\r\n    initHisData=async()=>{\r\n        const hisres=await getzlhists()\r\n        if(hisres){\r\n            const hisdata=[]\r\n            for (let d in hisres){\r\n                hisdata.push({'name':hisres[d][0],'value':hisres[d][1]})\r\n            }\r\n            this.setState({\r\n                hisdata\r\n            })\r\n        }\r\n    }\r\n\r\n    initTjxtData=async()=>{\r\n        const tjxtres=await gettjxtts()\r\n            if(tjxtres){\r\n            const tjxtdata=[]\r\n            for (let d in tjxtres){\r\n                tjxtdata.push({'name':tjxtres[d][0],'value':tjxtres[d][1]})\r\n            }\r\n            this.setState({\r\n                tjxtdata\r\n            })\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initHisData()\r\n        this.initTjxtData()\r\n    }\r\n    render(){\r\n        const{hisdata,tjxtdata}=this.state\r\n        const histitle='中联his表空间使用情况'  \r\n        const tjxttitle='体检系统表空间使用情况'       \r\n        const hisname='his'  \r\n        const tjxtname='tjxt'  \r\n        return(\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Row gutter={24}>\r\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                        <ChartTableSpace data={hisdata} title={histitle} thisname={hisname}/>\r\n                    </Col>\r\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                        <ChartTableSpace data={tjxtdata} title={tjxttitle} thisname={tjxtname}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Modal,message,Card,Table,Select} from 'antd'\r\n\r\nimport {\r\n    gethislocktables,\r\n    //hisunlocktables,\r\n    gettjxtlocktables\r\n} from '../../../../api'\r\nimport EditBtn from '../../../../components/editbtn'\r\n\r\nconst Option=Select.Option\r\n\r\n\r\nexport default class LockTables extends Component{\r\n\r\n    state={\r\n        loading:false,\r\n        data:[],\r\n        localdb:'1'\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'表名',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'sessionid',\r\n            dataIndex:'sessionid',\r\n        },\r\n        {\r\n            title:'serial',\r\n            dataIndex:'serial',\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(locktable)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.unlockTable(locktable)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    unlockTable=(locktable)=>{\r\n        Modal.confirm({\r\n            title:'确认解锁 '+locktable.name+' 吗？',\r\n            onOk:async()=>{\r\n                /*if(this.state.localdb==='1'){\r\n                    const result=await hisunlocktables(locktable.sessionid+','+locktable.serial)\r\n                    if(result){\r\n                        message.success('解锁成功！')\r\n                        this.selectType('1')\r\n                    }else{\r\n                        message.error('解锁失败！')\r\n                    }\r\n                }else{\r\n                    const result=await tjxtunlocktables(locktable.sessionid+','+locktable.serial)\r\n                    if(result){\r\n                        message.success('解锁成功！')\r\n                        this.selectType('1')\r\n                    }else{\r\n                        message.error('解锁失败！')\r\n                    }\r\n                } */ \r\n                message.error('开发中！')\r\n            }\r\n        })\r\n    }\r\n    \r\n    selectType=async(value)=>{\r\n        this.setState({\r\n            localdb:value\r\n        })\r\n        let result=[]\r\n        this.setState({loading:true})\r\n        if(value==='1'){\r\n            result=await gethislocktables()\r\n        }else{\r\n            result=await gettjxtlocktables()\r\n        }\r\n        this.setState({loading:false})\r\n        if(result){\r\n            const data=[]\r\n            let i=1\r\n            for (let d in result){\r\n                data.push({\r\n                    '_id':i,\r\n                    'name':result[d][0],\r\n                    'sessionid':result[d][1],\r\n                    'serial':result[d][2]\r\n                })\r\n                i++\r\n            }\r\n            this.setState({\r\n                data\r\n            })\r\n        }else{\r\n            message.error(\"获取数据失败!\")\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    render(){\r\n        const {data,loading}=this.state\r\n        const extra=(<Select onChange={this.selectType} style={{width:'150px'}}>\r\n                    <Option value='1'>his锁表情况</Option>\r\n                    <Option value='2'>体检系统锁表情况</Option>\r\n                </Select>)\r\n        return(\r\n            <Card extra={extra} >\r\n                <Table\r\n                rowKey='_id'\r\n                bordered\r\n                loading={loading}\r\n                dataSource={data}\r\n                columns={this.columns}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Card,Button,Icon,message} from 'antd'\r\nimport {dbb,cnl} from '../../../redux/actions/setting-action'\r\nimport {\r\n    ACCESS_LOG_PATH,\r\n    ERROR_LOG_PATH,\r\n    DB_BACKUP_PATH\r\n} from '../../../utils/constants'\r\n\r\nconst Item=Form.Item\r\n\r\nclass Setting extends Component{\r\n    \r\n    /*clearSession=async()=>{\r\n        const result=await delovertimesession()\r\n        message.success(result.msg)\r\n    }*/\r\n    \r\n    dbBackup=async()=>{\r\n        await this.props.dbb(DB_BACKUP_PATH)\r\n        const result=this.props.settingReducer\r\n        message.success(result.msg)\r\n    }\r\n    \r\n    clearAccessLog=async()=>{\r\n        await this.props.cnl(ACCESS_LOG_PATH)\r\n        const result=this.props.settingReducer\r\n        message.success(result.msg)\r\n    }\r\n    \r\n    clearErrorLog=async()=>{\r\n        await this.props.cnl(ERROR_LOG_PATH)\r\n        const result=this.props.settingReducer\r\n        message.success(result.msg)\r\n    }\r\n    \r\n    render(){\r\n        const formItemLayout={\r\n            labelCol:{span:3},\r\n            wrapperCol:{span:16}\r\n        }\r\n        return(\r\n            <Card>\r\n                <Form {...formItemLayout}>\r\n                    <Item label=\"数据备份\">\r\n                        <Button type='primary' onClick={this.dbBackup}><Icon type=\"export\" />备份</Button>\r\n                    </Item>\r\n                    <Item label=\"清理日志\">\r\n                        <Button type='primary' onClick={this.clearAccessLog}><Icon type=\"file\" />访问日志</Button>&nbsp;&nbsp;\r\n                        <Button type='primary' onClick={this.clearErrorLog}><Icon type=\"file\" />错误日志</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nSetting.propTypes={\r\n    settingReducer:PropTypes.object.isRequired,\r\n    dbb:PropTypes.func.isRequired,\r\n    cnl:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        settingReducer:state.settingReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {dbb,cnl}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting)","/*\r\n包含多个action creator函数的模块\r\n同步action: 对象{type:'',data:}\r\n异步action: 函数dispatch=>{}\r\n*/\r\nimport {\r\n    BACKUP_DATA,\r\n    CLEAR_ACCLOG,\r\n    CLEAR_ERRLOG,\r\n} from '../actiontypes'\r\n\r\nimport {\r\n    delovertimesession,\r\n    database_backup,\r\n    clear_nginxlog,\r\n} from '../../api'\r\n\r\n\r\n//清理session\r\nconst delovertimesessionAction = data =>({\r\n    type:BACKUP_DATA,\r\n    data\r\n})\r\nexport const dots = () => async dispatch => {\r\n    const result = await delovertimesession()\r\n    if(result.status === 1){\r\n        dispatch(delovertimesessionAction(result.data))\r\n    }\r\n  }\r\n\r\n//备份\r\nconst databasebackupAction = (msg,status) =>({\r\n    type:CLEAR_ACCLOG,\r\n    msg,\r\n    status\r\n})\r\nexport const dbb = path => async dispatch=>{\r\n    const result=await database_backup(path)\r\n    dispatch(databasebackupAction(result.msg,result.status))\r\n}\r\n\r\n//清理日志\r\nconst clearnginxlogAction = (msg,status) =>({\r\n    type:CLEAR_ERRLOG,\r\n    msg,\r\n    status\r\n})\r\nexport const cnl = path => async dispatch=>{\r\n    const result = await clear_nginxlog(path)\r\n    dispatch(clearnginxlogAction(result.msg,result.status))\r\n}","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\n\r\nconst Item=Form.Item\r\n\r\nclass AddForm extends PureComponent{\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        bookcategory:PropTypes.object\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {bookcategory}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:15}\r\n        }\r\n        return(\r\n            <Form>\r\n                <Item label='类别名称' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('name',{\r\n                        initialValue:bookcategory.name,\r\n                        rules:[\r\n                        {required:true,message:'类别名称不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入类别名称名!'/>\r\n                    )\r\n                }\r\n                </Item>                \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\n\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {formateDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rBookCategorys,couBookCategory,dBookCategory} from '../../../../api'\r\nimport AddForm from './addform'\r\n\r\nexport default class BookCategory extends Component{\r\n    state={\r\n        bookcategorys:[],\r\n        loading:false,\r\n        isShow:false,\r\n    }\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'id',\r\n            dataIndex:'_id',\r\n        },{\r\n            title:'名称',\r\n            dataIndex:'name',\r\n        },\r\n        {\r\n            title:'创建时间',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>formateDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(bookcategory)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(bookcategory)} />&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteBookCategory(bookcategory)} />\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n    \r\n    getBookCategorys= async()=>{\r\n        this.setState({loading:true})\r\n        const result=await rBookCategorys()\r\n        this.setState({loading:false})\r\n        if(result.status===1){\r\n            const bookcategorys=result.data\r\n            this.setState({bookcategorys})\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.bookcategory=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(bookcategory)=>{\r\n        this.bookcategory=bookcategory\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    addOrUpdateBookCategory=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShow:false})\r\n                const bookcategory=values\r\n                this.form.resetFields()\r\n                if(this.bookcategory){\r\n                    bookcategory._id=this.bookcategory._id\r\n                }\r\n                const result=await couBookCategory(bookcategory)\r\n                if(result.status===1){\r\n                    message.success('操作成功')\r\n                    this.getBookCategorys()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    deleteBookCategory=(bookcategory)=>{\r\n        Modal.confirm({\r\n            title:'确认删除'+bookcategory.name+'吗？',\r\n            onOk:async()=>{\r\n                const result=await dBookCategory(bookcategory._id)\r\n                if(result.status===1){\r\n                    message.success('删除成功！')\r\n                    this.getBookCategorys()\r\n                }\r\n            }\r\n        })\r\n    }\r\n   \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.getBookCategorys()\r\n    }\r\n    render(){\r\n        const {bookcategorys,loading,isShow}=this.state\r\n        const bookcategory=this.bookcategory||{}\r\n        const title=<Button type='primary' onClick={this.showAdd}><Icon type='block'/>新增</Button>\r\n        return(\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={bookcategorys}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:PAGE_SIZE,ShowQuickJumper:true}}\r\n                />\r\n                \r\n                <Modal\r\n                  title={bookcategory._id ? \"编辑类别\" : '新增类别'}\r\n                  visible={isShow}\r\n                  onOk={this.addOrUpdateBookCategory}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShow:false})\r\n                  }}\r\n                >\r\n                    <AddForm \r\n                    setForm={(form)=>{this.form=form}} \r\n                    bookcategory={bookcategory}\r\n                    bookcategorys={bookcategorys}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Form, \r\n    Row, \r\n    Col,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    } from 'antd'\r\n\r\nimport {rBookCategorys} from '../../../../api'\r\n\r\nconst Option=Select.Option\r\nconst Item=Form.Item\r\n\r\nclass SearchForm extends PureComponent{\r\n    state={\r\n        bookcategorys:[],\r\n    }\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    onReset=()=>{\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    getFormItem=()=>{\r\n        this.props.form.validateFields((err,values)=>{\r\n            this.props.setSearchItem(values)\r\n        })\r\n        \r\n    }\r\n    initSelect=async()=>{\r\n        const bookcategorys=await rBookCategorys()\r\n        if(bookcategorys.status===1){\r\n            this.setState({bookcategorys:bookcategorys.data})\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initSelect()\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {getFieldDecorator}=this.props.form\r\n        const {bookcategorys} =this.state\r\n\r\n        return(\r\n            <Form className=\"ant-advanced-search-form\" >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Item label=\"类别\">\r\n                        {\r\n                        getFieldDecorator('bookcategory',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select >\r\n                                {\r\n                                    bookcategorys.map(ps=><Option key={ps._id} value={ps._id}>{ps.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='名称' >\r\n                        {\r\n                        getFieldDecorator('name',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='作者' >\r\n                        {\r\n                        getFieldDecorator('author',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='出版社' >\r\n                        {\r\n                        getFieldDecorator('publisher',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='出版时间' >\r\n                        {\r\n                        getFieldDecorator('publisheryear',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item style={{float:'right'}}>\r\n                            <span>\r\n                                <Button style={{marginBottom:10}} type='primary' onClick={this.getFormItem}>搜索<Icon type='search'/></Button>\r\n                                <Button style={{ marginLeft: 8 }} type=\"button\" onClick={this.onReset}><Icon type='reload'/>重置</Button>\r\n                            </span>\r\n                        </Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(SearchForm)","import React,{Component} from 'react';\r\nimport {Card,Button,Modal,Icon,Table,message,Collapse} from 'antd'\r\n\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport PreviewBtn from '../../../../components/previewbtn'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rBooks,dBook} from '../../../../api'\r\nimport SearchForm from './searchform'\r\n\r\nconst { Panel } = Collapse\r\n\r\nexport default class Home extends Component{\r\n    state={\r\n        books:[],\r\n        total:0,\r\n        loading:false,\r\n        isShow:false,\r\n        bookcategory:'',  //搜素关键字\r\n        name:'',\r\n        author:'',\r\n        publisher:'',\r\n        publisheryear:'',\r\n\r\n    }\r\n    \r\n    initColums=()=>{\r\n        this.columns=[{\r\n            title:'图书类别',\r\n            dataIndex:'bookcategory',\r\n            width: 150,\r\n            render:(bookcategory)=>{return(bookcategory.name)}\r\n        },{\r\n            title:'书名',\r\n            dataIndex:'name',\r\n            width: 250,\r\n        },{\r\n            title:'isbn',\r\n            dataIndex:'isbn',\r\n            width: 150,\r\n        },{\r\n            title:'作者',\r\n            width: 100,\r\n            dataIndex:'author',\r\n        },{\r\n            title:'出版社',\r\n            width: 200,\r\n            dataIndex:'publisher',\r\n        },{\r\n            title:'出版时间',\r\n            width: 80,\r\n            dataIndex:'publisheryear',\r\n        },{\r\n            title:'价格',\r\n            width: 80,\r\n            dataIndex:'price',\r\n        },{\r\n            title:'入库时间',\r\n            dataIndex:'create_time',\r\n            width: 100,\r\n            render:(create_time)=>shortDate(create_time)\r\n        },{\r\n            title:'操作',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render:(book)=>(\r\n            <span>\r\n                <PreviewBtn onClick={()=>this.props.history.push('/book/detail',{book})}/>&nbsp;&nbsp;&nbsp;\r\n                <EditBtn onClick={()=>this.props.history.push('/book/addorupdate',book)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteBook(book)}/>\r\n            </span>\r\n            )\r\n        }]\r\n    }\r\n    getBooks= async pageNum=>{\r\n        this.pageNum=pageNum\r\n        const isPage=true\r\n        this.setState({loading:true})\r\n        const{bookcategory,name,author,publisher,publisheryear}=this.state\r\n        let result = await rBooks({\r\n            isPage,\r\n            pageNum,\r\n            pageSize:PAGE_SIZE,\r\n            bookcategory,\r\n            name,\r\n            author,\r\n            publisher,\r\n            publisheryear,\r\n        })\r\n        this.setState({loading:false})\r\n        if(result.status===1){\r\n            const {total,list}=result.data\r\n            this.setState({books:list,total})\r\n        }else{\r\n            this.setState({books:[]})\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.book=null\r\n        this.setState({isShow:true})\r\n    }\r\n    \r\n    showUpdate=(book)=>{\r\n        this.book=book\r\n        this.setState({isShow:true})\r\n    }\r\n\r\n    resetForm=()=>{\r\n        this.form.resetFields()\r\n    }\r\n    \r\n    deleteBook=(book)=>{\r\n        Modal.confirm({\r\n            title:'确认删除？',\r\n            onOk:async()=>{\r\n                const result=await dBook(book._id)\r\n                if(result.status===1){\r\n                    message.success('删除成功！')\r\n                    this.getBooks(1)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    setSearchItem=(searchItem)=>{\r\n        this.setState({\r\n            bookcategory:searchItem.bookcategory,\r\n            name:searchItem.name,\r\n            author:searchItem.author,\r\n            publisher:searchItem.publisher,\r\n            publisheryear:searchItem.publisheryear,\r\n        },()=>{  //解决setState延迟\r\n            this.getBooks(this.pageNum)\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.getBooks(1)\r\n    }\r\n    \r\n    render(){\r\n        const {books,total,loading}=this.state\r\n        const title=(<span>\r\n            <Button type='primary' onClick={()=>this.props.history.push('/book/addorupdate')}><Icon type='unordered-list'/>新增</Button>\r\n            </span>)\r\n \r\n        return(\r\n            <Card title={title} >\r\n                <Collapse>\r\n                <Panel header=\"过滤\" >\r\n                <SearchForm setForm={(form)=>{this.form=form}} setSearchItem={this.setSearchItem}/>\r\n                </Panel>\r\n                </Collapse>\r\n                <Table\r\n                bordered\r\n                size='small'\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={books}\r\n                columns={this.columns}\r\n                scroll={{ x: 1000 }}\r\n                pagination={{\r\n                    current:this.pageNum,\r\n                    defaultPageSize:PAGE_SIZE,\r\n                    ShowQuickJumper:true,\r\n                    total,\r\n                    onChange:this.getBooks\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Upload,Icon,Modal,message} from 'antd'\r\n\r\nimport {BASE_IMG_URL,FILELIST_LENGTH} from '../../../../utils/constants'\r\n\r\nexport default class PicsWall extends Component{\r\n    \r\n    static proTypes={\r\n        cover:PropTypes.array\r\n    }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        let fileList=[]\r\n        const {cover}=this.props\r\n        if(cover&&cover.length>0){\r\n            let imgarr=cover.split(',')\r\n            fileList=imgarr.map((ia,index)=>({\r\n                    uid:-index,\r\n                    name:ia,\r\n                    statur:'done',\r\n                    url:BASE_IMG_URL+ia\r\n                }\r\n            ))\r\n        }\r\n        this.state={\r\n            previewVisble:false,//显示大图\r\n            previewImage:'', //大图\r\n            fileList\r\n        }\r\n    }\r\n    //已上传图片数组\r\n    getImgs=()=>{\r\n        //return this.state.fileList.map(file=>file.name)\r\n        let obj=''\r\n        this.state.fileList.map(file=>\r\n            obj+=file.name+','\r\n        )\r\n        return obj.substring(0,obj.length-1)\r\n    }\r\n    \r\n    handleCancel=()=>this.setState({previewVisble:false})\r\n    \r\n    //预览\r\n    handlePreview=file=>{\r\n        this.setState({\r\n            previewImage:file.url||file.thumbUrl,\r\n            previewVisble:true,\r\n        })\r\n    }\r\n    handleChange=({file,fileList})=>{\r\n        if(file.status==='done'){\r\n            const result=file.response\r\n            if(result.status===1){\r\n                message.success('上传成功!')\r\n                const {data}=result\r\n                file=fileList[fileList.length-1]\r\n                file.name=data[0]\r\n                file.url=data[2]\r\n            }else{\r\n                message.error('上传失败!')\r\n            }\r\n            \r\n        }else if(file.status==='remove'){\r\n            /*const result=await reqDeleteImg(file.name)\r\n            if(result.status===0){\r\n                message.success('删除成功!')\r\n            }else{\r\n                message.error('删除失败!')\r\n            }*/\r\n        }\r\n        this.setState({fileList})\r\n        }\r\n    \r\n    render(){\r\n        const {previewImage,previewVisble,fileList}=this.state\r\n        const uploadButton=(\r\n            <div>\r\n                <Icon type=\"plus\"/>\r\n                <div>上传</div>\r\n            </div>\r\n        )\r\n        return(\r\n            <div>\r\n                <Upload\r\n                 action='/api/oapm/img/'\r\n                 accept='image/*'\r\n                 name='image'\r\n                 listType='picture-card'\r\n                 fileList={fileList}\r\n                 onPreview={this.handlePreview}\r\n                 onChange={this.handleChange}\r\n                >\r\n                {fileList.length>=FILELIST_LENGTH?null:uploadButton}\r\n                </Upload>\r\n                <Modal width='80%' visible={previewVisble} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt='' style={{width:'auto'}} src={previewImage}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\n\r\nimport {Card,Form,Input,Select,Button,Icon,DatePicker,message} from 'antd'\r\nimport BackBtn from '../../../../components/backbtn'\r\nimport PicsWall from './picswall'\r\n\r\nimport {couBook,rBookCategorys} from '../../../../api'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Form.Item\r\nconst {Option}=Select\r\nconst {TextArea}=Input\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddOrUpdate extends Component{\r\n    state={\r\n        bookcategorys:[],\r\n    }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.pw=React.createRef()\r\n    }\r\n    \r\n    getBookCategorys=async ()=>{\r\n        const result=await rBookCategorys()\r\n        if(result.status===1){\r\n            const bookcategorys=result.data\r\n            this.setState({bookcategorys})            \r\n        }\r\n        \r\n    }\r\n    \r\n    displayRender=(label)=> {\r\n        return label[label.length - 1]\r\n    }\r\n\r\n    submit=()=>{\r\n        this.props.form.validateFields(async(error,values)=>{\r\n            if(!error){\r\n                const {\r\n                    create_time,\r\n                    name,\r\n                    isbn,\r\n                    author,\r\n                    publisher,\r\n                    publisheryear,\r\n                    price,\r\n                    profile,\r\n                    status,\r\n                    bookcategory,\r\n                }=values\r\n                const cover=this.pw.current.getImgs()\r\n                const book={\r\n                    create_time,\r\n                    name,\r\n                    isbn,\r\n                    author,\r\n                    publisher,\r\n                    publisheryear,\r\n                    price,\r\n                    profile,\r\n                    status,\r\n                    bookcategory,\r\n                    cover\r\n                }\r\n                if(this.isUpdate){\r\n                    book._id=this.book._id\r\n                }\r\n                const result=await couBook(book)\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.props.history.goBack()\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.getBookCategorys()\r\n        const book=this.props.location.state\r\n        this.isUpdate=!!book\r\n        //{}空对象 避免undifine\r\n        this.book=book ||{}\r\n    }\r\n    render(){\r\n        const {bookcategorys}=this.state\r\n        const {isUpdate,book}=this\r\n        const {\r\n            create_time,\r\n            name,\r\n            isbn,\r\n            author,\r\n            publisher,\r\n            publisheryear,\r\n            price,\r\n            profile,\r\n            bookcategory,\r\n            cover\r\n        }=book\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:4},\r\n            wrapperCol:{span:8}\r\n        }\r\n\r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>{isUpdate ? '更新记录':'新增记录'}</span>\r\n            </span>\r\n        )\r\n        return(\r\n            <Card title={title}>\r\n                <Form {...formItemLayout}>\r\n                    <Item label=\"入库时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue:isUpdate ? moment(create_time,'YYYY-MM-DD') : moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'入库时间不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"图书类别\">\r\n                    {getFieldDecorator('bookcategory',{\r\n                        initialValue:isUpdate ? bookcategory._id : 1,\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'图类别不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Select>\r\n                        {\r\n                            bookcategorys.map(pc=><Option key={pc._id} value={pc._id}>{pc.name}</Option>)\r\n                        }\r\n                        </Select>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"书名\">\r\n                    {getFieldDecorator('name',{\r\n                        initialValue:isUpdate ? name :'',\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'书名不能为空!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Input placeholder='请输入书名!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"isbn\">\r\n                    {getFieldDecorator('isbn',{\r\n                        initialValue:isUpdate ? isbn : ''\r\n                    })(\r\n                        <Input placeholder='请输入isbn!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"作者\">\r\n                    {getFieldDecorator('author',{\r\n                        initialValue:isUpdate ? author : ''\r\n                    })(\r\n                        <Input placeholder='请输入作者!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"出版社\">\r\n                    {getFieldDecorator('publisher',{\r\n                        initialValue:isUpdate ? publisher : ''\r\n                    })(\r\n                        <Input placeholder='请输入出版社!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"出版时间\">\r\n                    {getFieldDecorator('publisheryear',{\r\n                        initialValue:isUpdate ? publisheryear : ''\r\n                    })(\r\n                        <Input placeholder='请输入出版时间（年）!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"价格\">\r\n                    {getFieldDecorator('price',{\r\n                        initialValue:isUpdate ? price : ''\r\n                    })(\r\n                        <Input placeholder='请输入价格!'/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"简介\" labelCol={{span:4}} wrapperCol={{span:20}}>\r\n                    {getFieldDecorator('profile',{\r\n                        initialValue:isUpdate ? profile : ''\r\n                    })(\r\n                         <TextArea placeholder='' autoSize={{minRows:2,maxRows:6}}/>\r\n                    )}\r\n                    </Item>\r\n                    <Item label=\"封面\">\r\n                        <PicsWall ref={this.pw} cover={cover}/>\r\n                    </Item>\r\n                    <Item>\r\n                        <Button type='primary' onClick={this.submit}><Icon type=\"save\"/>提交</Button>&nbsp;&nbsp;\r\n                        <Button type='danger'><Icon type=\"close\" />取消</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddOrUpdate)","import React,{Component} from 'react';\r\n\r\nimport {Card,Descriptions,Empty,Modal} from 'antd'\r\nimport {BASE_IMG_URL} from '../../../../utils/constants'\r\nimport BackBtn from '../../../../components/backbtn'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n\r\nconst Item=Descriptions.Item\r\n\r\nexport default class ProcessedRecordDetail extends Component{\r\n    state={\r\n        previewVisble:false,//显示大图\r\n        previewImage:'', //大图\r\n    }\r\n\r\n    handleCancel=()=>this.setState({previewVisble:false})\r\n    \r\n    //预览\r\n    handlePreview=img=>{\r\n        this.setState({\r\n            previewImage:BASE_IMG_URL+img,\r\n            previewVisble:true,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            create_time,\r\n            name,\r\n            author,\r\n            publisher,\r\n            publisheryear,\r\n            price,\r\n            isbn,\r\n            profile,\r\n            bookcategory,\r\n            cover\r\n        }=this.props.location.state.book\r\n\r\n        const {previewImage,previewVisble}=this.state\r\n        const title=(\r\n            <span>\r\n                <BackBtn onClick={()=>this.props.history.goBack()}/>\r\n                <span>详情</span>\r\n            </span>\r\n        )\r\n\r\n        return(\r\n            <Card title={title}>\r\n              <Descriptions bordered>\r\n                <Item label='入库时间' span={2}>{shortDate(create_time)}</Item>\r\n                <Item label='图书类别' >{bookcategory.name}</Item>\r\n                <Item label='书名'>{name}</Item>\r\n                <Item label='isbn'>{isbn}</Item>\r\n                <Item label='作者'>{author}</Item>\r\n                <Item label='出版社'>{publisher}</Item>\r\n                <Item label='出版时间'>{publisheryear}</Item>\r\n                <Item label='价格'>{price}</Item>\r\n                <Item label='图书简介' span={3}>{profile}</Item>\r\n                <Item label='封面图片' span={3}>\r\n                {\r\n                    cover ? cover.split(',').map(img=>(\r\n                            <a key={img} onClick={()=>{this.handlePreview(img)}}>\r\n                            <img\r\n                            key={img}\r\n                            className=\"processedrecord-img\"\r\n                            src={BASE_IMG_URL+img}\r\n                            alt=\"img\"/>\r\n                            </a>\r\n                        )\r\n                    ):<Empty />\r\n                }\r\n                </Item>\r\n              </Descriptions>\r\n              <Modal width='80%' visible={previewVisble} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt='' style={{width:'auto'}} src={previewImage}/>\r\n                </Modal>\r\n            </Card>  \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport './index.less'\r\n\r\nimport Home from './home'\r\nimport AddOrUpdate from './addorupdate'\r\nimport Detail from './detail'\r\n\r\nexport default class Book extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path='/book' component={Home} exact/>\r\n                <Route path='/book/addorupdate' component={AddOrUpdate}/>\r\n                <Route path='/book/detail' component={Detail}/>\r\n                <Redirect to='/book' />\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input,DatePicker,Select} from 'antd'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {rBooks} from '../../../../api'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\nconst Item=Form.Item\r\nconst {Option}=Select\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddForm extends Component{\r\n\r\n    state={\r\n        books:[],\r\n    }\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        bookstock:PropTypes.object\r\n    }\r\n    \r\n    handleSearchBooks=async value =>{\r\n        if(value){\r\n            const result=await rBooks({'name':value})\r\n            if(result.status===1){\r\n                const books=result.data.list\r\n                this.setState({books})            \r\n            }else{\r\n                this.setState({books:[]})\r\n            }\r\n        }else{\r\n            this.setState({books:[]})\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {bookstock}=this.props\r\n        const {books}=this.state\r\n        const bookoptions = books.map(d => <Option key={d._id} >{d.name}</Option>)\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:16}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"入库时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue: bookstock.create_time?moment(bookstock.create_time,'YYYY-MM-DD'):moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'入库时间!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                </Item>\r\n                <Item label='图书' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('book',{\r\n                        initialValue:bookstock.book?bookstock.book._id:1,\r\n                        rules:[\r\n                        {required:true,message:'图书不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"图书\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchBooks}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {bookoptions}\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='数量' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('nums',{\r\n                        initialValue:bookstock.nums,\r\n                        rules:[\r\n                        {required:true,message:'数量不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Input />\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Form, \r\n    Row, \r\n    Col,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    DatePicker\r\n    } from 'antd'\r\n\r\n\r\nconst Item=Form.Item\r\nconst { RangePicker } = DatePicker\r\n\r\nclass SearchForm extends PureComponent{\r\n\r\n    state={\r\n        startdate:'',\r\n        enddate:'',\r\n    }\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    onReset=()=>{\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    getFormItem=()=>{\r\n        this.props.form.validateFields((err,values)=>{\r\n            this.props.setSearchItem({\r\n                bookname:values.bookname,\r\n                startdate:this.state.startdate,\r\n                enddate:this.state.enddate\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    dataonChange=(date, dateString)=>{\r\n        const startdate=dateString[0]\r\n        const enddate=dateString[1]\r\n        this.setState({startdate,enddate})\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {getFieldDecorator}=this.props.form\r\n\r\n        return(\r\n            <Form className=\"ant-advanced-search-form\" >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Item label='书名' >\r\n                        {\r\n                        getFieldDecorator('bookname',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <Item label='入库时间' >\r\n                        {\r\n                        getFieldDecorator('create_time',{\r\n                        initialValue:''})\r\n                            (\r\n                                <RangePicker onChange={this.dataonChange} />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Item style={{float:'right'}}>\r\n                            <span>\r\n                                <Button style={{marginBottom:10}} type='primary' onClick={this.getFormItem}>搜索<Icon type='search'/></Button>\r\n                                <Button style={{ marginLeft: 8 }} type=\"button\" onClick={this.onReset}><Icon type='reload'/>重置</Button>\r\n                            </span>\r\n                        </Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(SearchForm)","import React,{Component} from 'react'\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rBookStocks, couBookStock, dBookStock} from '../../../../api'\r\nimport AddForm from './addform'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport SearchForm from './searchform'\r\n\r\n\r\nexport default class BookStock extends Component{\r\n\r\n    state={\r\n        total:0,\r\n        isShowAdd:false,\r\n        loading:false,\r\n        bookstocks:[],  //用于显示table数据\r\n        bookname:'',\r\n        startdate:'',\r\n        enddate:''\r\n    }\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'书名',\r\n            dataIndex:'book',\r\n            render:(book)=>{return(book.name)}\r\n        },\r\n        {\r\n            title:'数量',\r\n            dataIndex:'nums',\r\n        },\r\n        {\r\n            title:'入库日期',\r\n            dataIndex:'create_time',\r\n            render:(create_time)=>shortDate(create_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:300,\r\n            render:(bookstock)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(bookstock)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteBookStock(bookstock)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n\r\n    getBookStocks=async pageNum=>{\r\n        this.pageNum=pageNum\r\n        const isPage=true\r\n        this.setState({loading:true})\r\n        const{bookname,startdate,enddate}=this.state\r\n        let result = await rBookStocks({\r\n            isPage,\r\n            pageNum,\r\n            pageSize:PAGE_SIZE,\r\n            bookname,\r\n            startdate,\r\n            enddate,\r\n        })\r\n        this.setState({loading:false})\r\n        if(result.status===1){\r\n            const {total,list}=result.data\r\n            this.setState({bookstocks:list,total})\r\n        }else{\r\n            this.setState({bookstocks:[]})\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.bookstock=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n    addOrUpdateBookStock=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const bookstock=values\r\n                bookstock.create_time=shortDate(values['create_time'])\r\n                this.form.resetFields()\r\n                if(this.bookstock){\r\n                    bookstock._id=this.bookstock._id\r\n                }\r\n                const result=await couBookStock(bookstock)\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.getBookStocks(1)\r\n                }else{\r\n                    message.error(result.msg)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(bookstock)=>{\r\n        this.bookstock=bookstock\r\n        this.setState({isShowAdd:true})\r\n    }\r\n    \r\n    deleteBookStock=(bookstock)=>{\r\n        Modal.confirm({\r\n            title:'确认删除吗？',\r\n            onOk:async()=>{\r\n                const result=await dBookStock(bookstock._id)\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.getBookStocks(1)\r\n                }\r\n            }\r\n        })\r\n    } \r\n    \r\n    setSearchItem=(searchItem)=>{\r\n        this.setState({\r\n            bookname:searchItem.bookname,\r\n            startdate:searchItem.startdate,\r\n            enddate:searchItem.enddate,\r\n        },()=>{  //解决setState延迟\r\n            this.getBookStocks(this.pageNum)\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.getBookStocks(1)\r\n    }\r\n    render(){\r\n        const {bookstocks,loading,isShowAdd,total}=this.state\r\n        const bookstock=this.bookstock||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"history\" />入库</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <SearchForm setForm={(form)=>{this.form=form}} setSearchItem={this.setSearchItem}/>\r\n                <Table\r\n                bordered\r\n                size='small'\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={bookstocks}\r\n                columns={this.columns}\r\n                pagination={{\r\n                    current:this.pageNum,\r\n                    defaultPageSize:PAGE_SIZE,\r\n                    ShowQuickJumper:true,\r\n                    total,\r\n                    onChange:this.getBooks\r\n                    }}\r\n                />\r\n                <Modal\r\n                  title={bookstock._id ? \"编辑入库\" : '新增入库'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateBookStock}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} bookstock={bookstock} bookstocks={bookstocks}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,DatePicker,Select,Input} from 'antd'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport {rBooks,rUsers,rBookStocks, rBorrowRecords} from '../../../../api'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\nconst Item=Form.Item\r\nconst {Option}=Select\r\nconst thisDate=shortDate(Date.now())\r\n\r\nclass AddForm extends Component{\r\n\r\n    state={\r\n        books:[],\r\n        users:[],\r\n        stock:0\r\n    }\r\n    \r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        borrowrecord:PropTypes.object\r\n    }\r\n    \r\n    handleSearchBooks=async value =>{\r\n        const result=await rBooks({'name':value})\r\n        if(result.status===1){\r\n            this.setState({books:result.data.list})\r\n        }  \r\n    }\r\n\r\n    handleSearchUsers=async value =>{\r\n        if(value){\r\n            const result1=await rUsers({'username':value})\r\n            const result2=await rUsers({'name':value})\r\n            if(result1.status===1){\r\n                const users=result1.data\r\n                this.setState({users})            \r\n            }else if(result2.status===1){\r\n                const users=result2.data\r\n                this.setState({users}) \r\n            }else{\r\n                this.setState({users:[]}) \r\n            }\r\n        }else{\r\n            this.setState({users:[]})\r\n        }\r\n    }\r\n    \r\n    getStock=async value =>{\r\n        const bresult=await rBookStocks({'book':value})\r\n        const brresult=await rBorrowRecords({'bookid':value,'status':0})\r\n        let allstock=0\r\n        let allbr=0\r\n        if(bresult.status===1){\r\n            const bs=bresult.data.list\r\n            for(let i=0;i<bs.length;i++){\r\n                allstock+=bs[i].nums\r\n            }\r\n        }\r\n        if(brresult.status===1){\r\n            const br=brresult.data.list\r\n            allbr=br.length\r\n        }\r\n        this.setState({stock:allstock-allbr})\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {borrowrecord}=this.props\r\n        const {users,books}=this.state\r\n        const useroptions = users.map(d => <Option key={d._id} >{d.username}-{d.name}</Option>)\r\n        const bookoptions = books.map(d => <Option key={d._id} >{d.bookcategory.name}-{d.name}</Option>)\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:16}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"借阅时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue: borrowrecord.create_time?moment(borrowrecord.create_time,'YYYY-MM-DD'):moment(thisDate,'YYYY-MM-DD'),\r\n                        rules:[\r\n                        {\r\n                            required:true,message:'借阅时间!'\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <DatePicker/>\r\n                    )}\r\n                </Item>\r\n                <Item label='图书' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('book',{\r\n                        initialValue: borrowrecord.book?borrowrecord.book._id:1,\r\n                        rules:[\r\n                        {required:true,message:'图书不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            onChange={this.getStock}\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"选择图书\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchBooks}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {bookoptions}\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n                {borrowrecord.book ? null:(<Item label='库存' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('stock',{\r\n                        initialValue:this.state.stock,\r\n                        rules:[\r\n                        {required:false}\r\n                        ]\r\n                    })(\r\n                        <Input disabled/>\r\n                    )\r\n                }\r\n                </Item>)}\r\n                <Item label='借阅人' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('reader',{\r\n                        initialValue:borrowrecord.reader?borrowrecord.reader._id:1,\r\n                        rules:[\r\n                        {required:true,message:'借阅人不能为空!'}\r\n                        ]\r\n                    })(\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"选择借阅人\"\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSearch={this.handleSearchUsers}\r\n                            notFoundContent={null}\r\n                        >\r\n                        {useroptions}\r\n                        </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(AddForm)","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Form,Input} from 'antd'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\nconst Item=Form.Item\r\n\r\n\r\nclass ReturnForm extends Component{\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        borrowrecord:PropTypes.object\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {borrowrecord}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:16}\r\n        }\r\n        return(\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"借阅时间\">\r\n                    {getFieldDecorator('create_time',{\r\n                        initialValue: shortDate(borrowrecord.create_time),\r\n                        rules:[\r\n                        {\r\n                            required:false\r\n                        }\r\n                        ]\r\n                    })(\r\n                        <Input disabled/>\r\n                    )}\r\n                </Item>\r\n                <Item label='图书' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('book',{\r\n                        initialValue:borrowrecord.book.name,\r\n                        rules:[\r\n                        {required:false}\r\n                        ]\r\n                    })(\r\n                        <Input disabled/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='借阅人' {...formItemLayout}>\r\n                {\r\n                    getFieldDecorator('reader',{\r\n                        initialValue:borrowrecord.reader.name,\r\n                        rules:[\r\n                        {required:false}\r\n                        ]\r\n                    })(\r\n                        <Input disabled/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(ReturnForm)","import React,{PureComponent} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Form, \r\n    Row, \r\n    Col,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    DatePicker\r\n    } from 'antd'\r\n\r\nimport {rUsers} from '../../../../api'\r\n\r\nconst Option=Select.Option\r\nconst Item=Form.Item\r\nconst { RangePicker } = DatePicker\r\n\r\nclass SearchForm extends PureComponent{\r\n\r\n    state={\r\n        users:[],\r\n        bstartdate:'',\r\n        benddate:'',\r\n        rstartdate:'',\r\n        renddate:'',\r\n    }\r\n\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    onReset=()=>{\r\n        this.props.form.resetFields()\r\n        this.setState({\r\n            bstartdate:'',\r\n            benddate:'',\r\n            rstartdate:'',\r\n            renddate:'',\r\n        })\r\n    }\r\n\r\n    getFormItem=()=>{\r\n        this.props.form.validateFields((err,values)=>{\r\n            this.props.setSearchItem({\r\n                book:values.book,\r\n                reader:values.reader,\r\n                status:values.status,\r\n                bstartdate:this.state.bstartdate,\r\n                benddate:this.state.benddate,\r\n                rstartdate:this.state.rstartdate,\r\n                renddate:this.state.renddate\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    bdataonChange=(date, dateString)=>{\r\n        const bstartdate=dateString[0]\r\n        const benddate=dateString[1]\r\n        this.setState({bstartdate,benddate})\r\n    }\r\n\r\n    rdataonChange=(date, dateString)=>{\r\n        const rstartdate=dateString[0]\r\n        const renddate=dateString[1]\r\n        this.setState({rstartdate,renddate})\r\n    }\r\n\r\n    handleSearchUsers=async value =>{\r\n        if(value){\r\n            const result1=await rUsers({'username':value})\r\n            const result2=await rUsers({'name':value})\r\n            if(result1.status===1){\r\n                const users=result1.data\r\n                this.setState({users})            \r\n            }else if(result2.status===1){\r\n                const users=result2.data\r\n                this.setState({users}) \r\n            }else{\r\n                this.setState({users:[]}) \r\n            }\r\n        }else{\r\n            this.setState({users:[]})\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    \r\n    render(){\r\n        const {getFieldDecorator}=this.props.form\r\n        const bookStatus=[{'value':0,'label':'未归还'},{'value':1,'label':'已归还'}]\r\n        const useroptions = this.state.users.map(d => <Option key={d._id} >{d.username}-{d.name}</Option>)\r\n        return(\r\n            <Form className=\"ant-advanced-search-form\" >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Item label='借阅时间' >\r\n                        {\r\n                        getFieldDecorator('create_time',{\r\n                        initialValue:''})\r\n                            (\r\n                                <RangePicker onChange={this.bdataonChange} />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='归还时间' >\r\n                        {\r\n                        getFieldDecorator('return_time',{\r\n                        initialValue:''})\r\n                            (\r\n                                <RangePicker onChange={this.rdataonChange} />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label='书名' >\r\n                        {\r\n                        getFieldDecorator('book',{\r\n                        initialValue:''})\r\n                            (\r\n                            <Input />\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item label=\"归还状态\">\r\n                        {\r\n                        getFieldDecorator('status',{\r\n                        initialValue:''})\r\n                        (\r\n                            <Select >\r\n                                {\r\n                                    bookStatus.map(ps=><Option key={ps.value} value={ps.value}>{ps.label}</Option>)\r\n                                }\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    \r\n                    <Col span={8}>\r\n                        <Item label='借阅人' >\r\n                        {\r\n                        getFieldDecorator('reader',{\r\n                        initialValue:''})\r\n                            (\r\n                                <Select\r\n                                showSearch\r\n                                style={{ width: '100%' }}\r\n                                placeholder=\"选择借阅人\"\r\n                                showArrow={false}\r\n                                filterOption={false}\r\n                                onSearch={this.handleSearchUsers}\r\n                                notFoundContent={null}\r\n                            >\r\n                            {useroptions}\r\n                            </Select>\r\n                            )\r\n                        }\r\n                        </Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Item style={{float:'right'}}>\r\n                            <span>\r\n                                <Button style={{marginBottom:10}} type='primary' onClick={this.getFormItem}>搜索<Icon type='search'/></Button>\r\n                                <Button style={{ marginLeft: 8 }} type=\"button\" onClick={this.onReset}><Icon type='reload'/>重置</Button>\r\n                            </span>\r\n                        </Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(SearchForm)","import React,{Component} from 'react'\r\nimport {Card,Table,Button,Icon,message,Modal,Tag} from 'antd'\r\n\r\nimport EditBtn from '../../../../components/editbtn'\r\nimport DeleteBtn from '../../../../components/deletebtn'\r\nimport {BASE_RED,BASE_GREEN} from '../../../../utils/colors'\r\nimport {PAGE_SIZE} from '../../../../utils/constants'\r\nimport {rBorrowRecords, couBorrowRecord,dBorrowRecord} from '../../../../api'\r\nimport AddForm from './addform'\r\nimport ReturnForm from './returnform'\r\nimport {shortDate} from '../../../../utils/dateUtils'\r\nimport SearchForm from './searchform'\r\n\r\nexport default class BorrowRecord extends Component{\r\n\r\n    state={\r\n        total:0,\r\n        isShowAdd:false,\r\n        isShowReturn:false,\r\n        loading:false,\r\n        borrowrecords:[],  //用于显示table数据\r\n        selectedBr:{},    //选中记录\r\n        status:false,\r\n        reader:0,\r\n        book:'',\r\n        bstartdate:'',\r\n        benddate:'',\r\n        rstartdate:'',\r\n        renddate:'',\r\n    }\r\n    initColums=()=>{\r\n        this.columns=[\r\n        {\r\n            title:'类别/书名',\r\n            dataIndex:'book',\r\n            render:(book)=>{return(book.bookcategory.name+'/'+book.name)}\r\n        },\r\n        {\r\n            title:'借阅人',\r\n            dataIndex:'reader',\r\n            width:120,\r\n            render:(reader)=>{return(reader.username+'-'+reader.name)}\r\n        },\r\n        {\r\n            title:'借出日期',\r\n            dataIndex:'create_time',\r\n            width:100,\r\n            render:(create_time)=>shortDate(create_time)\r\n        },{\r\n            title:'归还状态',\r\n            dataIndex:'status',\r\n            width:80,\r\n            render:(status)=>{\r\n                if(status){\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_GREEN}>已归还</Tag>\r\n                        </span>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <span>\r\n                            <Tag color={BASE_RED}>未归还</Tag>\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },{\r\n            title:'归还日期',\r\n            dataIndex:'return_time',\r\n            width:100,\r\n            render:(return_time)=>shortDate(return_time)\r\n        },\r\n        {\r\n            title:'操作',\r\n            width:80,\r\n            render:(borrowrecord)=>(\r\n            <span>\r\n                <EditBtn onClick={()=>this.showUpdate(borrowrecord)}/>&nbsp;&nbsp;&nbsp;\r\n                <DeleteBtn onClick={()=>this.deleteBorrowRecord(borrowrecord)}/>\r\n            </span>\r\n            )\r\n        }\r\n        ]\r\n    }\r\n\r\n    \r\n    getBorrowRecords=async pageNum=>{\r\n        this.pageNum=pageNum\r\n        const isPage=true\r\n        this.setState({loading:true})\r\n        const{status,book,reader,bstartdate,benddate,rstartdate,renddate}=this.state\r\n        const br={\r\n            isPage,\r\n            pageNum,\r\n            pageSize:PAGE_SIZE,\r\n            status,\r\n            book,\r\n            bstartdate,\r\n            benddate,\r\n            rstartdate,\r\n            renddate,\r\n        }\r\n        if(reader) br.reader=reader\r\n        let result = await rBorrowRecords(br)\r\n        this.setState({loading:false})\r\n        if(result.status===1){\r\n            const {total,list}=result.data\r\n            this.setState({borrowrecords:list,total})\r\n        }else{\r\n            this.setState({borrowrecords:[]})\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    showAdd=()=>{\r\n        this.borrowrecord=null\r\n        this.setState({\r\n            isShowAdd:true\r\n        })\r\n    }\r\n\r\n    onRow=(borrowrecord)=>{\r\n        return{\r\n            onClick:event=>{\r\n                this.setState({\r\n                    selectedBr:borrowrecord,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    addOrUpdateBorrowRecord=()=>{\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                this.setState({isShowAdd:false})\r\n                const borrowrecord=values\r\n                if(borrowrecord.stock<1){\r\n                    message.error(\"库存不足\")\r\n                }else{\r\n                    borrowrecord.create_time=shortDate(values['create_time'])\r\n                    this.form.resetFields()\r\n                    if(this.borrowrecord){\r\n                        borrowrecord._id=this.borrowrecord._id\r\n                    }\r\n                    borrowrecord.status=false\r\n                    const result=await couBorrowRecord(borrowrecord)\r\n                    if(result.status===1){\r\n                        message.success(result.msg)\r\n                        this.getBorrowRecords(1)\r\n                    }else{\r\n                        message.error(result.msg)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate=(borrowrecord)=>{\r\n        this.borrowrecord=borrowrecord\r\n        this.setState({isShowAdd:true})\r\n    }\r\n\r\n    showReturn=()=>{\r\n        this.setState({\r\n            isShowReturn:true\r\n        })\r\n    }\r\n    \r\n    deleteBorrowRecord=(borrowrecord)=>{\r\n        Modal.confirm({\r\n            title:'确认删除吗？',\r\n            onOk:async()=>{\r\n                const result=await dBorrowRecord(borrowrecord._id)\r\n                if(result.status===1){\r\n                    message.success(result.msg)\r\n                    this.getBorrowRecords(1)\r\n                }\r\n            }\r\n        })\r\n    } \r\n\r\n    setSearchItem=(searchItem)=>{\r\n        this.setState({\r\n            status:searchItem.status,\r\n            reader:searchItem.reader,\r\n            book:searchItem.book,\r\n            bstartdate:searchItem.bstartdate,\r\n            benddate:searchItem.benddate,\r\n            rstartdate:searchItem.rstartdate,\r\n            renddate:searchItem.renddate,\r\n\r\n        },()=>{  //解决setState延迟\r\n            this.getBorrowRecords(this.pageNum)\r\n        })\r\n    }\r\n\r\n    returnBook=async()=>{\r\n        const br=this.state.selectedBr||{}\r\n        const obj={}\r\n        if(br&&br.book.name){\r\n            Modal.confirm({\r\n                title:'确认归还吗？',\r\n                onOk:async()=>{\r\n                    obj.status=true\r\n                    let localdate=new Date()\r\n                    obj.return_time=shortDate(localdate)\r\n                    obj._id=br._id\r\n                    const result=await couBorrowRecord(obj)\r\n                    if(result.status===1){\r\n                        message.success(result.msg)\r\n                        this.getBorrowRecords(1)\r\n                    }\r\n                }\r\n            })\r\n        }else{\r\n            message.error(\"请选择要归还的记录！\")\r\n        }\r\n        this.setState({isShowReturn:false})\r\n        \r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n    componentDidMount(){\r\n        this.getBorrowRecords(1)\r\n    }\r\n    render(){\r\n        const {borrowrecords,loading,isShowAdd,isShowReturn,bookcategorys,selectedBr,total}=this.state\r\n        const borrowrecord=this.borrowrecord||{}\r\n        const title=(\r\n             <span>\r\n                 <Button type='primary' onClick={this.showAdd}><Icon type=\"history\" />借阅</Button>&nbsp;&nbsp;&nbsp;\r\n                 <Button type='primary' onClick={this.showReturn} disabled={!selectedBr._id||selectedBr.status}><Icon type=\"rollback\" />归还</Button>\r\n             </span>)\r\n        return(\r\n            <Card title={title} >\r\n                <SearchForm setForm={(form)=>{this.form=form}} setSearchItem={this.setSearchItem}/>\r\n                <Table\r\n                bordered\r\n                size='small'\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={borrowrecords}\r\n                columns={this.columns}\r\n                pagination={{\r\n                    current:this.pageNum,\r\n                    defaultPageSize:PAGE_SIZE,\r\n                    ShowQuickJumper:true,\r\n                    total,\r\n                    onChange:this.getBooks\r\n                    }}\r\n                rowSelection={{\r\n                type:'radio',\r\n                selectedRowKeys:[selectedBr._id],\r\n                onSelect:(borrowrecord)=>{\r\n                    this.setState({\r\n                        selectedBr:borrowrecord,\r\n                    })\r\n                }\r\n                }}\r\n                onRow={this.onRow}\r\n                />\r\n                <Modal\r\n                  title={borrowrecord._id ? \"编辑借阅\" : '新增借阅'}\r\n                  visible={isShowAdd}\r\n                  onOk={this.addOrUpdateBorrowRecord}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowAdd:false}) \r\n                  }}\r\n                >\r\n                    <AddForm setForm={(form)=>{this.form=form}} borrowrecord={borrowrecord} bookcategorys={bookcategorys}/>\r\n                </Modal>\r\n                <Modal\r\n                  title={\"归还\"}\r\n                  visible={isShowReturn}\r\n                  onOk={this.returnBook}\r\n                  onCancel={()=>{\r\n                      this.form.resetFields()\r\n                      this.setState({isShowReturn:false}) \r\n                  }}\r\n                >\r\n                    <ReturnForm setForm={(form)=>{this.form=form}} borrowrecord={selectedBr}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport {Row,Col,Button} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {setBreadCrum} from '../../../redux/actions/account-action'\r\nimport './index.less'\r\n\r\nclass NotFound extends Component {\r\n\r\n    goDashboard=()=>{\r\n        this.props.setBreadCrum('仪表盘')\r\n        this.props.history.replace('/dashboard')\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Row className=\"not-found\">\r\n                <Col span={11} className=\"not-found-left\"></Col>\r\n                <Col span={13} className=\"not-found-right\">\r\n                    <h1>ERROR</h1>\r\n                    <h2>抱歉,您访问的页面不存在.</h2>\r\n                    <div>\r\n                        <Button type='primart' onClick={this.goDashboard}>\r\n                            回到首页\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nNotFound.propTypes={\r\n    setBreadCrum:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = null\r\n\r\nconst mapDispatchToProps =  {setBreadCrum}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NotFound)\r\n","import React,{Component} from 'react';\r\nimport {Redirect,Route,Switch} from 'react-router-dom'\r\nimport { Layout,message } from 'antd';\r\nimport {connect} from 'react-redux'\r\n\r\nimport './index.less'\r\n\r\nimport SiderBar from '../../components/siderbar'\r\nimport HeaderBar from '../../components/headerbar'\r\nimport BreadCrumBar from '../../components/breadcrumbbar'\r\nimport FooterBar from '../../components/footerbar'\r\nimport Dashboard from './dashboard'\r\nimport Group from './account/group'\r\nimport Department from './account/department'\r\nimport User from './account/user'\r\nimport Developing from './developing'\r\nimport ProblemCategory from './oapm/problemcategory'\r\nimport ProcessedRecord from './oapm/processedrecord'\r\nimport ApplicationSoftWare from './oapm/applicationsoftWare'\r\nimport PrinterRepair from './oapm/printerrepair'\r\nimport Cartriday from './oapm/cartriday'\r\nimport TimeLine from './timeline'\r\nimport DeviceCategory from './informationdevice/devicecategory'\r\nimport DeviceModel from './informationdevice/devicemodel'\r\nimport InstallLocation from './informationdevice/installlocation'\r\nimport DeviceInfo from './informationdevice/deviceinfo'\r\nimport Zlqk from './analysis/zlqk'\r\nimport Zdqk from './analysis/zdqk'\r\nimport TableSpace from './tools/tablespace'\r\nimport LockTables from './tools/locktables'\r\nimport Setting from './setting'\r\nimport BookCategory from './bms/bookcategory'\r\nimport Book from './bms/book'\r\nimport BookStock from './bms/bookstock'\r\nimport BorrowRecord from './bms/borrowrecord'\r\nimport NotFound from '../status/404'\r\nimport {logout} from '../../redux/actions/account-action'\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass Admin extends Component{\r\n\r\n    render(){\r\n        const user=this.props.user\r\n        if(!user||!user._id){\r\n            return <Redirect to='/login'/>\r\n        }\r\n        if(!user.menus){\r\n            this.props.logout()\r\n        }\r\n        const menus=user.menus\r\n        const username=user.username\r\n        let path=this.props.location.pathname\r\n        if(path.indexOf('/processedrecord')===0){\r\n            path='/processedrecord'\r\n        }\r\n        if(path.indexOf('/deviceinfo')===0){\r\n            path='/deviceinfo'\r\n        }\r\n        if(username!=='admin'&&!menus.includes(path)&&path!=='/'){\r\n            message.error('没有权限！')\r\n            return <Redirect to='/dashboard'/>\r\n        }\r\n        return(\r\n            <Layout className=\"layout-main\">\r\n                <Header className=\"layout-main-top\">\r\n                    <HeaderBar />\r\n                </Header>\r\n                <Layout className=\"layout-main-bottom\">\r\n                    <Sider className=\"layout-main-bottom-left\">\r\n                        <SiderBar />\r\n                    </Sider>\r\n                    <Layout className=\"layout-main-bottom-right\">\r\n                        <Content className=\"layout-main-bottom-right-content\">\r\n                            <BreadCrumBar className=\"layout-main-bottom-right-content-bcb\"/>\r\n                            <Switch>\r\n                                <Redirect exact from='/' to='/dashboard' />\r\n                                <Route path='/dashboard' component={Dashboard}/>\r\n                                <Route path='/group' component={Group}/>\r\n                                <Route path='/department' component={Department}/>\r\n                                <Route path='/user' component={User}/>\r\n                                <Route path='/problemcategory' component={ProblemCategory}/>\r\n                                <Route path='/processedrecord' component={ProcessedRecord}/>\r\n                                <Route path='/applicationsoftWare' component={ApplicationSoftWare}/>\r\n                                <Route path='/printerrepair' component={PrinterRepair}/>\r\n                                <Route path='/cartriday' component={Cartriday}/>\r\n                                <Route path='/timeline' component={TimeLine}/>\r\n                                <Route path='/devicecategory' component={DeviceCategory}/>\r\n                                <Route path='/devicemodel' component={DeviceModel}/>\r\n                                <Route path='/installlocation' component={InstallLocation}/>\r\n                                <Route path='/deviceinfo' component={DeviceInfo}/>\r\n                                <Route path='/zlqk' component={Zlqk}/>\r\n                                <Route path='/zdqk' component={Zdqk}/>\r\n                                <Route path='/tablespace' component={TableSpace}/>\r\n                                <Route path='/locktables' component={LockTables}/>\r\n                                <Route path='/setting' component={Setting}/>\r\n                                <Route path='/bookcategory' component={BookCategory}/>\r\n                                <Route path='/book' component={Book}/>\r\n                                <Route path='/bookstock' component={BookStock}/>\r\n                                <Route path='/borrowrecord' component={BorrowRecord}/>\r\n                                <Route path='/developing' component={Developing}/>\r\n                                <Route component={NotFound}/>\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer className=\"layout-main-bottom-right-footer\" >\r\n                            <FooterBar />\r\n                        </Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {logout}\r\n)(Admin)","import React,{Component} from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\n\r\nimport Login from './containers/login'\r\nimport Admin from './containers/admin'\r\n\r\n\r\nexport default class App extends Component{\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/login' component={Login}></Route>\r\n                    <Route path='/' component={Admin}></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'core-js/es'  \r\nimport 'react-app-polyfill/ie9'  \r\nimport 'react-app-polyfill/stable'\r\n\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>), document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}